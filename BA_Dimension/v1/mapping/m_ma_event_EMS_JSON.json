{"Edges":[{"transformationType":"Source Definition","id":"e-0","source":"","target":"MA_EVENT_PRE"},{"transformationType":"Source Definition","id":"e-1","source":"","target":"MA_EVENT"},{"transformationType":"Source Qualifier","id":"e-2","source":"MA_EVENT","target":"SQ_Shortcut_to_MA_EVENT"},{"transformationType":"Source Qualifier","id":"e-3","source":"MA_EVENT_PRE","target":"SQ_Shortcut_to_MA_EVENT"},{"transformationType":"Filter","id":"e-4","source":"SQ_Shortcut_to_MA_EVENT","target":"FTR_MA_EVENT"},{"transformationType":"Update Strategy","id":"e-5","source":"FTR_MA_EVENT","target":"UPD_MA_EVENT"},{"transformationType":"Filter","id":"e-6","source":"SQ_Shortcut_to_MA_EVENT","target":"FTR_MA_EVENT_RESTATE_HIST"},{"transformationType":"Expression","id":"e-7","source":"FTR_MA_EVENT_RESTATE_HIST","target":"EXP_MA_EVENT_RESTATE_HIST"},{"transformationType":"Target Definition","id":"e-8","source":"UPD_MA_EVENT","target":"MA_EVENT"},{"transformationType":"Target Definition","id":"e-9","source":"EXP_MA_EVENT_RESTATE_HIST","target":"MA_EVENT_RESTATE_HIST"}],"Nodes":[{"data":{"transformationType":"Source Definition","label":"MA_EVENT_PRE","queries":["df_0=spark.sql(\"\"\"\n    SELECT\n        MA_EVENT_ID AS MA_EVENT_ID,\n        PRODUCT_ID AS PRODUCT_ID,\n        COUNTRY_CD AS COUNTRY_CD,\n        START_DT AS START_DT,\n        END_DT AS END_DT,\n        MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\n        MA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\n        LOCATION_ID AS LOCATION_ID,\n        MA_EVENT_DESC AS MA_EVENT_DESC,\n        EM_VENDOR_FUNDING_ID AS EM_VENDOR_FUNDING_ID,\n        EM_COMMENT AS EM_COMMENT,\n        EM_BILL_ALT_VENDOR_FLAG AS EM_BILL_ALT_VENDOR_FLAG,\n        EM_ALT_VENDOR_ID AS EM_ALT_VENDOR_ID,\n        EM_ALT_VENDOR_NAME AS EM_ALT_VENDOR_NAME,\n        EM_ALT_VENDOR_COUNTRY_CD AS EM_ALT_VENDOR_COUNTRY_CD,\n        EM_VENDOR_ID AS EM_VENDOR_ID,\n        EM_VENDOR_NAME AS EM_VENDOR_NAME,\n        EM_VENDOR_COUNTRY_CD AS EM_VENDOR_COUNTRY_CD,\n        MA_AMT AS MA_AMT,\n        MA_MAX_AMT AS MA_MAX_AMT,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        MA_EVENT_PRE\"\"\")","df_0.createOrReplaceTempView(\"MA_EVENT_PRE_0\")"]},"id":"MA_EVENT_PRE","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"MA_EVENT","queries":["df_1=spark.sql(\"\"\"\n    SELECT\n        MA_EVENT_ID AS MA_EVENT_ID,\n        OFFER_ID AS OFFER_ID,\n        SAP_DEPT_ID AS SAP_DEPT_ID,\n        PRODUCT_ID AS PRODUCT_ID,\n        COUNTRY_CD AS COUNTRY_CD,\n        START_DT AS START_DT,\n        END_DT AS END_DT,\n        MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\n        MA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\n        LOCATION_ID AS LOCATION_ID,\n        MOVEMENT_ID AS MOVEMENT_ID,\n        VALUATION_CLASS_CD AS VALUATION_CLASS_CD,\n        GL_ACCT_NBR AS GL_ACCT_NBR,\n        LOCATION_TYPE_ID AS LOCATION_TYPE_ID,\n        ROYALTY_BRAND_ID AS ROYALTY_BRAND_ID,\n        BRAND_CD AS BRAND_CD,\n        MA_FORMULA_CD AS MA_FORMULA_CD,\n        FISCAL_MO AS FISCAL_MO,\n        SAP_CATEGORY_ID AS SAP_CATEGORY_ID,\n        FROM_LOCATION_ID AS FROM_LOCATION_ID,\n        SOURCE_VENDOR_ID AS SOURCE_VENDOR_ID,\n        COMPANY_ID AS COMPANY_ID,\n        MA_EVENT_DESC AS MA_EVENT_DESC,\n        EM_VENDOR_FUNDING_ID AS EM_VENDOR_FUNDING_ID,\n        EM_COMMENT AS EM_COMMENT,\n        EM_BILL_ALT_VENDOR_FLAG AS EM_BILL_ALT_VENDOR_FLAG,\n        EM_ALT_VENDOR_ID AS EM_ALT_VENDOR_ID,\n        EM_ALT_VENDOR_NAME AS EM_ALT_VENDOR_NAME,\n        EM_ALT_VENDOR_COUNTRY_CD AS EM_ALT_VENDOR_COUNTRY_CD,\n        EM_VENDOR_ID AS EM_VENDOR_ID,\n        EM_VENDOR_NAME AS EM_VENDOR_NAME,\n        EM_VENDOR_COUNTRY_CD AS EM_VENDOR_COUNTRY_CD,\n        VENDOR_NAME_TXT AS VENDOR_NAME_TXT,\n        MA_PCT_IND AS MA_PCT_IND,\n        MA_AMT AS MA_AMT,\n        MA_MAX_AMT AS MA_MAX_AMT,\n        UPDATE_DT AS UPDATE_DT,\n        LOAD_DT AS LOAD_DT,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        MA_EVENT\"\"\")","df_1.createOrReplaceTempView(\"MA_EVENT_1\")"]},"id":"MA_EVENT","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Qualifier","label":"SQ_Shortcut_to_MA_EVENT","queries":["df_2=spark.sql(\"\"\"--Get Inserts\r\nSELECT ma_event_id, product_id, country_cd, start_dt, end_dt, ma_event_type_id,\r\n       ma_event_source_id, location_id, ma_event_desc, em_vendor_funding_id,\r\n       em_comment, em_bill_alt_vendor_flag, em_alt_vendor_id,\r\n       em_alt_vendor_name, em_alt_vendor_country_cd,\r\n       em_vendor_id, em_vendor_name, em_vendor_country_cd, ma_amt,\r\n       ma_max_amt, CURRENT_DATE update_dt, CURRENT_DATE load_dt,\r\n       'I' ins_upd_del_flag\r\n  FROM ma_event_pre\r\n WHERE ma_event_source_id = 1\r\n   AND ma_event_id NOT IN (SELECT ma_event_id\r\n                             FROM ma_event)\r\nUNION\r\n--Get Updates\r\nSELECT pre.*, CURRENT_DATE update_dt, e.load_dt,\r\n       CASE WHEN pre.product_id <> e.product_id OR\r\n                 pre.country_cd <> e.country_cd OR\r\n                 pre.start_dt <> e.start_dt OR\r\n                 pre.end_dt <> e.end_dt OR\r\n                 pre.location_id <> e.location_id OR\r\n                 pre.ma_event_type_id <> e.ma_event_type_id OR\r\n                 pre.ma_amt <> e.ma_amt\r\n            THEN 'U'\r\n            ELSE 'C'\r\n        END ins_upd_del_flag\r\n  FROM (SELECT ma_event_id, product_id, country_cd, start_dt, end_dt, ma_event_type_id,\r\n               ma_event_source_id, location_id, ma_event_desc,\r\n               em_vendor_funding_id, em_comment, em_bill_alt_vendor_flag,\r\n               em_alt_vendor_id, em_alt_vendor_name, em_alt_vendor_country_cd,\r\n               em_vendor_id, em_vendor_name, em_vendor_country_cd, ma_amt, ma_max_amt\r\n          FROM ma_event_pre\r\n        MINUS\r\n        SELECT ma_event_id, product_id, country_cd, start_dt, end_dt, ma_event_type_id,\r\n               ma_event_source_id, location_id, ma_event_desc,\r\n               em_vendor_funding_id, em_comment, em_bill_alt_vendor_flag,\r\n               em_alt_vendor_id, em_alt_vendor_name, em_alt_vendor_country_cd,\r\n               em_vendor_id, em_vendor_name, em_vendor_country_cd, ma_amt, ma_max_amt\r\n          FROM ma_event) pre,\r\n       ma_event e\r\n WHERE pre.ma_event_id = e.ma_event_id\r\nUNION\r\n--Get Update Record for MA_EVENT_RESTATE_HIST Table\r\nSELECT e.ma_event_id, e.product_id, e.country_cd, e.start_dt, e.end_dt, e.ma_event_type_id,\r\n       e.ma_event_source_id, e.location_id, e.ma_event_desc, e.em_vendor_funding_id,\r\n       e.em_comment, e.em_bill_alt_vendor_flag, e.em_alt_vendor_id,\r\n       e.em_alt_vendor_name, e.em_alt_vendor_country_cd,\r\n       e.em_vendor_id, e.em_vendor_name, e.em_vendor_country_cd, e.ma_amt,\r\n       e.ma_max_amt, CURRENT_DATE update_dt, e.load_dt,\r\n       'R' ins_upd_del_flag\r\n  FROM (SELECT ma_event_id, product_id, country_cd, start_dt, end_dt, ma_event_type_id,\r\n               ma_event_source_id, location_id, ma_event_desc,\r\n               em_vendor_funding_id, em_comment, em_bill_alt_vendor_flag,\r\n               em_alt_vendor_id, em_alt_vendor_name, em_alt_vendor_country_cd,\r\n               em_vendor_id, em_vendor_name, em_vendor_country_cd, ma_amt, ma_max_amt\r\n          FROM ma_event_pre\r\n        MINUS\r\n        SELECT ma_event_id, product_id, country_cd, start_dt, end_dt, ma_event_type_id,\r\n               ma_event_source_id, location_id, ma_event_desc,\r\n               em_vendor_funding_id, em_comment, em_bill_alt_vendor_flag,\r\n               em_alt_vendor_id, em_alt_vendor_name, em_alt_vendor_country_cd,\r\n               em_vendor_id, em_vendor_name, em_vendor_country_cd, ma_amt, ma_max_amt\r\n          FROM ma_event) pre,\r\n       ma_event e\r\n WHERE pre.ma_event_id = e.ma_event_id\r\n   AND (pre.product_id <> e.product_id OR\r\n        pre.country_cd <> e.country_cd OR\r\n        pre.start_dt <> e.start_dt OR\r\n        pre.end_dt <> e.end_dt OR\r\n        pre.location_id <> e.location_id OR\r\n        pre.ma_event_type_id <> e.ma_event_type_id OR\r\n        pre.ma_amt <> e.ma_amt)\r\nUNION\r\n--Get Deletes\r\nSELECT ma_event_id, product_id, country_cd, start_dt, end_dt,\r\n       ma_event_type_id, ma_event_source_id, location_id, ma_event_desc,\r\n       em_vendor_funding_id, em_comment, em_bill_alt_vendor_flag, em_alt_vendor_id,\r\n       em_alt_vendor_name, em_alt_vendor_country_cd, em_vendor_id, em_vendor_name,\r\n       em_vendor_country_cd, ma_amt, ma_max_amt, CURRENT_DATE update_dt, load_dt,\r\n       'D' ins_upd_del_flag\r\n  FROM ma_event\r\n WHERE ma_event_source_id = 1\r\n   AND start_dt >= (SELECT week_dt + 1 FROM days WHERE day_dt = CURRENT_DATE - 96)\r\n   AND ma_event_id NOT IN (SELECT ma_event_id\r\n                             FROM ma_event_pre)\"\"\")","df_2.createOrReplaceTempView(\"SQ_Shortcut_to_MA_EVENT_2\")"]},"id":"SQ_Shortcut_to_MA_EVENT","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Qualifier","label":"SQ_Shortcut_to_MA_EVENT","queries":["df_2=spark.sql(\"\"\"--Get Inserts\r\nSELECT ma_event_id, product_id, country_cd, start_dt, end_dt, ma_event_type_id,\r\n       ma_event_source_id, location_id, ma_event_desc, em_vendor_funding_id,\r\n       em_comment, em_bill_alt_vendor_flag, em_alt_vendor_id,\r\n       em_alt_vendor_name, em_alt_vendor_country_cd,\r\n       em_vendor_id, em_vendor_name, em_vendor_country_cd, ma_amt,\r\n       ma_max_amt, CURRENT_DATE update_dt, CURRENT_DATE load_dt,\r\n       'I' ins_upd_del_flag\r\n  FROM ma_event_pre\r\n WHERE ma_event_source_id = 1\r\n   AND ma_event_id NOT IN (SELECT ma_event_id\r\n                             FROM ma_event)\r\nUNION\r\n--Get Updates\r\nSELECT pre.*, CURRENT_DATE update_dt, e.load_dt,\r\n       CASE WHEN pre.product_id <> e.product_id OR\r\n                 pre.country_cd <> e.country_cd OR\r\n                 pre.start_dt <> e.start_dt OR\r\n                 pre.end_dt <> e.end_dt OR\r\n                 pre.location_id <> e.location_id OR\r\n                 pre.ma_event_type_id <> e.ma_event_type_id OR\r\n                 pre.ma_amt <> e.ma_amt\r\n            THEN 'U'\r\n            ELSE 'C'\r\n        END ins_upd_del_flag\r\n  FROM (SELECT ma_event_id, product_id, country_cd, start_dt, end_dt, ma_event_type_id,\r\n               ma_event_source_id, location_id, ma_event_desc,\r\n               em_vendor_funding_id, em_comment, em_bill_alt_vendor_flag,\r\n               em_alt_vendor_id, em_alt_vendor_name, em_alt_vendor_country_cd,\r\n               em_vendor_id, em_vendor_name, em_vendor_country_cd, ma_amt, ma_max_amt\r\n          FROM ma_event_pre\r\n        MINUS\r\n        SELECT ma_event_id, product_id, country_cd, start_dt, end_dt, ma_event_type_id,\r\n               ma_event_source_id, location_id, ma_event_desc,\r\n               em_vendor_funding_id, em_comment, em_bill_alt_vendor_flag,\r\n               em_alt_vendor_id, em_alt_vendor_name, em_alt_vendor_country_cd,\r\n               em_vendor_id, em_vendor_name, em_vendor_country_cd, ma_amt, ma_max_amt\r\n          FROM ma_event) pre,\r\n       ma_event e\r\n WHERE pre.ma_event_id = e.ma_event_id\r\nUNION\r\n--Get Update Record for MA_EVENT_RESTATE_HIST Table\r\nSELECT e.ma_event_id, e.product_id, e.country_cd, e.start_dt, e.end_dt, e.ma_event_type_id,\r\n       e.ma_event_source_id, e.location_id, e.ma_event_desc, e.em_vendor_funding_id,\r\n       e.em_comment, e.em_bill_alt_vendor_flag, e.em_alt_vendor_id,\r\n       e.em_alt_vendor_name, e.em_alt_vendor_country_cd,\r\n       e.em_vendor_id, e.em_vendor_name, e.em_vendor_country_cd, e.ma_amt,\r\n       e.ma_max_amt, CURRENT_DATE update_dt, e.load_dt,\r\n       'R' ins_upd_del_flag\r\n  FROM (SELECT ma_event_id, product_id, country_cd, start_dt, end_dt, ma_event_type_id,\r\n               ma_event_source_id, location_id, ma_event_desc,\r\n               em_vendor_funding_id, em_comment, em_bill_alt_vendor_flag,\r\n               em_alt_vendor_id, em_alt_vendor_name, em_alt_vendor_country_cd,\r\n               em_vendor_id, em_vendor_name, em_vendor_country_cd, ma_amt, ma_max_amt\r\n          FROM ma_event_pre\r\n        MINUS\r\n        SELECT ma_event_id, product_id, country_cd, start_dt, end_dt, ma_event_type_id,\r\n               ma_event_source_id, location_id, ma_event_desc,\r\n               em_vendor_funding_id, em_comment, em_bill_alt_vendor_flag,\r\n               em_alt_vendor_id, em_alt_vendor_name, em_alt_vendor_country_cd,\r\n               em_vendor_id, em_vendor_name, em_vendor_country_cd, ma_amt, ma_max_amt\r\n          FROM ma_event) pre,\r\n       ma_event e\r\n WHERE pre.ma_event_id = e.ma_event_id\r\n   AND (pre.product_id <> e.product_id OR\r\n        pre.country_cd <> e.country_cd OR\r\n        pre.start_dt <> e.start_dt OR\r\n        pre.end_dt <> e.end_dt OR\r\n        pre.location_id <> e.location_id OR\r\n        pre.ma_event_type_id <> e.ma_event_type_id OR\r\n        pre.ma_amt <> e.ma_amt)\r\nUNION\r\n--Get Deletes\r\nSELECT ma_event_id, product_id, country_cd, start_dt, end_dt,\r\n       ma_event_type_id, ma_event_source_id, location_id, ma_event_desc,\r\n       em_vendor_funding_id, em_comment, em_bill_alt_vendor_flag, em_alt_vendor_id,\r\n       em_alt_vendor_name, em_alt_vendor_country_cd, em_vendor_id, em_vendor_name,\r\n       em_vendor_country_cd, ma_amt, ma_max_amt, CURRENT_DATE update_dt, load_dt,\r\n       'D' ins_upd_del_flag\r\n  FROM ma_event\r\n WHERE ma_event_source_id = 1\r\n   AND start_dt >= (SELECT week_dt + 1 FROM days WHERE day_dt = CURRENT_DATE - 96)\r\n   AND ma_event_id NOT IN (SELECT ma_event_id\r\n                             FROM ma_event_pre)\"\"\")","df_2.createOrReplaceTempView(\"SQ_Shortcut_to_MA_EVENT_2\")"]},"id":"SQ_Shortcut_to_MA_EVENT","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Filter","label":"FTR_MA_EVENT","queries":["df_3=spark.sql(\"\"\"\n    SELECT\n        MA_EVENT_ID AS MA_EVENT_ID,\n        PRODUCT_ID AS PRODUCT_ID,\n        COUNTRY_CD AS COUNTRY_CD,\n        START_DT AS START_DT,\n        END_DT AS END_DT,\n        MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\n        MA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\n        LOCATION_ID AS LOCATION_ID,\n        MA_EVENT_DESC AS MA_EVENT_DESC,\n        EM_VENDOR_FUNDING_ID AS EM_VENDOR_FUNDING_ID,\n        EM_COMMENT AS EM_COMMENT,\n        EM_BILL_ALT_VENDOR_FLAG AS EM_BILL_ALT_VENDOR_FLAG,\n        EM_ALT_VENDOR_ID AS EM_ALT_VENDOR_ID,\n        EM_ALT_VENDOR_NAME AS EM_ALT_VENDOR_NAME,\n        EM_ALT_VENDOR_COUNTRY_CD AS EM_ALT_VENDOR_COUNTRY_CD,\n        EM_VENDOR_ID AS EM_VENDOR_ID,\n        EM_VENDOR_NAME AS EM_VENDOR_NAME,\n        EM_VENDOR_COUNTRY_CD AS EM_VENDOR_COUNTRY_CD,\n        MA_AMT AS MA_AMT,\n        MA_MAX_AMT AS MA_MAX_AMT,\n        UPDATE_DT AS UPDATE_DT,\n        LOAD_DT AS LOAD_DT,\n        INS_UPD_DEL_FLAG AS INS_UPD_DEL_FLAG,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        SQ_Shortcut_to_MA_EVENT_2 \n    WHERE\n        INS_UPD_DEL_FLAG <> 'R'\"\"\")","df_3.createOrReplaceTempView(\"FTR_MA_EVENT_3\")"]},"id":"FTR_MA_EVENT","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Update Strategy","label":"UPD_MA_EVENT","queries":["df_4=spark.sql(\"\"\"\n    SELECT\n        MA_EVENT_ID AS MA_EVENT_ID,\n        PRODUCT_ID AS PRODUCT_ID,\n        COUNTRY_CD AS COUNTRY_CD,\n        START_DT AS START_DT,\n        END_DT AS END_DT,\n        MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\n        MA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\n        LOCATION_ID AS LOCATION_ID,\n        MA_EVENT_DESC AS MA_EVENT_DESC,\n        EM_VENDOR_FUNDING_ID AS EM_VENDOR_FUNDING_ID,\n        EM_COMMENT AS EM_COMMENT,\n        EM_BILL_ALT_VENDOR_FLAG AS EM_BILL_ALT_VENDOR_FLAG,\n        EM_ALT_VENDOR_ID AS EM_ALT_VENDOR_ID,\n        EM_ALT_VENDOR_NAME AS EM_ALT_VENDOR_NAME,\n        EM_ALT_VENDOR_COUNTRY_CD AS EM_ALT_VENDOR_COUNTRY_CD,\n        EM_VENDOR_ID AS EM_VENDOR_ID,\n        EM_VENDOR_NAME AS EM_VENDOR_NAME,\n        EM_VENDOR_COUNTRY_CD AS EM_VENDOR_COUNTRY_CD,\n        MA_AMT AS MA_AMT,\n        MA_MAX_AMT AS MA_MAX_AMT,\n        UPDATE_DT AS UPDATE_DT,\n        LOAD_DT AS LOAD_DT,\n        INS_UPD_DEL_FLAG AS INS_UPD_DEL_FLAG,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        FTR_MA_EVENT_3\"\"\")","df_4.createOrReplaceTempView(\"UPD_MA_EVENT_4\")"]},"id":"UPD_MA_EVENT","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Filter","label":"FTR_MA_EVENT_RESTATE_HIST","queries":["df_5=spark.sql(\"\"\"\n    SELECT\n        LOAD_DT AS LOAD_DT,\n        MA_EVENT_ID AS MA_EVENT_ID,\n        PRODUCT_ID AS PRODUCT_ID,\n        COUNTRY_CD AS COUNTRY_CD,\n        START_DT AS START_DT,\n        END_DT AS END_DT,\n        MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\n        MA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\n        LOCATION_ID AS LOCATION_ID,\n        MA_EVENT_DESC AS MA_EVENT_DESC,\n        EM_VENDOR_FUNDING_ID AS EM_VENDOR_FUNDING_ID,\n        EM_COMMENT AS EM_COMMENT,\n        EM_BILL_ALT_VENDOR_FLAG AS EM_BILL_ALT_VENDOR_FLAG,\n        EM_ALT_VENDOR_ID AS EM_ALT_VENDOR_ID,\n        EM_ALT_VENDOR_NAME AS EM_ALT_VENDOR_NAME,\n        EM_ALT_VENDOR_COUNTRY_CD AS EM_ALT_VENDOR_COUNTRY_CD,\n        EM_VENDOR_ID AS EM_VENDOR_ID,\n        EM_VENDOR_NAME AS EM_VENDOR_NAME,\n        EM_VENDOR_COUNTRY_CD AS EM_VENDOR_COUNTRY_CD,\n        MA_AMT AS MA_AMT,\n        MA_MAX_AMT AS MA_MAX_AMT,\n        INS_UPD_DEL_FLAG AS INS_UPD_DEL_FLAG,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        SQ_Shortcut_to_MA_EVENT_2 \n    WHERE\n        INS_UPD_DEL_FLAG = 'I' \n        OR INS_UPD_DEL_FLAG = 'R' \n        OR INS_UPD_DEL_FLAG = 'D'\"\"\")","df_5.createOrReplaceTempView(\"FTR_MA_EVENT_RESTATE_HIST_5\")"]},"id":"FTR_MA_EVENT_RESTATE_HIST","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Expression","label":"EXP_MA_EVENT_RESTATE_HIST","queries":["df_6=spark.sql(\"\"\"\n    SELECT\n        LOAD_DT AS LOAD_DT,\n        MA_EVENT_ID AS MA_EVENT_ID,\n        PRODUCT_ID AS PRODUCT_ID,\n        COUNTRY_CD AS COUNTRY_CD,\n        START_DT AS START_DT,\n        END_DT AS END_DT,\n        MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\n        MA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\n        LOCATION_ID AS LOCATION_ID,\n        MA_EVENT_DESC AS MA_EVENT_DESC,\n        EM_VENDOR_FUNDING_ID AS EM_VENDOR_FUNDING_ID,\n        EM_COMMENT AS EM_COMMENT,\n        EM_BILL_ALT_VENDOR_FLAG AS EM_BILL_ALT_VENDOR_FLAG,\n        EM_ALT_VENDOR_ID AS EM_ALT_VENDOR_ID,\n        EM_ALT_VENDOR_NAME AS EM_ALT_VENDOR_NAME,\n        EM_ALT_VENDOR_COUNTRY_CD AS EM_ALT_VENDOR_COUNTRY_CD,\n        EM_VENDOR_ID AS EM_VENDOR_ID,\n        EM_VENDOR_NAME AS EM_VENDOR_NAME,\n        EM_VENDOR_COUNTRY_CD AS EM_VENDOR_COUNTRY_CD,\n        MA_AMT AS MA_AMT,\n        MA_MAX_AMT AS MA_MAX_AMT,\n        IFF(INS_UPD_DEL_FLAG = 'R',\n        'U',\n        INS_UPD_DEL_FLAG) AS INS_UPD_DEL_FLAG_out,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        FTR_MA_EVENT_RESTATE_HIST_5\"\"\")","df_6.createOrReplaceTempView(\"EXP_MA_EVENT_RESTATE_HIST_6\")"]},"id":"EXP_MA_EVENT_RESTATE_HIST","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Target Definition","label":"MA_EVENT","queries":["spark.sql(\"\"\"INSERT INTO MA_EVENT SELECT MA_EVENT_ID AS MA_EVENT_ID,\nOFFER_ID AS OFFER_ID,\nSAP_DEPT_ID AS SAP_DEPT_ID,\nPRODUCT_ID AS PRODUCT_ID,\nCOUNTRY_CD AS COUNTRY_CD,\nSTART_DT AS START_DT,\nEND_DT AS END_DT,\nMA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\nMA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\nLOCATION_ID AS LOCATION_ID,\nMOVEMENT_ID AS MOVEMENT_ID,\nVALUATION_CLASS_CD AS VALUATION_CLASS_CD,\nGL_ACCT_NBR AS GL_ACCT_NBR,\nLOCATION_TYPE_ID AS LOCATION_TYPE_ID,\nROYALTY_BRAND_ID AS ROYALTY_BRAND_ID,\nBRAND_CD AS BRAND_CD,\nMA_FORMULA_CD AS MA_FORMULA_CD,\nFISCAL_MO AS FISCAL_MO,\nSAP_CATEGORY_ID AS SAP_CATEGORY_ID,\nFROM_LOCATION_ID AS FROM_LOCATION_ID,\nSOURCE_VENDOR_ID AS SOURCE_VENDOR_ID,\nCOMPANY_ID AS COMPANY_ID,\nMA_EVENT_DESC AS MA_EVENT_DESC,\nEM_VENDOR_FUNDING_ID AS EM_VENDOR_FUNDING_ID,\nEM_COMMENT AS EM_COMMENT,\nEM_BILL_ALT_VENDOR_FLAG AS EM_BILL_ALT_VENDOR_FLAG,\nEM_ALT_VENDOR_ID AS EM_ALT_VENDOR_ID,\nEM_ALT_VENDOR_NAME AS EM_ALT_VENDOR_NAME,\nEM_ALT_VENDOR_COUNTRY_CD AS EM_ALT_VENDOR_COUNTRY_CD,\nEM_VENDOR_ID AS EM_VENDOR_ID,\nEM_VENDOR_NAME AS EM_VENDOR_NAME,\nEM_VENDOR_COUNTRY_CD AS EM_VENDOR_COUNTRY_CD,\nVENDOR_NAME_TXT AS VENDOR_NAME_TXT,\nMA_PCT_IND AS MA_PCT_IND,\nNEW_MA_AMT AS MA_AMT,\nMA_MAX_AMT AS MA_MAX_AMT,\nUPDATE_DT AS UPDATE_DT,\nLOAD_DT AS LOAD_DT FROM UPD_MA_EVENT_4\"\"\")"]},"id":"MA_EVENT","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Target Definition","label":"MA_EVENT_RESTATE_HIST","queries":["spark.sql(\"\"\"INSERT INTO MA_EVENT_RESTATE_HIST SELECT LOAD_DT AS LOAD_DT,\nMA_EVENT_ID AS MA_EVENT_ID,\nOFFER_ID AS OFFER_ID,\nSAP_DEPT_ID AS SAP_DEPT_ID,\nPRODUCT_ID AS PRODUCT_ID,\nCOUNTRY_CD AS COUNTRY_CD,\nSTART_DT AS START_DT,\nEND_DT AS END_DT,\nMA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\nMA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\nLOCATION_ID AS LOCATION_ID,\nMOVEMENT_ID AS MOVEMENT_ID,\nVALUATION_CLASS_CD AS VALUATION_CLASS_CD,\nGL_ACCT_NBR AS GL_ACCT_NBR,\nLOCATION_TYPE_ID AS LOCATION_TYPE_ID,\nROYALTY_BRAND_ID AS ROYALTY_BRAND_ID,\nBRAND_CD AS BRAND_CD,\nMA_FORMULA_CD AS MA_FORMULA_CD,\nFISCAL_MO AS FISCAL_MO,\nSAP_CATEGORY_ID AS SAP_CATEGORY_ID,\nFROM_LOCATION_ID AS FROM_LOCATION_ID,\nSOURCE_VENDOR_ID AS SOURCE_VENDOR_ID,\nCOMPANY_ID AS COMPANY_ID,\nMA_EVENT_DESC AS MA_EVENT_DESC,\nEM_VENDOR_FUNDING_ID AS EM_VENDOR_FUNDING_ID,\nEM_COMMENT AS EM_COMMENT,\nEM_BILL_ALT_VENDOR_FLAG AS EM_BILL_ALT_VENDOR_FLAG,\nEM_ALT_VENDOR_ID AS EM_ALT_VENDOR_ID,\nEM_ALT_VENDOR_NAME AS EM_ALT_VENDOR_NAME,\nEM_ALT_VENDOR_COUNTRY_CD AS EM_ALT_VENDOR_COUNTRY_CD,\nEM_VENDOR_ID AS EM_VENDOR_ID,\nEM_VENDOR_NAME AS EM_VENDOR_NAME,\nEM_VENDOR_COUNTRY_CD AS EM_VENDOR_COUNTRY_CD,\nVENDOR_NAME_TXT AS VENDOR_NAME_TXT,\nMA_PCT_IND AS MA_PCT_IND,\nORIG_MA_AMT AS MA_AMT,\nMA_MAX_AMT AS MA_MAX_AMT,\nINS_UPD_DEL_FLAG AS INS_UPD_DEL_FLAG FROM EXP_MA_EVENT_RESTATE_HIST_6\"\"\")"]},"id":"MA_EVENT_RESTATE_HIST","position":{"x":0,"y":0},"type":"normalNode"}]}