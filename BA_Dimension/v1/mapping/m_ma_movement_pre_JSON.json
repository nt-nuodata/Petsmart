{"Edges":[{"transformationType":"Source Definition","id":"e-0","source":"","target":"MA_EVENT"},{"transformationType":"Source Definition","id":"e-1","source":"","target":"EM_EVENT"},{"transformationType":"Source Definition","id":"e-2","source":"","target":"MA_MOVEMENT_DAY"},{"transformationType":"Source Definition","id":"e-3","source":"","target":"MOVEMENT_INFO"},{"transformationType":"Source Qualifier","id":"e-4","source":"MOVEMENT_INFO","target":"SQ_Shortcut_to_MA_MOVEMENT_DAY"},{"transformationType":"Source Qualifier","id":"e-5","source":"MA_MOVEMENT_DAY","target":"SQ_Shortcut_to_MA_MOVEMENT_DAY"},{"transformationType":"Source Definition","id":"e-6","source":"","target":"SKU_PROFILE"},{"transformationType":"Source Definition","id":"e-7","source":"","target":"SITE_PROFILE"},{"transformationType":"Source Definition","id":"e-8","source":"","target":"MOVEMENT_DAY"},{"transformationType":"Target Definition","id":"e-9","source":"SQ_Shortcut_to_MA_MOVEMENT_DAY","target":"MA_MOVEMENT_PRE"}],"Nodes":[{"data":{"transformationType":"Source Definition","label":"MA_EVENT","queries":["df_0=spark.sql(\"\"\"\n    SELECT\n        MA_EVENT_ID AS MA_EVENT_ID,\n        OFFER_ID AS OFFER_ID,\n        SAP_DEPT_ID AS SAP_DEPT_ID,\n        PRODUCT_ID AS PRODUCT_ID,\n        COUNTRY_CD AS COUNTRY_CD,\n        START_DT AS START_DT,\n        END_DT AS END_DT,\n        MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\n        MA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\n        LOCATION_ID AS LOCATION_ID,\n        MOVEMENT_ID AS MOVEMENT_ID,\n        VALUATION_CLASS_CD AS VALUATION_CLASS_CD,\n        GL_ACCT_NBR AS GL_ACCT_NBR,\n        LOCATION_TYPE_ID AS LOCATION_TYPE_ID,\n        ROYALTY_BRAND_ID AS ROYALTY_BRAND_ID,\n        BRAND_CD AS BRAND_CD,\n        MA_FORMULA_CD AS MA_FORMULA_CD,\n        FISCAL_MO AS FISCAL_MO,\n        SAP_CATEGORY_ID AS SAP_CATEGORY_ID,\n        FROM_LOCATION_ID AS FROM_LOCATION_ID,\n        SOURCE_VENDOR_ID AS SOURCE_VENDOR_ID,\n        COMPANY_ID AS COMPANY_ID,\n        MA_EVENT_DESC AS MA_EVENT_DESC,\n        EM_VENDOR_FUNDING_ID AS EM_VENDOR_FUNDING_ID,\n        EM_COMMENT AS EM_COMMENT,\n        EM_BILL_ALT_VENDOR_FLAG AS EM_BILL_ALT_VENDOR_FLAG,\n        EM_ALT_VENDOR_ID AS EM_ALT_VENDOR_ID,\n        EM_ALT_VENDOR_NAME AS EM_ALT_VENDOR_NAME,\n        EM_ALT_VENDOR_COUNTRY_CD AS EM_ALT_VENDOR_COUNTRY_CD,\n        EM_VENDOR_ID AS EM_VENDOR_ID,\n        EM_VENDOR_NAME AS EM_VENDOR_NAME,\n        EM_VENDOR_COUNTRY_CD AS EM_VENDOR_COUNTRY_CD,\n        VENDOR_NAME_TXT AS VENDOR_NAME_TXT,\n        MA_PCT_IND AS MA_PCT_IND,\n        MA_AMT AS MA_AMT,\n        MA_MAX_AMT AS MA_MAX_AMT,\n        UPDATE_DT AS UPDATE_DT,\n        LOAD_DT AS LOAD_DT,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        MA_EVENT\"\"\")","df_0.createOrReplaceTempView(\"MA_EVENT_0\")"]},"id":"MA_EVENT","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"EM_EVENT","queries":["df_1=spark.sql(\"\"\"\n    SELECT\n        EM_EVENT_ID AS EM_EVENT_ID,\n        EVENT_NAME AS EVENT_NAME,\n        EVENT_DESC AS EVENT_DESC,\n        EVENT_START_DT AS EVENT_START_DT,\n        EVENT_END_DT AS EVENT_END_DT,\n        EVENT_LOCK_DT AS EVENT_LOCK_DT,\n        EVENT_US_LOCK_DT AS EVENT_US_LOCK_DT,\n        EVENT_TURN_IN_DT AS EVENT_TURN_IN_DT,\n        EVENT_DEFAULT_START_DT AS EVENT_DEFAULT_START_DT,\n        EVENT_DEFAULT_END_DT AS EVENT_DEFAULT_END_DT,\n        POG_ID_SUFFIX AS POG_ID_SUFFIX,\n        EM_MODIFIED_BY AS EM_MODIFIED_BY,\n        EM_MODIFIED_DT AS EM_MODIFIED_DT,\n        STANDARD_FLAG AS STANDARD_FLAG,\n        GENERATE_PRICING_FILES_FLAG AS GENERATE_PRICING_FILES_FLAG,\n        EM_PURGED_FLAG AS EM_PURGED_FLAG,\n        UPDATE_DT AS UPDATE_DT,\n        LOAD_DT AS LOAD_DT,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        EM_EVENT\"\"\")","df_1.createOrReplaceTempView(\"EM_EVENT_1\")"]},"id":"EM_EVENT","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"MA_MOVEMENT_DAY","queries":["df_2=spark.sql(\"\"\"\n    SELECT\n        DAY_DT AS DAY_DT,\n        PRODUCT_ID AS PRODUCT_ID,\n        LOCATION_ID AS LOCATION_ID,\n        MOVEMENT_ID AS MOVEMENT_ID,\n        PO_NBR AS PO_NBR,\n        PO_LINE_NBR AS PO_LINE_NBR,\n        MA_EVENT_ID AS MA_EVENT_ID,\n        STO_TYPE_ID AS STO_TYPE_ID,\n        MA_TRANS_AMT AS MA_TRANS_AMT,\n        MA_TRANS_COST AS MA_TRANS_COST,\n        MA_TRANS_QTY AS MA_TRANS_QTY,\n        SALES_ADJ_AMT AS SALES_ADJ_AMT,\n        EXCH_RATE_PCT AS EXCH_RATE_PCT,\n        UPDATE_DT AS UPDATE_DT,\n        LOAD_DT AS LOAD_DT,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        MA_MOVEMENT_DAY\"\"\")","df_2.createOrReplaceTempView(\"MA_MOVEMENT_DAY_2\")"]},"id":"MA_MOVEMENT_DAY","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"MOVEMENT_INFO","queries":["df_3=spark.sql(\"\"\"\n    SELECT\n        MOVEMENT_ID AS MOVEMENT_ID,\n        MOVE_CLASS_DESC AS MOVE_CLASS_DESC,\n        MOVE_CLASS_ID AS MOVE_CLASS_ID,\n        MOVE_REASON_DESC AS MOVE_REASON_DESC,\n        MOVE_REASON_ID AS MOVE_REASON_ID,\n        MOVE_TYPE_DESC AS MOVE_TYPE_DESC,\n        MOVE_TYPE_ID AS MOVE_TYPE_ID,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        MOVEMENT_INFO\"\"\")","df_3.createOrReplaceTempView(\"MOVEMENT_INFO_3\")"]},"id":"MOVEMENT_INFO","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Qualifier","label":"SQ_Shortcut_to_MA_MOVEMENT_DAY","queries":["df_4=spark.sql(\"\"\"\n    SELECT\n        pre.day_dt,\n        pre.product_id,\n        pre.location_id,\n        pre.movement_id,\n        pre.po_nbr,\n        pre.po_line_nbr,\n        pre.ma_event_id,\n        pre.sto_type_id,\n        pre.ma_trans_amt,\n        pre.ma_trans_cost,\n        pre.ma_trans_qty,\n        pre.exch_rate_pct,\n        CURRENT_DATE update_dt,\n        NVL(mmd.load_dt,\n        CURRENT_DATE) load_dt,\n        CASE \n            WHEN mmd.day_dt IS NULL THEN 'I' \n            ELSE 'U' \n        END ins_upd_flag \n    FROM\n        (SELECT\n            md.day_dt,\n            md.product_id,\n            md.location_id,\n            md.movement_id,\n            md.po_nbr,\n            md.po_line_nbr,\n            e.ma_event_id,\n            md.sto_type_id,\n            md.trans_amt * e.ma_amt ma_trans_amt,\n            md.trans_cost * e.ma_amt ma_trans_cost,\n            md.trans_qty * (e.ma_amt / ABS(e.ma_amt)) ma_trans_qty,\n            md.exch_rate_pct \n        FROM\n            movement_day md \n        JOIN\n            movement_info mi \n                ON md.movement_id = mi.movement_id \n        JOIN\n            ma_event e \n                ON md.day_dt BETWEEN e.start_dt AND e.end_dt \n                AND md.product_id = e.product_id \n        JOIN\n            site_profile sp \n                ON md.location_id = sp.location_id \n                AND NVL(e.country_cd,\n            sp.country_cd) = sp.country_cd \n        JOIN\n            sku_profile sku \n                ON md.product_id = sku.product_id \n        LEFT JOIN\n            USR_STORE_ATTRIBUTES USA \n                ON md.LOCATION_ID = USA.LOCATION_ID \n        WHERE\n            e.ma_event_source_id = 5 \n            AND sp.location_type_id = 8 \n            AND USA.VET_TYPE_ID IN (\n                1, 2\n            ) \n            AND sku.valuation_class_cd = '3100' \n            AND mi.move_type_id IN (\n                701, 702, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 917, 918, 921, 922, 935, 936, 937, 938\n            ) \n            AND (\n                (\n                    md.update_dt = CURRENT_DATE \n                    AND md.day_dt < CURRENT_DATE\n                ) \n                OR (\n                    md.day_dt = CURRENT_DATE - 1 \n                    AND md.update_dt <> CURRENT_DATE\n                )\n            ) \n        UNION\n        SELECT\n            md.day_dt,\n            md.product_id,\n            md.location_id,\n            md.movement_id,\n            md.po_nbr,\n            md.po_line_nbr,\n            e.ma_event_id,\n            md.sto_type_id,\n            md.trans_amt * (e.ma_amt / 100.0) ma_trans_amt,\n            md.trans_cost * (e.ma_amt / 100.0) ma_trans_cost,\n            md.trans_qty ma_trans_qty,\n            md.exch_rate_pct \n        FROM\n            movement_day md \n        JOIN\n            sku_profile sku \n                ON md.product_id = sku.product_id \n        JOIN\n            site_profile site \n                ON md.location_id = site.location_id \n        JOIN\n            ma_event e \n                ON md.day_dt BETWEEN e.start_dt AND e.end_dt \n                AND md.movement_id = e.movement_id \n                AND sku.valuation_class_cd = e.valuation_class_cd \n                AND site.location_type_id = e.location_type_id \n        WHERE\n            e.ma_event_source_id = 8 \n            AND (\n                (\n                    md.update_dt = CURRENT_DATE \n                    AND md.day_dt < CURRENT_DATE\n                ) \n                OR (\n                    md.day_dt = CURRENT_DATE - 1 \n                    AND md.update_dt <> CURRENT_DATE\n                )\n            )\n    ) pre \nLEFT OUTER JOIN\n    ma_movement_day mmd \n        ON pre.day_dt = mmd.day_dt \n        AND pre.product_id = mmd.product_id \n        AND pre.location_id = mmd.location_id \n        AND pre.movement_id = mmd.movement_id \n        AND pre.po_nbr = mmd.po_nbr \n        AND pre.po_line_nbr = mmd.po_line_nbr \n        AND pre.ma_event_id = mmd.ma_event_id\"\"\")","df_4.createOrReplaceTempView(\"SQ_Shortcut_to_MA_MOVEMENT_DAY_4\")"]},"id":"SQ_Shortcut_to_MA_MOVEMENT_DAY","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Qualifier","label":"SQ_Shortcut_to_MA_MOVEMENT_DAY","queries":["df_4=spark.sql(\"\"\"\n    SELECT\n        pre.day_dt,\n        pre.product_id,\n        pre.location_id,\n        pre.movement_id,\n        pre.po_nbr,\n        pre.po_line_nbr,\n        pre.ma_event_id,\n        pre.sto_type_id,\n        pre.ma_trans_amt,\n        pre.ma_trans_cost,\n        pre.ma_trans_qty,\n        pre.exch_rate_pct,\n        CURRENT_DATE update_dt,\n        NVL(mmd.load_dt,\n        CURRENT_DATE) load_dt,\n        CASE \n            WHEN mmd.day_dt IS NULL THEN 'I' \n            ELSE 'U' \n        END ins_upd_flag \n    FROM\n        (SELECT\n            md.day_dt,\n            md.product_id,\n            md.location_id,\n            md.movement_id,\n            md.po_nbr,\n            md.po_line_nbr,\n            e.ma_event_id,\n            md.sto_type_id,\n            md.trans_amt * e.ma_amt ma_trans_amt,\n            md.trans_cost * e.ma_amt ma_trans_cost,\n            md.trans_qty * (e.ma_amt / ABS(e.ma_amt)) ma_trans_qty,\n            md.exch_rate_pct \n        FROM\n            movement_day md \n        JOIN\n            movement_info mi \n                ON md.movement_id = mi.movement_id \n        JOIN\n            ma_event e \n                ON md.day_dt BETWEEN e.start_dt AND e.end_dt \n                AND md.product_id = e.product_id \n        JOIN\n            site_profile sp \n                ON md.location_id = sp.location_id \n                AND NVL(e.country_cd,\n            sp.country_cd) = sp.country_cd \n        JOIN\n            sku_profile sku \n                ON md.product_id = sku.product_id \n        LEFT JOIN\n            USR_STORE_ATTRIBUTES USA \n                ON md.LOCATION_ID = USA.LOCATION_ID \n        WHERE\n            e.ma_event_source_id = 5 \n            AND sp.location_type_id = 8 \n            AND USA.VET_TYPE_ID IN (\n                1, 2\n            ) \n            AND sku.valuation_class_cd = '3100' \n            AND mi.move_type_id IN (\n                701, 702, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 917, 918, 921, 922, 935, 936, 937, 938\n            ) \n            AND (\n                (\n                    md.update_dt = CURRENT_DATE \n                    AND md.day_dt < CURRENT_DATE\n                ) \n                OR (\n                    md.day_dt = CURRENT_DATE - 1 \n                    AND md.update_dt <> CURRENT_DATE\n                )\n            ) \n        UNION\n        SELECT\n            md.day_dt,\n            md.product_id,\n            md.location_id,\n            md.movement_id,\n            md.po_nbr,\n            md.po_line_nbr,\n            e.ma_event_id,\n            md.sto_type_id,\n            md.trans_amt * (e.ma_amt / 100.0) ma_trans_amt,\n            md.trans_cost * (e.ma_amt / 100.0) ma_trans_cost,\n            md.trans_qty ma_trans_qty,\n            md.exch_rate_pct \n        FROM\n            movement_day md \n        JOIN\n            sku_profile sku \n                ON md.product_id = sku.product_id \n        JOIN\n            site_profile site \n                ON md.location_id = site.location_id \n        JOIN\n            ma_event e \n                ON md.day_dt BETWEEN e.start_dt AND e.end_dt \n                AND md.movement_id = e.movement_id \n                AND sku.valuation_class_cd = e.valuation_class_cd \n                AND site.location_type_id = e.location_type_id \n        WHERE\n            e.ma_event_source_id = 8 \n            AND (\n                (\n                    md.update_dt = CURRENT_DATE \n                    AND md.day_dt < CURRENT_DATE\n                ) \n                OR (\n                    md.day_dt = CURRENT_DATE - 1 \n                    AND md.update_dt <> CURRENT_DATE\n                )\n            )\n    ) pre \nLEFT OUTER JOIN\n    ma_movement_day mmd \n        ON pre.day_dt = mmd.day_dt \n        AND pre.product_id = mmd.product_id \n        AND pre.location_id = mmd.location_id \n        AND pre.movement_id = mmd.movement_id \n        AND pre.po_nbr = mmd.po_nbr \n        AND pre.po_line_nbr = mmd.po_line_nbr \n        AND pre.ma_event_id = mmd.ma_event_id\"\"\")","df_4.createOrReplaceTempView(\"SQ_Shortcut_to_MA_MOVEMENT_DAY_4\")"]},"id":"SQ_Shortcut_to_MA_MOVEMENT_DAY","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"SKU_PROFILE","queries":["df_5=spark.sql(\"\"\"\n    SELECT\n        PRODUCT_ID AS PRODUCT_ID,\n        SKU_NBR AS SKU_NBR,\n        SKU_TYPE AS SKU_TYPE,\n        PRIMARY_UPC_ID AS PRIMARY_UPC_ID,\n        STATUS_ID AS STATUS_ID,\n        SUBS_HIST_FLAG AS SUBS_HIST_FLAG,\n        SUBS_CURR_FLAG AS SUBS_CURR_FLAG,\n        SKU_DESC AS SKU_DESC,\n        ALT_DESC AS ALT_DESC,\n        SAP_CATEGORY_ID AS SAP_CATEGORY_ID,\n        SAP_CLASS_ID AS SAP_CLASS_ID,\n        SAP_DEPT_ID AS SAP_DEPT_ID,\n        SAP_DIVISION_ID AS SAP_DIVISION_ID,\n        PRIMARY_VENDOR_ID AS PRIMARY_VENDOR_ID,\n        PARENT_VENDOR_ID AS PARENT_VENDOR_ID,\n        COUNTRY_CD AS COUNTRY_CD,\n        IMPORT_FLAG AS IMPORT_FLAG,\n        HTS_CODE_ID AS HTS_CODE_ID,\n        CONTENTS AS CONTENTS,\n        CONTENTS_UNITS AS CONTENTS_UNITS,\n        WEIGHT_NET_AMT AS WEIGHT_NET_AMT,\n        WEIGHT_UOM_CD AS WEIGHT_UOM_CD,\n        SIZE_DESC AS SIZE_DESC,\n        BUM_QTY AS BUM_QTY,\n        UOM_CD AS UOM_CD,\n        UNIT_NUMERATOR AS UNIT_NUMERATOR,\n        UNIT_DENOMINATOR AS UNIT_DENOMINATOR,\n        BUYER_ID AS BUYER_ID,\n        PURCH_GROUP_ID AS PURCH_GROUP_ID,\n        PURCH_COST_AMT AS PURCH_COST_AMT,\n        NAT_PRICE_US_AMT AS NAT_PRICE_US_AMT,\n        TAX_CLASS_ID AS TAX_CLASS_ID,\n        VALUATION_CLASS_CD AS VALUATION_CLASS_CD,\n        BRAND_CD AS BRAND_CD,\n        BRAND_CLASSIFICATION_ID AS BRAND_CLASSIFICATION_ID,\n        OWNBRAND_FLAG AS OWNBRAND_FLAG,\n        STATELINE_FLAG AS STATELINE_FLAG,\n        SIGN_TYPE_CD AS SIGN_TYPE_CD,\n        OLD_ARTICLE_NBR AS OLD_ARTICLE_NBR,\n        VENDOR_ARTICLE_NBR AS VENDOR_ARTICLE_NBR,\n        INIT_MKDN_DT AS INIT_MKDN_DT,\n        DISC_START_DT AS DISC_START_DT,\n        ADD_DT AS ADD_DT,\n        DELETE_DT AS DELETE_DT,\n        UPDATE_DT AS UPDATE_DT,\n        FIRST_SALE_DT AS FIRST_SALE_DT,\n        LAST_SALE_DT AS LAST_SALE_DT,\n        FIRST_INV_DT AS FIRST_INV_DT,\n        LAST_INV_DT AS LAST_INV_DT,\n        LOAD_DT AS LOAD_DT,\n        BASE_NBR AS BASE_NBR,\n        BP_COLOR_ID AS BP_COLOR_ID,\n        BP_SIZE_ID AS BP_SIZE_ID,\n        BP_BREED_ID AS BP_BREED_ID,\n        BP_ITEM_CONCATENATED AS BP_ITEM_CONCATENATED,\n        BP_AEROSOL_FLAG AS BP_AEROSOL_FLAG,\n        BP_HAZMAT_FLAG AS BP_HAZMAT_FLAG,\n        CANADIAN_HTS_CD AS CANADIAN_HTS_CD,\n        NAT_PRICE_CA_AMT AS NAT_PRICE_CA_AMT,\n        NAT_PRICE_PR_AMT AS NAT_PRICE_PR_AMT,\n        RTV_DEPT_CD AS RTV_DEPT_CD,\n        GL_ACCT_NBR AS GL_ACCT_NBR,\n        ARTICLE_CATEGORY_ID AS ARTICLE_CATEGORY_ID,\n        COMPONENT_FLAG AS COMPONENT_FLAG,\n        ZDISCO_SCHED_TYPE_ID AS ZDISCO_SCHED_TYPE_ID,\n        ZDISCO_MKDN_SCHED_ID AS ZDISCO_MKDN_SCHED_ID,\n        ZDISCO_PID_DT AS ZDISCO_PID_DT,\n        ZDISCO_START_DT AS ZDISCO_START_DT,\n        ZDISCO_INIT_MKDN_DT AS ZDISCO_INIT_MKDN_DT,\n        ZDISCO_DC_DT AS ZDISCO_DC_DT,\n        ZDISCO_STR_DT AS ZDISCO_STR_DT,\n        ZDISCO_STR_OWNRSHP_DT AS ZDISCO_STR_OWNRSHP_DT,\n        ZDISCO_STR_WRT_OFF_DT AS ZDISCO_STR_WRT_OFF_DT,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        SKU_PROFILE\"\"\")","df_5.createOrReplaceTempView(\"SKU_PROFILE_5\")"]},"id":"SKU_PROFILE","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"SITE_PROFILE","queries":["df_6=spark.sql(\"\"\"\n    SELECT\n        LOCATION_ID AS LOCATION_ID,\n        LOCATION_TYPE_ID AS LOCATION_TYPE_ID,\n        STORE_NBR AS STORE_NBR,\n        STORE_NAME AS STORE_NAME,\n        STORE_TYPE_ID AS STORE_TYPE_ID,\n        STORE_OPEN_CLOSE_FLAG AS STORE_OPEN_CLOSE_FLAG,\n        COMPANY_ID AS COMPANY_ID,\n        REGION_ID AS REGION_ID,\n        DISTRICT_ID AS DISTRICT_ID,\n        PRICE_ZONE_ID AS PRICE_ZONE_ID,\n        PRICE_AD_ZONE_ID AS PRICE_AD_ZONE_ID,\n        REPL_DC_NBR AS REPL_DC_NBR,\n        REPL_FISH_DC_NBR AS REPL_FISH_DC_NBR,\n        REPL_FWD_DC_NBR AS REPL_FWD_DC_NBR,\n        SQ_FEET_RETAIL AS SQ_FEET_RETAIL,\n        SQ_FEET_TOTAL AS SQ_FEET_TOTAL,\n        SITE_ADDRESS AS SITE_ADDRESS,\n        SITE_CITY AS SITE_CITY,\n        STATE_CD AS STATE_CD,\n        COUNTRY_CD AS COUNTRY_CD,\n        POSTAL_CD AS POSTAL_CD,\n        SITE_MAIN_TELE_NO AS SITE_MAIN_TELE_NO,\n        SITE_GROOM_TELE_NO AS SITE_GROOM_TELE_NO,\n        SITE_EMAIL_ADDRESS AS SITE_EMAIL_ADDRESS,\n        SITE_SALES_FLAG AS SITE_SALES_FLAG,\n        EQUINE_MERCH_ID AS EQUINE_MERCH_ID,\n        EQUINE_SITE_ID AS EQUINE_SITE_ID,\n        EQUINE_SITE_OPEN_DT AS EQUINE_SITE_OPEN_DT,\n        GEO_LATITUDE_NBR AS GEO_LATITUDE_NBR,\n        GEO_LONGITUDE_NBR AS GEO_LONGITUDE_NBR,\n        PETSMART_DMA_CD AS PETSMART_DMA_CD,\n        LOYALTY_PGM_TYPE_ID AS LOYALTY_PGM_TYPE_ID,\n        LOYALTY_PGM_STATUS_ID AS LOYALTY_PGM_STATUS_ID,\n        LOYALTY_PGM_START_DT AS LOYALTY_PGM_START_DT,\n        LOYALTY_PGM_CHANGE_DT AS LOYALTY_PGM_CHANGE_DT,\n        BP_COMPANY_NBR AS BP_COMPANY_NBR,\n        BP_GL_ACCT AS BP_GL_ACCT,\n        TP_LOC_FLAG AS TP_LOC_FLAG,\n        TP_ACTIVE_CNT AS TP_ACTIVE_CNT,\n        PROMO_LABEL_CD AS PROMO_LABEL_CD,\n        PARENT_LOCATION_ID AS PARENT_LOCATION_ID,\n        LOCATION_NBR AS LOCATION_NBR,\n        TIME_ZONE_ID AS TIME_ZONE_ID,\n        DELV_SERVICE_CLASS_ID AS DELV_SERVICE_CLASS_ID,\n        PICK_SERVICE_CLASS_ID AS PICK_SERVICE_CLASS_ID,\n        SITE_LOGIN_ID AS SITE_LOGIN_ID,\n        SITE_MANAGER_ID AS SITE_MANAGER_ID,\n        SITE_OPEN_YRS_AMT AS SITE_OPEN_YRS_AMT,\n        HOTEL_FLAG AS HOTEL_FLAG,\n        DAYCAMP_FLAG AS DAYCAMP_FLAG,\n        VET_FLAG AS VET_FLAG,\n        DIST_MGR_NAME AS DIST_MGR_NAME,\n        DIST_SVC_MGR_NAME AS DIST_SVC_MGR_NAME,\n        REGION_VP_NAME AS REGION_VP_NAME,\n        REGION_TRAINER_NAME AS REGION_TRAINER_NAME,\n        ASSET_PROTECT_NAME AS ASSET_PROTECT_NAME,\n        SITE_COUNTY AS SITE_COUNTY,\n        SITE_FAX_NO AS SITE_FAX_NO,\n        SFT_OPEN_DT AS SFT_OPEN_DT,\n        DM_EMAIL_ADDRESS AS DM_EMAIL_ADDRESS,\n        DSM_EMAIL_ADDRESS AS DSM_EMAIL_ADDRESS,\n        RVP_EMAIL_ADDRESS AS RVP_EMAIL_ADDRESS,\n        TRADE_AREA AS TRADE_AREA,\n        FDLPS_NAME AS FDLPS_NAME,\n        FDLPS_EMAIL AS FDLPS_EMAIL,\n        OVERSITE_MGR_NAME AS OVERSITE_MGR_NAME,\n        OVERSITE_MGR_EMAIL AS OVERSITE_MGR_EMAIL,\n        SAFETY_DIRECTOR_NAME AS SAFETY_DIRECTOR_NAME,\n        SAFETY_DIRECTOR_EMAIL AS SAFETY_DIRECTOR_EMAIL,\n        RETAIL_MANAGER_SAFETY_NAME AS RETAIL_MANAGER_SAFETY_NAME,\n        RETAIL_MANAGER_SAFETY_EMAIL AS RETAIL_MANAGER_SAFETY_EMAIL,\n        AREA_DIRECTOR_NAME AS AREA_DIRECTOR_NAME,\n        AREA_DIRECTOR_EMAIL AS AREA_DIRECTOR_EMAIL,\n        DC_GENERAL_MANAGER_NAME AS DC_GENERAL_MANAGER_NAME,\n        DC_GENERAL_MANAGER_EMAIL AS DC_GENERAL_MANAGER_EMAIL,\n        ASST_DC_GENERAL_MANAGER_NAME1 AS ASST_DC_GENERAL_MANAGER_NAME1,\n        ASST_DC_GENERAL_MANAGER_EMAIL1 AS ASST_DC_GENERAL_MANAGER_EMAIL1,\n        ASST_DC_GENERAL_MANAGER_NAME2 AS ASST_DC_GENERAL_MANAGER_NAME2,\n        ASST_DC_GENERAL_MANAGER_EMAIL2 AS ASST_DC_GENERAL_MANAGER_EMAIL2,\n        REGIONAL_DC_SAFETY_MGR_NAME AS REGIONAL_DC_SAFETY_MGR_NAME,\n        REGIONAL_DC_SAFETY_MGR_EMAIL AS REGIONAL_DC_SAFETY_MGR_EMAIL,\n        DC_PEOPLE_SUPERVISOR_NAME AS DC_PEOPLE_SUPERVISOR_NAME,\n        DC_PEOPLE_SUPERVISOR_EMAIL AS DC_PEOPLE_SUPERVISOR_EMAIL,\n        PEOPLE_MANAGER_NAME AS PEOPLE_MANAGER_NAME,\n        PEOPLE_MANAGER_EMAIL AS PEOPLE_MANAGER_EMAIL,\n        ASSET_PROT_DIR_NAME AS ASSET_PROT_DIR_NAME,\n        ASSET_PROT_DIR_EMAIL AS ASSET_PROT_DIR_EMAIL,\n        SR_REG_ASSET_PROT_MGR_NAME AS SR_REG_ASSET_PROT_MGR_NAME,\n        SR_REG_ASSET_PROT_MGR_EMAIL AS SR_REG_ASSET_PROT_MGR_EMAIL,\n        REG_ASSET_PROT_MGR_NAME AS REG_ASSET_PROT_MGR_NAME,\n        REG_ASSET_PROT_MGR_EMAIL AS REG_ASSET_PROT_MGR_EMAIL,\n        ASSET_PROTECT_EMAIL AS ASSET_PROTECT_EMAIL,\n        TP_START_DT AS TP_START_DT,\n        OPEN_DT AS OPEN_DT,\n        GR_OPEN_DT AS GR_OPEN_DT,\n        CLOSE_DT AS CLOSE_DT,\n        HOTEL_OPEN_DT AS HOTEL_OPEN_DT,\n        ADD_DT AS ADD_DT,\n        DELETE_DT AS DELETE_DT,\n        UPDATE_DT AS UPDATE_DT,\n        LOAD_DT AS LOAD_DT,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        SITE_PROFILE\"\"\")","df_6.createOrReplaceTempView(\"SITE_PROFILE_6\")"]},"id":"SITE_PROFILE","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"MOVEMENT_DAY","queries":["df_7=spark.sql(\"\"\"\n    SELECT\n        DAY_DT AS DAY_DT,\n        PRODUCT_ID AS PRODUCT_ID,\n        LOCATION_ID AS LOCATION_ID,\n        MOVEMENT_ID AS MOVEMENT_ID,\n        PO_NBR AS PO_NBR,\n        PO_LINE_NBR AS PO_LINE_NBR,\n        STO_TYPE_ID AS STO_TYPE_ID,\n        SKU_STATUS_ID AS SKU_STATUS_ID,\n        MOVE_CLASS_ID AS MOVE_CLASS_ID,\n        SOURCE_VENDOR_ID AS SOURCE_VENDOR_ID,\n        FROM_LOCATION_ID AS FROM_LOCATION_ID,\n        TRANS_AMT AS TRANS_AMT,\n        TRANS_COST AS TRANS_COST,\n        TRANS_QTY AS TRANS_QTY,\n        FREIGHT_COST AS FREIGHT_COST,\n        EXCH_RATE_PCT AS EXCH_RATE_PCT,\n        PLAN_DELIV_DAYS AS PLAN_DELIV_DAYS,\n        ROUND_VALUE_QTY AS ROUND_VALUE_QTY,\n        ROUND_PROFILE_CD AS ROUND_PROFILE_CD,\n        UPDATE_DT AS UPDATE_DT,\n        LOAD_DT AS LOAD_DT,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        MOVEMENT_DAY\"\"\")","df_7.createOrReplaceTempView(\"MOVEMENT_DAY_7\")"]},"id":"MOVEMENT_DAY","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Target Definition","label":"MA_MOVEMENT_PRE","queries":["spark.sql(\"\"\"INSERT INTO MA_MOVEMENT_PRE SELECT DAY_DT AS DAY_DT,\nPRODUCT_ID AS PRODUCT_ID,\nLOCATION_ID AS LOCATION_ID,\nMOVEMENT_ID AS MOVEMENT_ID,\nPO_NBR AS PO_NBR,\nPO_LINE_NBR AS PO_LINE_NBR,\nMA_EVENT_ID AS MA_EVENT_ID,\nSTO_TYPE_ID AS STO_TYPE_ID,\nMA_TRANS_AMT AS MA_TRANS_AMT,\nMA_TRANS_COST AS MA_TRANS_COST,\nMA_TRANS_QTY AS MA_TRANS_QTY,\nEXCH_RATE_PCT AS EXCH_RATE_PCT,\nUPDATE_DT AS UPDATE_DT,\nLOAD_DT AS LOAD_DT,\nINS_UPD_FLAG AS INS_UPD_FLAG FROM SQ_Shortcut_to_MA_MOVEMENT_DAY_4\"\"\")"]},"id":"MA_MOVEMENT_PRE","position":{"x":0,"y":0},"type":"normalNode"}]}