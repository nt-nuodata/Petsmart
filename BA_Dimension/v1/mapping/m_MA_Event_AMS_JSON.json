{"Edges":[{"transformationType":"Source Definition","id":"e-0","source":"","target":"MA_EVENT_AMS_PRE"},{"transformationType":"Source Qualifier","id":"e-1","source":"MA_EVENT_AMS_PRE","target":"SQ_Shortcut_to_MA_EVENT_AMS_PRE"},{"transformationType":"Expression","id":"e-2","source":"SQ_Shortcut_to_MA_EVENT_AMS_PRE","target":"EXP_DeriveLoadFlag"},{"transformationType":"Source Definition","id":"e-3","source":"","target":"MA_EVENT"},{"transformationType":"Source Qualifier","id":"e-4","source":"MA_EVENT","target":"SQ_Shortcut_to_MA_EVENT"},{"transformationType":"Source Qualifier","id":"e-5","source":"MA_EVENT_AMS_PRE","target":"SQ_Shortcut_to_MA_EVENT"},{"transformationType":"Expression","id":"e-6","source":"SQ_Shortcut_to_MA_EVENT","target":"EXP_DeriveColumns"},{"transformationType":"Filter","id":"e-7","source":"EXP_DeriveColumns","target":"FIL_NoChanges"},{"transformationType":"Custom Transformation","id":"e-8","source":"FIL_NoChanges","target":"Union"},{"transformationType":"Custom Transformation","id":"e-9","source":"EXP_DeriveLoadFlag","target":"Union"},{"transformationType":"Expression","id":"e-10","source":"Union","target":"EXP_SetLoadDt2"},{"transformationType":"Update Strategy","id":"e-11","source":"EXP_SetLoadDt2","target":"UPD_InsertDeleteOrUpdate"},{"transformationType":"Filter","id":"e-12","source":"Union","target":"FIL_LoadFlag"},{"transformationType":"Expression","id":"e-13","source":"FIL_LoadFlag","target":"EXP_SetLoadDt"},{"transformationType":"Update Strategy","id":"e-14","source":"EXP_SetLoadDt","target":"UPD_InsertOnly"},{"transformationType":"Target Definition","id":"e-15","source":"UPD_InsertDeleteOrUpdate","target":"MA_EVENT"},{"transformationType":"Target Definition","id":"e-16","source":"UPD_InsertOnly","target":"MA_EVENT_RESTATE_HIST"}],"Nodes":[{"data":{"transformationType":"Source Definition","label":"MA_EVENT_AMS_PRE","queries":["df_0=spark.sql(\"\"\"\n    SELECT\n        MA_EVENT_ID AS MA_EVENT_ID,\n        OFFER_ID AS OFFER_ID,\n        START_DT AS START_DT,\n        END_DT AS END_DT,\n        MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\n        MA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\n        MA_EVENT_DESC AS MA_EVENT_DESC,\n        MA_PCT_IND AS MA_PCT_IND,\n        MA_AMT AS MA_AMT,\n        MA_MAX_AMT AS MA_MAX_AMT,\n        OFFER_AS_DISC_IND AS OFFER_AS_DISC_IND,\n        VENDOR_FUNDED_IND AS VENDOR_FUNDED_IND,\n        VENDOR_NAME_TXT AS VENDOR_NAME_TXT,\n        INSERT_FLAG AS INSERT_FLAG,\n        DELETE_FLAG AS DELETE_FLAG,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        MA_EVENT_AMS_PRE\"\"\")","df_0.createOrReplaceTempView(\"MA_EVENT_AMS_PRE_0\")"]},"id":"MA_EVENT_AMS_PRE","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Qualifier","label":"SQ_Shortcut_to_MA_EVENT_AMS_PRE","queries":["df_1=spark.sql(\"\"\"\n    SELECT\n        MA_EVENT_ID AS MA_EVENT_ID,\n        OFFER_ID AS OFFER_ID,\n        START_DT AS START_DT,\n        END_DT AS END_DT,\n        MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\n        MA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\n        MA_EVENT_DESC AS MA_EVENT_DESC,\n        MA_PCT_IND AS MA_PCT_IND,\n        MA_AMT AS MA_AMT,\n        MA_MAX_AMT AS MA_MAX_AMT,\n        VENDOR_NAME_TXT AS VENDOR_NAME_TXT,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        MA_EVENT_AMS_PRE_0 \n    WHERE\n        MA_EVENT_AMS_PRE.INSERT_FLAG = 1\"\"\")","df_1.createOrReplaceTempView(\"SQ_Shortcut_to_MA_EVENT_AMS_PRE_1\")"]},"id":"SQ_Shortcut_to_MA_EVENT_AMS_PRE","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Expression","label":"EXP_DeriveLoadFlag","queries":["df_2=spark.sql(\"\"\"\n    SELECT\n        MA_EVENT_ID AS MA_EVENT_ID,\n        OFFER_ID AS OFFER_ID,\n        START_DT AS START_DT,\n        END_DT AS END_DT,\n        MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\n        MA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\n        MA_EVENT_DESC AS MA_EVENT_DESC,\n        MA_PCT_IND AS MA_PCT_IND,\n        MA_AMT AS MA_AMT,\n        MA_MAX_AMT AS MA_MAX_AMT,\n        VENDOR_NAME_TXT AS VENDOR_NAME_TXT,\n        'I' AS LOAD_FLG,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        SQ_Shortcut_to_MA_EVENT_AMS_PRE_1\"\"\")","df_2.createOrReplaceTempView(\"EXP_DeriveLoadFlag_2\")"]},"id":"EXP_DeriveLoadFlag","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"MA_EVENT","queries":["df_3=spark.sql(\"\"\"\n    SELECT\n        MA_EVENT_ID AS MA_EVENT_ID,\n        OFFER_ID AS OFFER_ID,\n        SAP_DEPT_ID AS SAP_DEPT_ID,\n        PRODUCT_ID AS PRODUCT_ID,\n        COUNTRY_CD AS COUNTRY_CD,\n        START_DT AS START_DT,\n        END_DT AS END_DT,\n        MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\n        MA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\n        LOCATION_ID AS LOCATION_ID,\n        MOVEMENT_ID AS MOVEMENT_ID,\n        VALUATION_CLASS_CD AS VALUATION_CLASS_CD,\n        GL_ACCT_NBR AS GL_ACCT_NBR,\n        LOCATION_TYPE_ID AS LOCATION_TYPE_ID,\n        ROYALTY_BRAND_ID AS ROYALTY_BRAND_ID,\n        BRAND_CD AS BRAND_CD,\n        MA_FORMULA_CD AS MA_FORMULA_CD,\n        FISCAL_MO AS FISCAL_MO,\n        SAP_CATEGORY_ID AS SAP_CATEGORY_ID,\n        FROM_LOCATION_ID AS FROM_LOCATION_ID,\n        SOURCE_VENDOR_ID AS SOURCE_VENDOR_ID,\n        COMPANY_ID AS COMPANY_ID,\n        MA_EVENT_DESC AS MA_EVENT_DESC,\n        EM_VENDOR_FUNDING_ID AS EM_VENDOR_FUNDING_ID,\n        EM_COMMENT AS EM_COMMENT,\n        EM_BILL_ALT_VENDOR_FLAG AS EM_BILL_ALT_VENDOR_FLAG,\n        EM_ALT_VENDOR_ID AS EM_ALT_VENDOR_ID,\n        EM_ALT_VENDOR_NAME AS EM_ALT_VENDOR_NAME,\n        EM_ALT_VENDOR_COUNTRY_CD AS EM_ALT_VENDOR_COUNTRY_CD,\n        EM_VENDOR_ID AS EM_VENDOR_ID,\n        EM_VENDOR_NAME AS EM_VENDOR_NAME,\n        EM_VENDOR_COUNTRY_CD AS EM_VENDOR_COUNTRY_CD,\n        VENDOR_NAME_TXT AS VENDOR_NAME_TXT,\n        MA_PCT_IND AS MA_PCT_IND,\n        MA_AMT AS MA_AMT,\n        MA_MAX_AMT AS MA_MAX_AMT,\n        UPDATE_DT AS UPDATE_DT,\n        LOAD_DT AS LOAD_DT,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        MA_EVENT\"\"\")","df_3.createOrReplaceTempView(\"MA_EVENT_3\")"]},"id":"MA_EVENT","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Qualifier","label":"SQ_Shortcut_to_MA_EVENT","queries":["df_4=spark.sql(\"\"\"SELECT MA_EVENT.END_DT AS tgt_END_DT,\nMA_EVENT.VENDOR_NAME_TXT AS tgt_VENDOR_NAME_TXT,\nMA_EVENT.MA_EVENT_ID AS MA_EVENT_ID,\nMA_EVENT.MA_EVENT_DESC AS tgt_MA_EVENT_DESC,\nMA_EVENT.LOAD_DT AS LOAD_DT,\nMA_EVENT.MA_AMT AS tgt_MA_AMT,\nMA_EVENT.START_DT AS tgt_START_DT,\nMA_EVENT.MA_PCT_IND AS tgt_MA_PCT_IND,\nMA_EVENT.MA_MAX_AMT AS tgt_MA_MAX_AMT,\nMA_EVENT_AMS_PRE.VENDOR_FUNDED_IND AS VENDOR_FUNDED_IND,\nMA_EVENT_AMS_PRE.OFFER_ID AS OFFER_ID,\nMA_EVENT_AMS_PRE.OFFER_AS_DISC_IND AS OFFER_AS_DISC_IND,\nMA_EVENT_AMS_PRE.MA_PCT_IND AS MA_PCT_IND,\nMA_EVENT_AMS_PRE.MA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\nMA_EVENT_AMS_PRE.MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\nMA_EVENT_AMS_PRE.START_DT AS START_DT,\nMA_EVENT_AMS_PRE.MA_EVENT_DESC AS MA_EVENT_DESC,\nMA_EVENT_AMS_PRE.DELETE_FLAG AS DELETE_FLAG,\nMA_EVENT_AMS_PRE.VENDOR_NAME_TXT AS VENDOR_NAME_TXT,\nMA_EVENT_AMS_PRE.MA_MAX_AMT AS MA_MAX_AMT,\nMA_EVENT_AMS_PRE.MA_AMT AS MA_AMT,\nMA_EVENT_AMS_PRE.END_DT AS END_DT,\nMonotonically_Increasing_Id AS Monotonically_Increasing_Id FROM MA_EVENT.MA_EVENT_ID = MA_EVENT_AMS_PRE.MA_EVENT_ID WHERE \nMA_EVENT_AMS_PRE.INSERT_FLAG = 0\r\nAND MA_EVENT.MA_EVENT_TYPE_ID = 2\r\nAND MA_EVENT_AMS_PRE.MA_EVENT_SOURCE_ID = 6\"\"\")","df_4.createOrReplaceTempView(\"SQ_Shortcut_to_MA_EVENT_4\")"]},"id":"SQ_Shortcut_to_MA_EVENT","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Qualifier","label":"SQ_Shortcut_to_MA_EVENT","queries":["df_4=spark.sql(\"\"\"SELECT MA_EVENT.END_DT AS tgt_END_DT,\nMA_EVENT.VENDOR_NAME_TXT AS tgt_VENDOR_NAME_TXT,\nMA_EVENT.MA_EVENT_ID AS MA_EVENT_ID,\nMA_EVENT.MA_EVENT_DESC AS tgt_MA_EVENT_DESC,\nMA_EVENT.LOAD_DT AS LOAD_DT,\nMA_EVENT.MA_AMT AS tgt_MA_AMT,\nMA_EVENT.START_DT AS tgt_START_DT,\nMA_EVENT.MA_PCT_IND AS tgt_MA_PCT_IND,\nMA_EVENT.MA_MAX_AMT AS tgt_MA_MAX_AMT,\nMA_EVENT_AMS_PRE.VENDOR_FUNDED_IND AS VENDOR_FUNDED_IND,\nMA_EVENT_AMS_PRE.OFFER_ID AS OFFER_ID,\nMA_EVENT_AMS_PRE.OFFER_AS_DISC_IND AS OFFER_AS_DISC_IND,\nMA_EVENT_AMS_PRE.MA_PCT_IND AS MA_PCT_IND,\nMA_EVENT_AMS_PRE.MA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\nMA_EVENT_AMS_PRE.MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\nMA_EVENT_AMS_PRE.START_DT AS START_DT,\nMA_EVENT_AMS_PRE.MA_EVENT_DESC AS MA_EVENT_DESC,\nMA_EVENT_AMS_PRE.DELETE_FLAG AS DELETE_FLAG,\nMA_EVENT_AMS_PRE.VENDOR_NAME_TXT AS VENDOR_NAME_TXT,\nMA_EVENT_AMS_PRE.MA_MAX_AMT AS MA_MAX_AMT,\nMA_EVENT_AMS_PRE.MA_AMT AS MA_AMT,\nMA_EVENT_AMS_PRE.END_DT AS END_DT,\nMonotonically_Increasing_Id AS Monotonically_Increasing_Id FROM MA_EVENT.MA_EVENT_ID = MA_EVENT_AMS_PRE.MA_EVENT_ID WHERE \nMA_EVENT_AMS_PRE.INSERT_FLAG = 0\r\nAND MA_EVENT.MA_EVENT_TYPE_ID = 2\r\nAND MA_EVENT_AMS_PRE.MA_EVENT_SOURCE_ID = 6\"\"\")","df_4.createOrReplaceTempView(\"SQ_Shortcut_to_MA_EVENT_4\")"]},"id":"SQ_Shortcut_to_MA_EVENT","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Expression","label":"EXP_DeriveColumns","queries":["df_5=spark.sql(\"\"\"\n    SELECT\n        MA_EVENT_ID AS MA_EVENT_ID,\n        OFFER_ID AS OFFER_ID,\n        START_DT AS START_DT,\n        END_DT AS END_DT,\n        MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\n        MA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\n        MA_EVENT_DESC AS MA_EVENT_DESC,\n        MA_PCT_IND AS MA_PCT_IND,\n        MA_AMT AS MA_AMT,\n        MA_MAX_AMT AS MA_MAX_AMT,\n        VENDOR_NAME_TXT AS VENDOR_NAME_TXT,\n        DECODE(TRUE,\n        VENDOR_FUNDED_IND = 0 \n        OR DELETE_FLAG = 1 \n        OR OFFER_AS_DISC_IND = 0,\n        'D',\n        IFF(ISNULL(START_DT),\n        TO_DATE('12319999',\n        'MMDDYYYY'),\n        START_DT) <> IFF(ISNULL(tgt_START_DT),\n        TO_DATE('12319999',\n        'MMDDYYYY'),\n        tgt_START_DT) \n        OR IFF(ISNULL(END_DT),\n        TO_DATE('12319999',\n        'MMDDYYYY'),\n        END_DT) <> IFF(ISNULL(tgt_END_DT),\n        TO_DATE('12319999',\n        'MMDDYYYY'),\n        tgt_END_DT) \n        OR IFF(ISNULL(MA_PCT_IND),\n        9,\n        MA_PCT_IND) <> IFF(ISNULL(tgt_MA_PCT_IND),\n        9,\n        tgt_MA_PCT_IND) \n        OR IFF(ISNULL(MA_AMT),\n        999999,\n        MA_AMT) <> IFF(ISNULL(tgt_MA_AMT),\n        999999,\n        tgt_MA_AMT),\n        'R',\n        IFF(ISNULL(MA_EVENT_DESC),\n        ' ',\n        MA_EVENT_DESC) <> IFF(ISNULL(tgt_MA_EVENT_DESC),\n        ' ',\n        tgt_MA_EVENT_DESC) \n        OR IFF(ISNULL(VENDOR_NAME_TXT),\n        ' ',\n        VENDOR_NAME_TXT) <> IFF(ISNULL(tgt_VENDOR_NAME_TXT),\n        ' ',\n        tgt_VENDOR_NAME_TXT) \n        OR IFF(ISNULL(MA_MAX_AMT),\n        999999,\n        MA_MAX_AMT) <> IFF(ISNULL(tgt_MA_MAX_AMT),\n        999999,\n        tgt_MA_MAX_AMT),\n        'U',\n        'N') AS LOAD_FLAG,\n        tgt_MA_MAX_AMT AS tgt_MA_MAX_AMT,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        SQ_Shortcut_to_MA_EVENT_4\"\"\")","df_5.createOrReplaceTempView(\"EXP_DeriveColumns_5\")"]},"id":"EXP_DeriveColumns","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Filter","label":"FIL_NoChanges","queries":["df_6=spark.sql(\"\"\"\n    SELECT\n        MA_EVENT_ID AS MA_EVENT_ID,\n        OFFER_ID AS OFFER_ID,\n        START_DT AS START_DT,\n        END_DT AS END_DT,\n        MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\n        MA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\n        MA_EVENT_DESC AS MA_EVENT_DESC,\n        MA_PCT_IND AS MA_PCT_IND,\n        MA_AMT AS MA_AMT,\n        MA_MAX_AMT AS MA_MAX_AMT,\n        VENDOR_NAME_TXT AS VENDOR_NAME_TXT,\n        LOAD_FLAG AS LOAD_FLAG,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        EXP_DeriveColumns_5 \n    WHERE\n        LOAD_FLAG <> 'N'\"\"\")","df_6.createOrReplaceTempView(\"FIL_NoChanges_6\")"]},"id":"FIL_NoChanges","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Custom Transformation","label":"Union","queries":["df_7=spark.sql(\"\"\"SELECT END_DT AS END_DT,\nLOAD_FLAG AS LOAD_FLG,\nMA_AMT AS MA_AMT,\nMA_EVENT_DESC AS MA_EVENT_DESC,\nMA_EVENT_ID AS MA_EVENT_ID,\nMA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\nMA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\nMA_MAX_AMT AS MA_MAX_AMT,\nMA_PCT_IND AS MA_PCT_IND,\nMonotonically_Increasing_Id AS Monotonically_Increasing_Id,\nOFFER_ID AS OFFER_ID,\nSTART_DT AS START_DT,\nVENDOR_NAME_TXT AS VENDOR_NAME_TXT FROM FIL_NoChanges_6 UNION ALL SELECT END_DT AS END_DT,\nLOAD_FLG AS LOAD_FLG,\nMA_AMT AS MA_AMT,\nMA_EVENT_DESC AS MA_EVENT_DESC,\nMA_EVENT_ID AS MA_EVENT_ID,\nMA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\nMA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\nMA_MAX_AMT AS MA_MAX_AMT,\nMA_PCT_IND AS MA_PCT_IND,\nMonotonically_Increasing_Id AS Monotonically_Increasing_Id,\nOFFER_ID AS OFFER_ID,\nSTART_DT AS START_DT,\nVENDOR_NAME_TXT AS VENDOR_NAME_TXT FROM EXP_DeriveLoadFlag_2\"\"\")","df_7.createOrReplaceTempView(\"Union_7\")"]},"id":"Union","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Custom Transformation","label":"Union","queries":["df_7=spark.sql(\"\"\"SELECT END_DT AS END_DT,\nLOAD_FLAG AS LOAD_FLG,\nMA_AMT AS MA_AMT,\nMA_EVENT_DESC AS MA_EVENT_DESC,\nMA_EVENT_ID AS MA_EVENT_ID,\nMA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\nMA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\nMA_MAX_AMT AS MA_MAX_AMT,\nMA_PCT_IND AS MA_PCT_IND,\nMonotonically_Increasing_Id AS Monotonically_Increasing_Id,\nOFFER_ID AS OFFER_ID,\nSTART_DT AS START_DT,\nVENDOR_NAME_TXT AS VENDOR_NAME_TXT FROM FIL_NoChanges_6 UNION ALL SELECT END_DT AS END_DT,\nLOAD_FLG AS LOAD_FLG,\nMA_AMT AS MA_AMT,\nMA_EVENT_DESC AS MA_EVENT_DESC,\nMA_EVENT_ID AS MA_EVENT_ID,\nMA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\nMA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\nMA_MAX_AMT AS MA_MAX_AMT,\nMA_PCT_IND AS MA_PCT_IND,\nMonotonically_Increasing_Id AS Monotonically_Increasing_Id,\nOFFER_ID AS OFFER_ID,\nSTART_DT AS START_DT,\nVENDOR_NAME_TXT AS VENDOR_NAME_TXT FROM EXP_DeriveLoadFlag_2\"\"\")","df_7.createOrReplaceTempView(\"Union_7\")"]},"id":"Union","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Expression","label":"EXP_SetLoadDt2","queries":["df_8=spark.sql(\"\"\"\n    SELECT\n        MA_EVENT_ID AS MA_EVENT_ID,\n        OFFER_ID AS OFFER_ID,\n        START_DT AS START_DT,\n        END_DT AS END_DT,\n        MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\n        MA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\n        MA_EVENT_DESC AS MA_EVENT_DESC,\n        MA_PCT_IND AS MA_PCT_IND,\n        MA_AMT AS MA_AMT,\n        MA_MAX_AMT AS MA_MAX_AMT,\n        VENDOR_NAME_TXT AS VENDOR_NAME_TXT,\n        LOAD_FLG AS LOAD_FLG,\n        current_timestamp AS CURRENT_TSTMP,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        Union_7\"\"\")","df_8.createOrReplaceTempView(\"EXP_SetLoadDt2_8\")"]},"id":"EXP_SetLoadDt2","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Update Strategy","label":"UPD_InsertDeleteOrUpdate","queries":["df_9=spark.sql(\"\"\"\n    SELECT\n        MA_EVENT_ID AS MA_EVENT_ID,\n        OFFER_ID AS OFFER_ID,\n        START_DT AS START_DT,\n        END_DT AS END_DT,\n        MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\n        MA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\n        MA_EVENT_DESC AS MA_EVENT_DESC,\n        MA_PCT_IND AS MA_PCT_IND,\n        MA_AMT AS MA_AMT,\n        MA_MAX_AMT AS MA_MAX_AMT,\n        VENDOR_NAME_TXT AS VENDOR_NAME_TXT,\n        LOAD_FLG AS LOAD_FLG,\n        CURRENT_TSTMP AS LOAD_DT,\n        CURRENT_TSTMP AS UPDATE_DT,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        EXP_SetLoadDt2_8\"\"\")","df_9.createOrReplaceTempView(\"UPD_InsertDeleteOrUpdate_9\")"]},"id":"UPD_InsertDeleteOrUpdate","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Filter","label":"FIL_LoadFlag","queries":["df_10=spark.sql(\"\"\"\n    SELECT\n        MA_EVENT_ID AS MA_EVENT_ID,\n        OFFER_ID AS OFFER_ID,\n        START_DT AS START_DT,\n        END_DT AS END_DT,\n        MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\n        MA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\n        MA_EVENT_DESC AS MA_EVENT_DESC,\n        MA_PCT_IND AS MA_PCT_IND,\n        MA_AMT AS MA_AMT,\n        MA_MAX_AMT AS MA_MAX_AMT,\n        VENDOR_NAME_TXT AS VENDOR_NAME_TXT,\n        LOAD_FLG AS LOAD_FLG,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        Union_7 \n    WHERE\n        LOAD_FLG = 'D' \n        OR LOAD_FLG = 'R' \n        OR LOAD_FLG = 'I'\"\"\")","df_10.createOrReplaceTempView(\"FIL_LoadFlag_10\")"]},"id":"FIL_LoadFlag","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Expression","label":"EXP_SetLoadDt","queries":["df_11=spark.sql(\"\"\"\n    SELECT\n        MA_EVENT_ID AS MA_EVENT_ID,\n        OFFER_ID AS OFFER_ID,\n        START_DT AS START_DT,\n        END_DT AS END_DT,\n        MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\n        MA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\n        MA_EVENT_DESC AS MA_EVENT_DESC,\n        MA_PCT_IND AS MA_PCT_IND,\n        MA_AMT AS MA_AMT,\n        MA_MAX_AMT AS MA_MAX_AMT,\n        VENDOR_NAME_TXT AS VENDOR_NAME_TXT,\n        IFF(LOAD_FLG = 'R',\n        'U',\n        LOAD_FLG) AS o_LOAD_FLG,\n        date_trunc('DAY',\n        current_timestamp) AS LOAD_DT,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        FIL_LoadFlag_10\"\"\")","df_11.createOrReplaceTempView(\"EXP_SetLoadDt_11\")"]},"id":"EXP_SetLoadDt","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Update Strategy","label":"UPD_InsertOnly","queries":["df_12=spark.sql(\"\"\"\n    SELECT\n        MA_EVENT_ID AS MA_EVENT_ID,\n        OFFER_ID AS OFFER_ID,\n        START_DT AS START_DT,\n        END_DT AS END_DT,\n        MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\n        MA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\n        MA_EVENT_DESC AS MA_EVENT_DESC,\n        MA_PCT_IND AS MA_PCT_IND,\n        MA_AMT AS MA_AMT,\n        MA_MAX_AMT AS MA_MAX_AMT,\n        VENDOR_NAME_TXT AS VENDOR_NAME_TXT,\n        o_LOAD_FLG AS o_LOAD_FLG,\n        LOAD_DT AS LOAD_DT,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        EXP_SetLoadDt_11\"\"\")","df_12.createOrReplaceTempView(\"UPD_InsertOnly_12\")"]},"id":"UPD_InsertOnly","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Target Definition","label":"MA_EVENT","queries":["spark.sql(\"\"\"INSERT INTO MA_EVENT SELECT MA_EVENT_ID AS MA_EVENT_ID,\nOFFER_ID AS OFFER_ID,\nSAP_DEPT_ID AS SAP_DEPT_ID,\nPRODUCT_ID AS PRODUCT_ID,\nCOUNTRY_CD AS COUNTRY_CD,\nSTART_DT AS START_DT,\nEND_DT AS END_DT,\nMA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\nMA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\nLOCATION_ID AS LOCATION_ID,\nMOVEMENT_ID AS MOVEMENT_ID,\nVALUATION_CLASS_CD AS VALUATION_CLASS_CD,\nGL_ACCT_NBR AS GL_ACCT_NBR,\nLOCATION_TYPE_ID AS LOCATION_TYPE_ID,\nROYALTY_BRAND_ID AS ROYALTY_BRAND_ID,\nBRAND_CD AS BRAND_CD,\nMA_FORMULA_CD AS MA_FORMULA_CD,\nFISCAL_MO AS FISCAL_MO,\nSAP_CATEGORY_ID AS SAP_CATEGORY_ID,\nFROM_LOCATION_ID AS FROM_LOCATION_ID,\nSOURCE_VENDOR_ID AS SOURCE_VENDOR_ID,\nCOMPANY_ID AS COMPANY_ID,\nMA_EVENT_DESC AS MA_EVENT_DESC,\nEM_VENDOR_FUNDING_ID AS EM_VENDOR_FUNDING_ID,\nEM_COMMENT AS EM_COMMENT,\nEM_BILL_ALT_VENDOR_FLAG AS EM_BILL_ALT_VENDOR_FLAG,\nEM_ALT_VENDOR_ID AS EM_ALT_VENDOR_ID,\nEM_ALT_VENDOR_NAME AS EM_ALT_VENDOR_NAME,\nEM_ALT_VENDOR_COUNTRY_CD AS EM_ALT_VENDOR_COUNTRY_CD,\nEM_VENDOR_ID AS EM_VENDOR_ID,\nEM_VENDOR_NAME AS EM_VENDOR_NAME,\nEM_VENDOR_COUNTRY_CD AS EM_VENDOR_COUNTRY_CD,\nVENDOR_NAME_TXT AS VENDOR_NAME_TXT,\nMA_PCT_IND AS MA_PCT_IND,\nNEW_MA_AMT AS MA_AMT,\nMA_MAX_AMT AS MA_MAX_AMT,\nUPDATE_DT AS UPDATE_DT,\nLOAD_DT AS LOAD_DT FROM UPD_InsertDeleteOrUpdate_9\"\"\")"]},"id":"MA_EVENT","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Target Definition","label":"MA_EVENT_RESTATE_HIST","queries":["spark.sql(\"\"\"INSERT INTO MA_EVENT_RESTATE_HIST SELECT LOAD_DT AS LOAD_DT,\nMA_EVENT_ID AS MA_EVENT_ID,\nOFFER_ID AS OFFER_ID,\nSAP_DEPT_ID AS SAP_DEPT_ID,\nPRODUCT_ID AS PRODUCT_ID,\nCOUNTRY_CD AS COUNTRY_CD,\nSTART_DT AS START_DT,\nEND_DT AS END_DT,\nMA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\nMA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\nLOCATION_ID AS LOCATION_ID,\nMOVEMENT_ID AS MOVEMENT_ID,\nVALUATION_CLASS_CD AS VALUATION_CLASS_CD,\nGL_ACCT_NBR AS GL_ACCT_NBR,\nLOCATION_TYPE_ID AS LOCATION_TYPE_ID,\nROYALTY_BRAND_ID AS ROYALTY_BRAND_ID,\nBRAND_CD AS BRAND_CD,\nMA_FORMULA_CD AS MA_FORMULA_CD,\nFISCAL_MO AS FISCAL_MO,\nSAP_CATEGORY_ID AS SAP_CATEGORY_ID,\nFROM_LOCATION_ID AS FROM_LOCATION_ID,\nSOURCE_VENDOR_ID AS SOURCE_VENDOR_ID,\nCOMPANY_ID AS COMPANY_ID,\nMA_EVENT_DESC AS MA_EVENT_DESC,\nEM_VENDOR_FUNDING_ID AS EM_VENDOR_FUNDING_ID,\nEM_COMMENT AS EM_COMMENT,\nEM_BILL_ALT_VENDOR_FLAG AS EM_BILL_ALT_VENDOR_FLAG,\nEM_ALT_VENDOR_ID AS EM_ALT_VENDOR_ID,\nEM_ALT_VENDOR_NAME AS EM_ALT_VENDOR_NAME,\nEM_ALT_VENDOR_COUNTRY_CD AS EM_ALT_VENDOR_COUNTRY_CD,\nEM_VENDOR_ID AS EM_VENDOR_ID,\nEM_VENDOR_NAME AS EM_VENDOR_NAME,\nEM_VENDOR_COUNTRY_CD AS EM_VENDOR_COUNTRY_CD,\nVENDOR_NAME_TXT AS VENDOR_NAME_TXT,\nMA_PCT_IND AS MA_PCT_IND,\nORIG_MA_AMT AS MA_AMT,\nMA_MAX_AMT AS MA_MAX_AMT,\nINS_UPD_DEL_FLAG AS INS_UPD_DEL_FLAG FROM UPD_InsertOnly_12\"\"\")"]},"id":"MA_EVENT_RESTATE_HIST","position":{"x":0,"y":0},"type":"normalNode"}]}