{"Edges":[{"transformationType":"Source Definition","id":"e-0","source":"","target":"MA_EVENT_TYPE_VAR_CTRL"},{"transformationType":"Source Definition","id":"e-1","source":"","target":"MA_CASH_DISCOUNT_CTRL"},{"transformationType":"Source Qualifier","id":"e-2","source":"MA_CASH_DISCOUNT_CTRL","target":"SQ_Shortcut_to_MA_CASH_DISCOUNT_CTRL"},{"transformationType":"Source Definition","id":"e-3","source":"","target":"MA_FISCAL_MO_CTRL"},{"transformationType":"Source Definition","id":"e-4","source":"","target":"MONTHS"},{"transformationType":"Source Definition","id":"e-5","source":"","target":"VENDOR_PROFILE_RPT"},{"transformationType":"Source Definition","id":"e-6","source":"","target":"SALES_DAY_SKU_STORE_RPT"},{"transformationType":"Source Definition","id":"e-7","source":"","target":"GL_ACCOUNT_PROFILE"},{"transformationType":"Source Definition","id":"e-8","source":"","target":"DAYS"},{"transformationType":"Source Qualifier","id":"e-9","source":"DAYS","target":"SQ_SALES_QUERY"},{"transformationType":"Source Qualifier","id":"e-10","source":"SALES_DAY_SKU_STORE_RPT","target":"SQ_SALES_QUERY"},{"transformationType":"Source Definition","id":"e-11","source":"","target":"SITE_PROFILE_RPT"},{"transformationType":"Source Definition","id":"e-12","source":"","target":"GL_ACTUAL_DETAIL"},{"transformationType":"Source Qualifier","id":"e-13","source":"GL_ACTUAL_DETAIL","target":"SQ_GL_QUERY"},{"transformationType":"Joiner","id":"e-14","source":"SQ_GL_QUERY","target":"JNR_GL_SALES"},{"transformationType":"Joiner","id":"e-15","source":"SQ_SALES_QUERY","target":"JNR_GL_SALES"},{"transformationType":"Joiner","id":"e-16","source":"SQ_Shortcut_to_MA_CASH_DISCOUNT_CTRL","target":"JNR_MA_CASH_DISCOUNT"},{"transformationType":"Joiner","id":"e-17","source":"JNR_GL_SALES","target":"JNR_MA_CASH_DISCOUNT"},{"transformationType":"Expression","id":"e-18","source":"JNR_MA_CASH_DISCOUNT","target":"EXP_ACT_CASH_DISCOUNT_PCT"},{"transformationType":"Filter","id":"e-19","source":"EXP_ACT_CASH_DISCOUNT_PCT","target":"FIL_INS_UPD_FLAG"},{"transformationType":"Update Strategy","id":"e-20","source":"FIL_INS_UPD_FLAG","target":"UPD_STRATEGY"},{"transformationType":"Target Definition","id":"e-21","source":"UPD_STRATEGY","target":"MA_CASH_DISCOUNT_CTRL"}],"Nodes":[{"data":{"transformationType":"Source Definition","label":"MA_EVENT_TYPE_VAR_CTRL","queries":["df_0=spark.sql(\"\"\"\n    SELECT\n        MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\n        MA_EVENT_TYPE_VAR_TYPE_CD AS MA_EVENT_TYPE_VAR_TYPE_CD,\n        MA_EVENT_TYPE_VAR_VALUE AS MA_EVENT_TYPE_VAR_VALUE,\n        START_EFF_DT AS START_EFF_DT,\n        END_EFF_DT AS END_EFF_DT,\n        UPDATE_TSTMP AS UPDATE_TSTMP,\n        LOAD_TSTMP AS LOAD_TSTMP,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        MA_EVENT_TYPE_VAR_CTRL\"\"\")","df_0.createOrReplaceTempView(\"MA_EVENT_TYPE_VAR_CTRL_0\")"]},"id":"MA_EVENT_TYPE_VAR_CTRL","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"MA_CASH_DISCOUNT_CTRL","queries":["df_1=spark.sql(\"\"\"\n    SELECT\n        FISCAL_MO AS FISCAL_MO,\n        SOURCE_VENDOR_ID AS SOURCE_VENDOR_ID,\n        EST_CASH_DISCOUNT_PCT AS EST_CASH_DISCOUNT_PCT,\n        ACT_NET_SALES_COST AS ACT_NET_SALES_COST,\n        ACT_CASH_DISCOUNT_GL_AMT AS ACT_CASH_DISCOUNT_GL_AMT,\n        ACT_CASH_DISCOUNT_PCT AS ACT_CASH_DISCOUNT_PCT,\n        OVRD_CASH_DISCOUNT_PCT AS OVRD_CASH_DISCOUNT_PCT,\n        UPDATE_TSTMP AS UPDATE_TSTMP,\n        LOAD_TSTMP AS LOAD_TSTMP,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        MA_CASH_DISCOUNT_CTRL\"\"\")","df_1.createOrReplaceTempView(\"MA_CASH_DISCOUNT_CTRL_1\")"]},"id":"MA_CASH_DISCOUNT_CTRL","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Qualifier","label":"SQ_Shortcut_to_MA_CASH_DISCOUNT_CTRL","queries":["df_2=spark.sql(\"\"\"\n    SELECT\n        FISCAL_MO AS FISCAL_MO,\n        SOURCE_VENDOR_ID AS SOURCE_VENDOR_ID,\n        ACT_CASH_DISCOUNT_PCT AS ACT_CASH_DISCOUNT_PCT,\n        LOAD_TSTMP AS LOAD_TSTMP,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        MA_CASH_DISCOUNT_CTRL_1\"\"\")","df_2.createOrReplaceTempView(\"SQ_Shortcut_to_MA_CASH_DISCOUNT_CTRL_2\")"]},"id":"SQ_Shortcut_to_MA_CASH_DISCOUNT_CTRL","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"MA_FISCAL_MO_CTRL","queries":["df_3=spark.sql(\"\"\"\n    SELECT\n        FISCAL_MO AS FISCAL_MO,\n        RESTATE_DT AS RESTATE_DT,\n        UPDATE_TSTMP AS UPDATE_TSTMP,\n        LOAD_TSTMP AS LOAD_TSTMP,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        MA_FISCAL_MO_CTRL\"\"\")","df_3.createOrReplaceTempView(\"MA_FISCAL_MO_CTRL_3\")"]},"id":"MA_FISCAL_MO_CTRL","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"MONTHS","queries":["df_4=spark.sql(\"\"\"\n    SELECT\n        FISCAL_MO AS FISCAL_MO,\n        FISCAL_HALF AS FISCAL_HALF,\n        FISCAL_MO_NAME AS FISCAL_MO_NAME,\n        FISCAL_MO_NAME_ABBR AS FISCAL_MO_NAME_ABBR,\n        FISCAL_MO_NBR AS FISCAL_MO_NBR,\n        FISCAL_QTR AS FISCAL_QTR,\n        FISCAL_QTR_NBR AS FISCAL_QTR_NBR,\n        FISCAL_YR AS FISCAL_YR,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        MONTHS\"\"\")","df_4.createOrReplaceTempView(\"MONTHS_4\")"]},"id":"MONTHS","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"VENDOR_PROFILE_RPT","queries":["df_5=spark.sql(\"\"\"\n    SELECT\n        VENDOR_ID AS VENDOR_ID,\n        VENDOR_NAME AS VENDOR_NAME,\n        VENDOR_TYPE_ID AS VENDOR_TYPE_ID,\n        VENDOR_TYPE_DESC AS VENDOR_TYPE_DESC,\n        VENDOR_NBR AS VENDOR_NBR,\n        LOCATION_ID AS LOCATION_ID,\n        PARENT_VENDOR_ID AS PARENT_VENDOR_ID,\n        PARENT_VENDOR_NAME AS PARENT_VENDOR_NAME,\n        PURCH_GROUP_ID AS PURCH_GROUP_ID,\n        PURCH_GROUP_NAME AS PURCH_GROUP_NAME,\n        MGR_ID AS MGR_ID,\n        MGR_DESC AS MGR_DESC,\n        DVL_ID AS DVL_ID,\n        DVL_DESC AS DVL_DESC,\n        EDI_ELIG_FLAG AS EDI_ELIG_FLAG,\n        PAYMENT_TERM_CD AS PAYMENT_TERM_CD,\n        PAYMENT_TERM_DESC AS PAYMENT_TERM_DESC,\n        INCO_TERM_CD AS INCO_TERM_CD,\n        INCO_TERM_DESC AS INCO_TERM_DESC,\n        ADDRESS AS ADDRESS,\n        CITY AS CITY,\n        STATE AS STATE,\n        STATE_NAME AS STATE_NAME,\n        COUNTRY_CD AS COUNTRY_CD,\n        COUNTRY_NAME AS COUNTRY_NAME,\n        ZIP AS ZIP,\n        CONTACT AS CONTACT,\n        CONTACT_PHONE AS CONTACT_PHONE,\n        PHONE AS PHONE,\n        PHONE_EXT AS PHONE_EXT,\n        FAX AS FAX,\n        RTV_ELIG_FLAG AS RTV_ELIG_FLAG,\n        RTV_TYPE_CD AS RTV_TYPE_CD,\n        RTV_TYPE_DESC AS RTV_TYPE_DESC,\n        RTV_FREIGHT_TYPE_CD AS RTV_FREIGHT_TYPE_CD,\n        INDUSTRY_CD AS INDUSTRY_CD,\n        LATITUDE AS LATITUDE,\n        LONGITUDE AS LONGITUDE,\n        TIME_ZONE_ID AS TIME_ZONE_ID,\n        ADD_DT AS ADD_DT,\n        UPDATE_DT AS UPDATE_DT,\n        LOAD_DT AS LOAD_DT,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        VENDOR_PROFILE_RPT\"\"\")","df_5.createOrReplaceTempView(\"VENDOR_PROFILE_RPT_5\")"]},"id":"VENDOR_PROFILE_RPT","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"SALES_DAY_SKU_STORE_RPT","queries":["df_6=spark.sql(\"\"\"\n    SELECT\n        DAY_DT AS DAY_DT,\n        PRODUCT_ID AS PRODUCT_ID,\n        LOCATION_ID AS LOCATION_ID,\n        SALES_CUST_CAPTURE_CD AS SALES_CUST_CAPTURE_CD,\n        WEEK_DT AS WEEK_DT,\n        FISCAL_YR AS FISCAL_YR,\n        SKU_NBR AS SKU_NBR,\n        STORE_NBR AS STORE_NBR,\n        OPT_SALES_TYPE_ID AS OPT_SALES_TYPE_ID,\n        VENDOR_ID AS VENDOR_ID,\n        PROMO_FLAG AS PROMO_FLAG,\n        STATUS_ID AS STATUS_ID,\n        BRAND_NAME AS BRAND_NAME,\n        OWNBRAND_FLAG AS OWNBRAND_FLAG,\n        SKU_VEND_TXN_CNT AS SKU_VEND_TXN_CNT,\n        NET_SALES_AMT AS NET_SALES_AMT,\n        NET_SALES_QTY AS NET_SALES_QTY,\n        NET_MARGIN_AMT AS NET_MARGIN_AMT,\n        SALES_AMT AS SALES_AMT,\n        SALES_COST AS SALES_COST,\n        SALES_QTY AS SALES_QTY,\n        RETURN_AMT AS RETURN_AMT,\n        RETURN_COST AS RETURN_COST,\n        RETURN_QTY AS RETURN_QTY,\n        CLEARANCE_AMT AS CLEARANCE_AMT,\n        CLEARANCE_QTY AS CLEARANCE_QTY,\n        CLEARANCE_RETURN_AMT AS CLEARANCE_RETURN_AMT,\n        CLEARANCE_RETURN_QTY AS CLEARANCE_RETURN_QTY,\n        DISCOUNT_AMT AS DISCOUNT_AMT,\n        DISCOUNT_QTY AS DISCOUNT_QTY,\n        DISCOUNT_RETURN_AMT AS DISCOUNT_RETURN_AMT,\n        DISCOUNT_RETURN_QTY AS DISCOUNT_RETURN_QTY,\n        POS_COUPON_AMT AS POS_COUPON_AMT,\n        POS_COUPON_QTY AS POS_COUPON_QTY,\n        SPECIAL_SALES_AMT AS SPECIAL_SALES_AMT,\n        SPECIAL_SALES_QTY AS SPECIAL_SALES_QTY,\n        SPECIAL_RETURN_AMT AS SPECIAL_RETURN_AMT,\n        SPECIAL_RETURN_QTY AS SPECIAL_RETURN_QTY,\n        SPECIAL_SRVC_AMT AS SPECIAL_SRVC_AMT,\n        SPECIAL_SRVC_QTY AS SPECIAL_SRVC_QTY,\n        MA_SALES_AMT AS MA_SALES_AMT,\n        MA_SALES_QTY AS MA_SALES_QTY,\n        MA_TRANS_AMT AS MA_TRANS_AMT,\n        MA_TRANS_COST AS MA_TRANS_COST,\n        MA_TRANS_QTY AS MA_TRANS_QTY,\n        EXCH_RATE_PCT AS EXCH_RATE_PCT,\n        UPDATE_DT AS UPDATE_DT,\n        LOAD_DT AS LOAD_DT,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        SALES_DAY_SKU_STORE_RPT\"\"\")","df_6.createOrReplaceTempView(\"SALES_DAY_SKU_STORE_RPT_6\")"]},"id":"SALES_DAY_SKU_STORE_RPT","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"GL_ACCOUNT_PROFILE","queries":["df_7=spark.sql(\"\"\"\n    SELECT\n        GL_ACCOUNT_GID AS GL_ACCOUNT_GID,\n        GL_CHART_OF_ACCOUNTS_CD AS GL_CHART_OF_ACCOUNTS_CD,\n        GL_ACCOUNT_NBR AS GL_ACCOUNT_NBR,\n        GL_ACCOUNT_DESC AS GL_ACCOUNT_DESC,\n        GL_ACCOUNT_GROUP_CD AS GL_ACCOUNT_GROUP_CD,\n        GL_ACCOUNT_GROUP_DESC AS GL_ACCOUNT_GROUP_DESC,\n        GL_BAL_SHEET_IND AS GL_BAL_SHEET_IND,\n        GL_PL_IND AS GL_PL_IND,\n        UPDATE_DT AS UPDATE_DT,\n        LOAD_DT AS LOAD_DT,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        GL_ACCOUNT_PROFILE\"\"\")","df_7.createOrReplaceTempView(\"GL_ACCOUNT_PROFILE_7\")"]},"id":"GL_ACCOUNT_PROFILE","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"DAYS","queries":["df_8=spark.sql(\"\"\"\n    SELECT\n        DAY_DT AS DAY_DT,\n        BUSINESS_DAY_FLAG AS BUSINESS_DAY_FLAG,\n        HOLIDAY_FLAG AS HOLIDAY_FLAG,\n        DAY_OF_WK_NAME AS DAY_OF_WK_NAME,\n        DAY_OF_WK_NAME_ABBR AS DAY_OF_WK_NAME_ABBR,\n        DAY_OF_WK_NBR AS DAY_OF_WK_NBR,\n        CAL_DAY_OF_MO_NBR AS CAL_DAY_OF_MO_NBR,\n        CAL_DAY_OF_YR_NBR AS CAL_DAY_OF_YR_NBR,\n        CAL_WK AS CAL_WK,\n        CAL_WK_NBR AS CAL_WK_NBR,\n        CAL_MO AS CAL_MO,\n        CAL_MO_NBR AS CAL_MO_NBR,\n        CAL_MO_NAME AS CAL_MO_NAME,\n        CAL_MO_NAME_ABBR AS CAL_MO_NAME_ABBR,\n        CAL_QTR AS CAL_QTR,\n        CAL_QTR_NBR AS CAL_QTR_NBR,\n        CAL_HALF AS CAL_HALF,\n        CAL_YR AS CAL_YR,\n        FISCAL_DAY_OF_MO_NBR AS FISCAL_DAY_OF_MO_NBR,\n        FISCAL_DAY_OF_YR_NBR AS FISCAL_DAY_OF_YR_NBR,\n        FISCAL_WK AS FISCAL_WK,\n        FISCAL_WK_NBR AS FISCAL_WK_NBR,\n        FISCAL_MO AS FISCAL_MO,\n        FISCAL_MO_NBR AS FISCAL_MO_NBR,\n        FISCAL_MO_NAME AS FISCAL_MO_NAME,\n        FISCAL_MO_NAME_ABBR AS FISCAL_MO_NAME_ABBR,\n        FISCAL_QTR AS FISCAL_QTR,\n        FISCAL_QTR_NBR AS FISCAL_QTR_NBR,\n        FISCAL_HALF AS FISCAL_HALF,\n        FISCAL_YR AS FISCAL_YR,\n        LYR_WEEK_DT AS LYR_WEEK_DT,\n        LWK_WEEK_DT AS LWK_WEEK_DT,\n        WEEK_DT AS WEEK_DT,\n        EST_TIME_CONV_AMT AS EST_TIME_CONV_AMT,\n        EST_TIME_CONV_HRS AS EST_TIME_CONV_HRS,\n        ES0_TIME_CONV_AMT AS ES0_TIME_CONV_AMT,\n        ES0_TIME_CONV_HRS AS ES0_TIME_CONV_HRS,\n        CST_TIME_CONV_AMT AS CST_TIME_CONV_AMT,\n        CST_TIME_CONV_HRS AS CST_TIME_CONV_HRS,\n        CS0_TIME_CONV_AMT AS CS0_TIME_CONV_AMT,\n        CS0_TIME_CONV_HRS AS CS0_TIME_CONV_HRS,\n        MST_TIME_CONV_AMT AS MST_TIME_CONV_AMT,\n        MST_TIME_CONV_HRS AS MST_TIME_CONV_HRS,\n        MS0_TIME_CONV_AMT AS MS0_TIME_CONV_AMT,\n        MS0_TIME_CONV_HRS AS MS0_TIME_CONV_HRS,\n        PST_TIME_CONV_AMT AS PST_TIME_CONV_AMT,\n        PST_TIME_CONV_HRS AS PST_TIME_CONV_HRS,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        DAYS\"\"\")","df_8.createOrReplaceTempView(\"DAYS_8\")"]},"id":"DAYS","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Qualifier","label":"SQ_SALES_QUERY","queries":["df_9=spark.sql(\"\"\"\n    SELECT\n        SLS.FISCAL_MO,\n        SLS.VENDOR_ID,\n        SLS.ACT_NET_SALES_COST \n    FROM\n        (SELECT\n            D.FISCAL_MO,\n            S.VENDOR_ID,\n            SUM((SALES_COST - RETURN_COST) * EXCH_RATE_PCT) ACT_NET_SALES_COST \n        FROM\n            SALES_DAY_SKU_STORE_RPT S \n        JOIN\n            DAYS D \n                ON S.DAY_DT = D.DAY_DT \n        JOIN\n            MA_FISCAL_MO_CTRL MFMC \n                ON D.FISCAL_MO = MFMC.FISCAL_MO \n                AND MFMC.RESTATE_DT = CURRENT_DATE \n        GROUP BY\n            D.FISCAL_MO,\n            S.VENDOR_ID) SLS\"\"\")","df_9.createOrReplaceTempView(\"SQ_SALES_QUERY_9\")"]},"id":"SQ_SALES_QUERY","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Qualifier","label":"SQ_SALES_QUERY","queries":["df_9=spark.sql(\"\"\"\n    SELECT\n        SLS.FISCAL_MO,\n        SLS.VENDOR_ID,\n        SLS.ACT_NET_SALES_COST \n    FROM\n        (SELECT\n            D.FISCAL_MO,\n            S.VENDOR_ID,\n            SUM((SALES_COST - RETURN_COST) * EXCH_RATE_PCT) ACT_NET_SALES_COST \n        FROM\n            SALES_DAY_SKU_STORE_RPT S \n        JOIN\n            DAYS D \n                ON S.DAY_DT = D.DAY_DT \n        JOIN\n            MA_FISCAL_MO_CTRL MFMC \n                ON D.FISCAL_MO = MFMC.FISCAL_MO \n                AND MFMC.RESTATE_DT = CURRENT_DATE \n        GROUP BY\n            D.FISCAL_MO,\n            S.VENDOR_ID) SLS\"\"\")","df_9.createOrReplaceTempView(\"SQ_SALES_QUERY_9\")"]},"id":"SQ_SALES_QUERY","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"SITE_PROFILE_RPT","queries":["df_10=spark.sql(\"\"\"\n    SELECT\n        LOCATION_ID AS LOCATION_ID,\n        LOCATION_TYPE_ID AS LOCATION_TYPE_ID,\n        LOCATION_TYPE_DESC AS LOCATION_TYPE_DESC,\n        STORE_NBR AS STORE_NBR,\n        STORE_NAME AS STORE_NAME,\n        STORE_TYPE_ID AS STORE_TYPE_ID,\n        STORE_TYPE_DESC AS STORE_TYPE_DESC,\n        PARENT_LOCATION_ID AS PARENT_LOCATION_ID,\n        LOCATION_NBR AS LOCATION_NBR,\n        COMPANY_ID AS COMPANY_ID,\n        COMPANY_DESC AS COMPANY_DESC,\n        SUPER_REGION_ID AS SUPER_REGION_ID,\n        SUPER_REGION_DESC AS SUPER_REGION_DESC,\n        REGION_ID AS REGION_ID,\n        REGION_DESC AS REGION_DESC,\n        DISTRICT_ID AS DISTRICT_ID,\n        DISTRICT_DESC AS DISTRICT_DESC,\n        SITE_ADDRESS AS SITE_ADDRESS,\n        SITE_CITY AS SITE_CITY,\n        SITE_COUNTY AS SITE_COUNTY,\n        STATE_CD AS STATE_CD,\n        STATE_NAME AS STATE_NAME,\n        POSTAL_CD AS POSTAL_CD,\n        COUNTRY_CD AS COUNTRY_CD,\n        COUNTRY_NAME AS COUNTRY_NAME,\n        GEO_LATITUDE_NBR AS GEO_LATITUDE_NBR,\n        GEO_LONGITUDE_NBR AS GEO_LONGITUDE_NBR,\n        PETSMART_DMA_CD AS PETSMART_DMA_CD,\n        PETSMART_DMA_DESC AS PETSMART_DMA_DESC,\n        SITE_MAIN_TELE_NO AS SITE_MAIN_TELE_NO,\n        SITE_GROOM_TELE_NO AS SITE_GROOM_TELE_NO,\n        SITE_FAX_NO AS SITE_FAX_NO,\n        SITE_EMAIL_ADDRESS AS SITE_EMAIL_ADDRESS,\n        STORE_OPEN_CLOSE_FLAG AS STORE_OPEN_CLOSE_FLAG,\n        SFT_OPEN_DT AS SFT_OPEN_DT,\n        OPEN_DT AS OPEN_DT,\n        GR_OPEN_DT AS GR_OPEN_DT,\n        CLOSE_DT AS CLOSE_DT,\n        SITE_SALES_FLAG AS SITE_SALES_FLAG,\n        SALES_CURR_FLAG AS SALES_CURR_FLAG,\n        SITE_OPEN_YRS_AMT AS SITE_OPEN_YRS_AMT,\n        FIRST_SALE_DT AS FIRST_SALE_DT,\n        FIRST_MEASURED_SALE_DT AS FIRST_MEASURED_SALE_DT,\n        LAST_SALE_DT AS LAST_SALE_DT,\n        COMP_CURR_FLAG AS COMP_CURR_FLAG,\n        COMP_EFF_DT AS COMP_EFF_DT,\n        COMP_END_DT AS COMP_END_DT,\n        TP_LOC_FLAG AS TP_LOC_FLAG,\n        TP_ACTIVE_CNT AS TP_ACTIVE_CNT,\n        TP_START_DT AS TP_START_DT,\n        HOTEL_FLAG AS HOTEL_FLAG,\n        HOTEL_OPEN_DT AS HOTEL_OPEN_DT,\n        DAYCAMP_FLAG AS DAYCAMP_FLAG,\n        VET_FLAG AS VET_FLAG,\n        TIME_ZONE_ID AS TIME_ZONE_ID,\n        TIME_ZONE AS TIME_ZONE,\n        SQ_FEET_RETAIL AS SQ_FEET_RETAIL,\n        SQ_FEET_TOTAL AS SQ_FEET_TOTAL,\n        TRADE_AREA AS TRADE_AREA,\n        DELV_SERVICE_CLASS_ID AS DELV_SERVICE_CLASS_ID,\n        PICK_SERVICE_CLASS_ID AS PICK_SERVICE_CLASS_ID,\n        REPL_DC_NBR AS REPL_DC_NBR,\n        REPL_FISH_DC_NBR AS REPL_FISH_DC_NBR,\n        REPL_FWD_DC_NBR AS REPL_FWD_DC_NBR,\n        PROMO_LABEL_CD AS PROMO_LABEL_CD,\n        PRICE_ZONE_ID AS PRICE_ZONE_ID,\n        PRICE_ZONE_DESC AS PRICE_ZONE_DESC,\n        PRICE_AD_ZONE_ID AS PRICE_AD_ZONE_ID,\n        PRICE_AD_ZONE_DESC AS PRICE_AD_ZONE_DESC,\n        EQUINE_MERCH_ID AS EQUINE_MERCH_ID,\n        EQUINE_MERCH_DESC AS EQUINE_MERCH_DESC,\n        EQUINE_SITE_ID AS EQUINE_SITE_ID,\n        EQUINE_SITE_DESC AS EQUINE_SITE_DESC,\n        EQUINE_SITE_OPEN_DT AS EQUINE_SITE_OPEN_DT,\n        LOYALTY_PGM_TYPE_ID AS LOYALTY_PGM_TYPE_ID,\n        LOYALTY_PGM_TYPE_DESC AS LOYALTY_PGM_TYPE_DESC,\n        LOYALTY_PGM_STATUS_ID AS LOYALTY_PGM_STATUS_ID,\n        LOYALTY_PGM_STATUS_DESC AS LOYALTY_PGM_STATUS_DESC,\n        LOYALTY_PGM_START_DT AS LOYALTY_PGM_START_DT,\n        LOYALTY_PGM_CHANGE_DT AS LOYALTY_PGM_CHANGE_DT,\n        BP_COMPANY_NBR AS BP_COMPANY_NBR,\n        BP_GL_ACCT AS BP_GL_ACCT,\n        SITE_LOGIN_ID AS SITE_LOGIN_ID,\n        SITE_MANAGER_ID AS SITE_MANAGER_ID,\n        SITE_MANAGER_NAME AS SITE_MANAGER_NAME,\n        MGR_ID AS MGR_ID,\n        MGR_DESC AS MGR_DESC,\n        DVL_ID AS DVL_ID,\n        DVL_DESC AS DVL_DESC,\n        PURCH_GROUP_ID AS PURCH_GROUP_ID,\n        PURCH_GROUP_NAME AS PURCH_GROUP_NAME,\n        TOTAL_SALES_RANKING_CD AS TOTAL_SALES_RANKING_CD,\n        MERCH_SALES_RANKING_CD AS MERCH_SALES_RANKING_CD,\n        SERVICES_SALES_RANKING_CD AS SERVICES_SALES_RANKING_CD,\n        SALON_SALES_RANKING_CD AS SALON_SALES_RANKING_CD,\n        TRAINING_SALES_RANKING_CD AS TRAINING_SALES_RANKING_CD,\n        HOTEL_DDC_SALES_RANKING_CD AS HOTEL_DDC_SALES_RANKING_CD,\n        CONSUMABLES_SALES_RANKING_CD AS CONSUMABLES_SALES_RANKING_CD,\n        HARDGOODS_SALES_RANKING_CD AS HARDGOODS_SALES_RANKING_CD,\n        SPECIALTY_SALES_RANKING_CD AS SPECIALTY_SALES_RANKING_CD,\n        DIST_MGR_NAME AS DIST_MGR_NAME,\n        DM_EMAIL_ADDRESS AS DM_EMAIL_ADDRESS,\n        DC_AREA_DIRECTOR_NAME AS DC_AREA_DIRECTOR_NAME,\n        DC_AREA_DIRECTOR_EMAIL AS DC_AREA_DIRECTOR_EMAIL,\n        DIST_SVC_MGR_NAME AS DIST_SVC_MGR_NAME,\n        DSM_EMAIL_ADDRESS AS DSM_EMAIL_ADDRESS,\n        REGION_VP_NAME AS REGION_VP_NAME,\n        RVP_EMAIL_ADDRESS AS RVP_EMAIL_ADDRESS,\n        REGION_TRAINER_NAME AS REGION_TRAINER_NAME,\n        ASSET_PROTECT_NAME AS ASSET_PROTECT_NAME,\n        ASSET_PROTECT_EMAIL AS ASSET_PROTECT_EMAIL,\n        LP_SAFETY_DIRECTOR_NAME AS LP_SAFETY_DIRECTOR_NAME,\n        LP_SAFETY_DIRECTOR_EMAIL AS LP_SAFETY_DIRECTOR_EMAIL,\n        SR_LP_SAFETY_MGR_NAME AS SR_LP_SAFETY_MGR_NAME,\n        SR_LP_SAFETY_MGR_EMAIL AS SR_LP_SAFETY_MGR_EMAIL,\n        REGIONAL_LP_SAFETY_MGR_NAME AS REGIONAL_LP_SAFETY_MGR_NAME,\n        REGIONAL_LP_SAFETY_MGR_EMAIL AS REGIONAL_LP_SAFETY_MGR_EMAIL,\n        RETAIL_MANAGER_SAFETY_NAME AS RETAIL_MANAGER_SAFETY_NAME,\n        RETAIL_MANAGER_SAFETY_EMAIL AS RETAIL_MANAGER_SAFETY_EMAIL,\n        DC_GENERAL_MANAGER_NAME AS DC_GENERAL_MANAGER_NAME,\n        DC_GENERAL_MANAGER_EMAIL AS DC_GENERAL_MANAGER_EMAIL,\n        ASST_DC_GENERAL_MANAGER_NAME1 AS ASST_DC_GENERAL_MANAGER_NAME1,\n        ASST_DC_GENERAL_MANAGER_EMAIL1 AS ASST_DC_GENERAL_MANAGER_EMAIL1,\n        ASST_DC_GENERAL_MANAGER_NAME2 AS ASST_DC_GENERAL_MANAGER_NAME2,\n        ASST_DC_GENERAL_MANAGER_EMAIL2 AS ASST_DC_GENERAL_MANAGER_EMAIL2,\n        HR_MANAGER_NAME AS HR_MANAGER_NAME,\n        HR_MANAGER_EMAIL AS HR_MANAGER_EMAIL,\n        HR_SUPERVISOR_NAME1 AS HR_SUPERVISOR_NAME1,\n        HR_SUPERVISOR_EMAIL1 AS HR_SUPERVISOR_EMAIL1,\n        HR_SUPERVISOR_NAME2 AS HR_SUPERVISOR_NAME2,\n        HR_SUPERVISOR_EMAIL2 AS HR_SUPERVISOR_EMAIL2,\n        LEARN_SOLUTION_MGR_NAME AS LEARN_SOLUTION_MGR_NAME,\n        LEARN_SOLUTION_MGR_EMAIL AS LEARN_SOLUTION_MGR_EMAIL,\n        ADD_DT AS ADD_DT,\n        DELETE_DT AS DELETE_DT,\n        UPDATE_DT AS UPDATE_DT,\n        LOAD_DT AS LOAD_DT,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        SITE_PROFILE_RPT\"\"\")","df_10.createOrReplaceTempView(\"SITE_PROFILE_RPT_10\")"]},"id":"SITE_PROFILE_RPT","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"GL_ACTUAL_DETAIL","queries":["df_11=spark.sql(\"\"\"\n    SELECT\n        FISCAL_YR AS FISCAL_YR,\n        FISCAL_MO AS FISCAL_MO,\n        GL_DOCUMENT_NBR AS GL_DOCUMENT_NBR,\n        GL_COMPANY_CD AS GL_COMPANY_CD,\n        GL_DOCUMENT_LINE_NBR AS GL_DOCUMENT_LINE_NBR,\n        FISCAL_WK AS FISCAL_WK,\n        WEEK_DT AS WEEK_DT,\n        GL_DOCUMENT_DT AS GL_DOCUMENT_DT,\n        GL_POSTING_DT AS GL_POSTING_DT,\n        GL_DOCUMENT_ENTRY_DT AS GL_DOCUMENT_ENTRY_DT,\n        GL_DOCUMENT_TYPE_CD AS GL_DOCUMENT_TYPE_CD,\n        GL_REF_DOCUMENT_NBR AS GL_REF_DOCUMENT_NBR,\n        GL_PROFIT_CENTER_GID AS GL_PROFIT_CENTER_GID,\n        LOCATION_ID AS LOCATION_ID,\n        STORE_NBR AS STORE_NBR,\n        GL_DEPARTMENT_CD AS GL_DEPARTMENT_CD,\n        GL_DEBIT_CREDIT_IND AS GL_DEBIT_CREDIT_IND,\n        GL_ACCOUNT_GID AS GL_ACCOUNT_GID,\n        GL_BALANCE_SHEET_IND AS GL_BALANCE_SHEET_IND,\n        GL_PL_SHEET_IND AS GL_PL_SHEET_IND,\n        GL_SPLIT_LINE_ITEM_IND AS GL_SPLIT_LINE_ITEM_IND,\n        GL_BUSINESS_TXN_TYPE_CD AS GL_BUSINESS_TXN_TYPE_CD,\n        GL_REF_TXN_TYPE_CD AS GL_REF_TXN_TYPE_CD,\n        GL_TXN_TYPE_CD AS GL_TXN_TYPE_CD,\n        GL_COST_ELEMENT_CD AS GL_COST_ELEMENT_CD,\n        GL_POSTING_KEY_GID AS GL_POSTING_KEY_GID,\n        GL_CONTROLLING_AREA AS GL_CONTROLLING_AREA,\n        GL_SEGMENT_CD AS GL_SEGMENT_CD,\n        GL_PARTNER_PROFIT_CENTER_GID AS GL_PARTNER_PROFIT_CENTER_GID,\n        GL_PARTNER_COMPANY_CD AS GL_PARTNER_COMPANY_CD,\n        GL_PARTNER_SEGMENT_CD AS GL_PARTNER_SEGMENT_CD,\n        VENDOR_ID AS VENDOR_ID,\n        GL_ITEM_CATEGORY_CD AS GL_ITEM_CATEGORY_CD,\n        GL_PURCH_DOC_NBR AS GL_PURCH_DOC_NBR,\n        GL_DOC_CURRENCY_ID AS GL_DOC_CURRENCY_ID,\n        GL_DOC_AMT AS GL_DOC_AMT,\n        GL_LOC_CURRENCY_ID AS GL_LOC_CURRENCY_ID,\n        GL_LOC_AMT AS GL_LOC_AMT,\n        GL_GRP_CURRENCY_ID AS GL_GRP_CURRENCY_ID,\n        GL_GRP_AMT AS GL_GRP_AMT,\n        GL_QTY AS GL_QTY,\n        GL_QTY_UOM_CD AS GL_QTY_UOM_CD,\n        EXCH_RATE_PCT AS EXCH_RATE_PCT,\n        GL_USER_NAME AS GL_USER_NAME,\n        GL_LOAD_TSTMP AS GL_LOAD_TSTMP,\n        UPDATE_DT AS UPDATE_DT,\n        LOAD_DT AS LOAD_DT,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        GL_ACTUAL_DETAIL\"\"\")","df_11.createOrReplaceTempView(\"GL_ACTUAL_DETAIL_11\")"]},"id":"GL_ACTUAL_DETAIL","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Qualifier","label":"SQ_GL_QUERY","queries":["df_12=spark.sql(\"\"\"\n    SELECT\n        GL.FISCAL_MO,\n        GL.VENDOR_ID,\n        GL.ACT_CASH_DISCOUNT_GL_AMT \n    FROM\n        (SELECT\n            P.FISCAL_MO,\n            V.VENDOR_ID,\n            -SUM(P.CASH_DISCOUNT_AMT) AS ACT_CASH_DISCOUNT_GL_AMT \n        FROM\n            (SELECT\n                GAD.FISCAL_MO,\n                GAD.GL_DOCUMENT_NBR,\n                GAD.GL_COMPANY_CD,\n                MAX(GAD.VENDOR_ID) OVER (PARTITION \n            BY\n                gad.FISCAL_MO,\n                gad.GL_DOCUMENT_NBR,\n                gad.GL_COMPANY_CD ) AS VENDOR_ID,\n                CASE \n                    WHEN METVC.MA_EVENT_TYPE_VAR_VALUE IS NOT NULL THEN GAD.GL_GRP_AMT \n                    ELSE 0 \n                END CASH_DISCOUNT_AMT \n            FROM\n                GL_ACTUAL_DETAIL GAD \n            JOIN\n                SITE_PROFILE_RPT SITE \n                    ON GAD.LOCATION_ID = SITE.LOCATION_ID \n            JOIN\n                GL_ACCOUNT_PROFILE GAP \n                    ON GAD.GL_ACCOUNT_GID = GAP.GL_ACCOUNT_GID \n            JOIN\n                (\n                    SELECT\n                        DISTINCT GAD.FISCAL_MO,\n                        GAD.GL_DOCUMENT_NBR,\n                        GAD.GL_COMPANY_CD \n                    FROM\n                        GL_ACTUAL_DETAIL GAD \n                    JOIN\n                        GL_ACCOUNT_PROFILE GAP \n                            ON GAD.GL_ACCOUNT_GID = GAP.GL_ACCOUNT_GID \n                    JOIN\n                        MONTHS m \n                            ON GAD.FISCAL_MO = M.FISCAL_MO \n                    JOIN\n                        MA_FISCAL_MO_CTRL MFMC \n                            ON M.FISCAL_MO = MFMC.FISCAL_MO \n                            AND MFMC.RESTATE_DT = CURRENT_DATE \n                    JOIN\n                        (\n                            SELECT\n                                MA_EVENT_TYPE_VAR_VALUE,\n                                START_EFF_DT,\n                                END_EFF_DT \n                            FROM\n                                MA_EVENT_TYPE_VAR_CTRL \n                            WHERE\n                                MA_EVENT_TYPE_VAR_TYPE_CD = 'GL_ACCT_NBR' \n                                AND MA_EVENT_TYPE_ID = 90\n                        ) METVC \n                            ON GAP.GL_ACCOUNT_NBR::VARCHAR (25) = METVC.MA_EVENT_TYPE_VAR_VALUE \n                            AND GAD.GL_POSTING_DT BETWEEN METVC.START_EFF_DT AND METVC.END_EFF_DT\n                        ) pre \n                            ON gad.FISCAL_MO = pre.FISCAL_MO \n                            AND gad.GL_DOCUMENT_NBR = pre.GL_DOCUMENT_NBR \n                            AND gad.GL_COMPANY_CD = pre.GL_COMPANY_CD \n                    LEFT JOIN\n                        (\n                            SELECT\n                                MA_EVENT_TYPE_VAR_VALUE,\n                                START_EFF_DT,\n                                END_EFF_DT \n                            FROM\n                                MA_EVENT_TYPE_VAR_CTRL \n                            WHERE\n                                MA_EVENT_TYPE_VAR_TYPE_CD = 'GL_ACCT_NBR' \n                                AND MA_EVENT_TYPE_ID = 90\n                        ) METVC \n                            ON GAP.GL_ACCOUNT_NBR::VARCHAR (25) = METVC.MA_EVENT_TYPE_VAR_VALUE \n                            AND GAD.GL_POSTING_DT BETWEEN METVC.START_EFF_DT AND METVC.END_EFF_DT\n                        ) P \n                JOIN\n                    VENDOR_PROFILE_RPT V \n                        ON CAST(P.VENDOR_ID AS VARCHAR (50)) = V.VENDOR_NBR \n                        AND V.VENDOR_TYPE_ID IN (\n                            2\n                        ) \n                GROUP BY\n                    P.FISCAL_MO,\n                    V.VENDOR_ID\n            ) GL\"\"\")","df_12.createOrReplaceTempView(\"SQ_GL_QUERY_12\")"]},"id":"SQ_GL_QUERY","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Joiner","label":"JNR_GL_SALES","queries":["df_13=spark.sql(\"\"\"\n    SELECT\n        MASTER.FISCAL_MO AS FISCAL_MO1,\n        MASTER.VENDOR_ID AS VENDOR_ID1,\n        MASTER.ACT_CASH_DISCOUNT_GL_AMT AS ACT_CASH_DISCOUNT_GL_AMT,\n        DETAIL.FISCAL_MO AS FISCAL_MO,\n        DETAIL.VENDOR_ID AS VENDOR_ID,\n        DETAIL.ACT_NET_SALES_COST AS ACT_NET_SALES_COST,\n        MASTER.Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        SQ_GL_QUERY_12 MASTER \n    RIGHT JOIN\n        SQ_SALES_QUERY_9 DETAIL \n            ON MASTER.FISCAL_MO = FISCAL_MO \n            AND VENDOR_ID1 = DETAIL.VENDOR_ID\"\"\")","df_13.createOrReplaceTempView(\"JNR_GL_SALES_13\")"]},"id":"JNR_GL_SALES","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Joiner","label":"JNR_GL_SALES","queries":["df_13=spark.sql(\"\"\"\n    SELECT\n        MASTER.FISCAL_MO AS FISCAL_MO1,\n        MASTER.VENDOR_ID AS VENDOR_ID1,\n        MASTER.ACT_CASH_DISCOUNT_GL_AMT AS ACT_CASH_DISCOUNT_GL_AMT,\n        DETAIL.FISCAL_MO AS FISCAL_MO,\n        DETAIL.VENDOR_ID AS VENDOR_ID,\n        DETAIL.ACT_NET_SALES_COST AS ACT_NET_SALES_COST,\n        MASTER.Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        SQ_GL_QUERY_12 MASTER \n    RIGHT JOIN\n        SQ_SALES_QUERY_9 DETAIL \n            ON MASTER.FISCAL_MO = FISCAL_MO \n            AND VENDOR_ID1 = DETAIL.VENDOR_ID\"\"\")","df_13.createOrReplaceTempView(\"JNR_GL_SALES_13\")"]},"id":"JNR_GL_SALES","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Joiner","label":"JNR_MA_CASH_DISCOUNT","queries":["df_14=spark.sql(\"\"\"\n    SELECT\n        MASTER.FISCAL_MO1 AS FISCAL_MO1,\n        MASTER.VENDOR_ID1 AS VENDOR_ID1,\n        MASTER.ACT_CASH_DISCOUNT_GL_AMT AS ACT_CASH_DISCOUNT_GL_AMT,\n        MASTER.ACT_NET_SALES_COST AS ACT_NET_SALES_COST,\n        DETAIL.FISCAL_MO AS FISCAL_MO,\n        DETAIL.SOURCE_VENDOR_ID AS SOURCE_VENDOR_ID,\n        DETAIL.ACT_CASH_DISCOUNT_PCT AS ACT_CASH_DISCOUNT_PCT,\n        DETAIL.LOAD_TSTMP AS LOAD_TSTMP,\n        MASTER.Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        JNR_GL_SALES_13 MASTER \n    RIGHT JOIN\n        SQ_Shortcut_to_MA_CASH_DISCOUNT_CTRL_2 DETAIL \n            ON MASTER.FISCAL_MO1 = FISCAL_MO \n            AND VENDOR_ID1 = DETAIL.SOURCE_VENDOR_ID\"\"\")","df_14.createOrReplaceTempView(\"JNR_MA_CASH_DISCOUNT_14\")"]},"id":"JNR_MA_CASH_DISCOUNT","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Joiner","label":"JNR_MA_CASH_DISCOUNT","queries":["df_14=spark.sql(\"\"\"\n    SELECT\n        MASTER.FISCAL_MO1 AS FISCAL_MO1,\n        MASTER.VENDOR_ID1 AS VENDOR_ID1,\n        MASTER.ACT_CASH_DISCOUNT_GL_AMT AS ACT_CASH_DISCOUNT_GL_AMT,\n        MASTER.ACT_NET_SALES_COST AS ACT_NET_SALES_COST,\n        DETAIL.FISCAL_MO AS FISCAL_MO,\n        DETAIL.SOURCE_VENDOR_ID AS SOURCE_VENDOR_ID,\n        DETAIL.ACT_CASH_DISCOUNT_PCT AS ACT_CASH_DISCOUNT_PCT,\n        DETAIL.LOAD_TSTMP AS LOAD_TSTMP,\n        MASTER.Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        JNR_GL_SALES_13 MASTER \n    RIGHT JOIN\n        SQ_Shortcut_to_MA_CASH_DISCOUNT_CTRL_2 DETAIL \n            ON MASTER.FISCAL_MO1 = FISCAL_MO \n            AND VENDOR_ID1 = DETAIL.SOURCE_VENDOR_ID\"\"\")","df_14.createOrReplaceTempView(\"JNR_MA_CASH_DISCOUNT_14\")"]},"id":"JNR_MA_CASH_DISCOUNT","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Expression","label":"EXP_ACT_CASH_DISCOUNT_PCT","queries":["df_15=spark.sql(\"\"\"\n    SELECT\n        FISCAL_MO AS FISCAL_MO,\n        SOURCE_VENDOR_ID AS SOURCE_VENDOR_ID,\n        ACT_CASH_DISCOUNT_GL_AMT AS ACT_CASH_DISCOUNT_GL_AMT,\n        ACT_NET_SALES_COST AS ACT_NET_SALES_COST,\n        v_THIS_ACT_CASH_DISCOUNT_PCT AS THIS_ACT_CASH_DISCOUNT_PCT,\n        current_timestamp AS UPDATE_TSTMP,\n        IFF(ISNULL(LOAD_TSTMP),\n        current_timestamp,\n        LOAD_TSTMP) AS LOAD_TSTMP,\n        IFF(ISNULL(FISCAL_MO),\n        'I',\n        IFF(v_THIS_ACT_CASH_DISCOUNT_PCT <> v_ACT_CASH_DISCOUNT_PCT,\n        'U',\n        'X')) AS INS_UPD_FLAG,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        JNR_MA_CASH_DISCOUNT_14\"\"\")","df_15.createOrReplaceTempView(\"EXP_ACT_CASH_DISCOUNT_PCT_15\")"]},"id":"EXP_ACT_CASH_DISCOUNT_PCT","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Filter","label":"FIL_INS_UPD_FLAG","queries":["df_16=spark.sql(\"\"\"\n    SELECT\n        FISCAL_MO AS FISCAL_MO,\n        SOURCE_VENDOR_ID AS SOURCE_VENDOR_ID,\n        ACT_NET_SALES_COST AS ACT_NET_SALES_COST,\n        ACT_CASH_DISCOUNT_GL_AMT AS ACT_CASH_DISCOUNT_GL_AMT,\n        THIS_ACT_CASH_DISCOUNT_PCT AS THIS_ACT_CASH_DISCOUNT_PCT,\n        UPDATE_TSTMP AS UPDATE_TSTMP,\n        LOAD_TSTMP AS LOAD_TSTMP,\n        INS_UPD_FLAG AS INS_UPD_FLAG,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        EXP_ACT_CASH_DISCOUNT_PCT_15 \n    WHERE\n        INS_UPD_FLAG <> 'X'\"\"\")","df_16.createOrReplaceTempView(\"FIL_INS_UPD_FLAG_16\")"]},"id":"FIL_INS_UPD_FLAG","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Update Strategy","label":"UPD_STRATEGY","queries":["df_17=spark.sql(\"\"\"\n    SELECT\n        FISCAL_MO AS FISCAL_MO,\n        SOURCE_VENDOR_ID AS SOURCE_VENDOR_ID,\n        ACT_NET_SALES_COST AS ACT_NET_SALES_COST,\n        ACT_CASH_DISCOUNT_GL_AMT AS ACT_CASH_DISCOUNT_GL_AMT,\n        THIS_ACT_CASH_DISCOUNT_PCT AS THIS_ACT_CASH_DISCOUNT_PCT,\n        UPDATE_TSTMP AS UPDATE_TSTMP,\n        LOAD_TSTMP AS LOAD_TSTMP,\n        INS_UPD_FLAG AS INS_UPD_FLAG,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        FIL_INS_UPD_FLAG_16\"\"\")","df_17.createOrReplaceTempView(\"UPD_STRATEGY_17\")"]},"id":"UPD_STRATEGY","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Target Definition","label":"MA_CASH_DISCOUNT_CTRL","queries":["spark.sql(\"\"\"INSERT INTO MA_CASH_DISCOUNT_CTRL SELECT FISCAL_MO AS FISCAL_MO,\nSOURCE_VENDOR_ID AS SOURCE_VENDOR_ID,\nEST_CASH_DISCOUNT_PCT AS EST_CASH_DISCOUNT_PCT,\nACT_NET_SALES_COST AS ACT_NET_SALES_COST,\nACT_CASH_DISCOUNT_GL_AMT AS ACT_CASH_DISCOUNT_GL_AMT,\nACT_CASH_DISCOUNT_PCT AS ACT_CASH_DISCOUNT_PCT,\nOVRD_CASH_DISCOUNT_PCT1 AS OVRD_CASH_DISCOUNT_PCT,\nUPDATE_TSTMP AS UPDATE_TSTMP,\nLOAD_TSTMP AS LOAD_TSTMP FROM UPD_STRATEGY_17\"\"\")"]},"id":"MA_CASH_DISCOUNT_CTRL","position":{"x":0,"y":0},"type":"normalNode"}]}