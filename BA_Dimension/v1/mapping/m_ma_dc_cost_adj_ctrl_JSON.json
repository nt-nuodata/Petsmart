{"Edges":[{"transformationType":"Source Definition","id":"e-0","source":"","target":"MA_EVENT_TYPE_VAR_CTRL"},{"transformationType":"Source Definition","id":"e-1","source":"","target":"MA_DC_COST_ADJ_CTRL"},{"transformationType":"Source Definition","id":"e-2","source":"","target":"MA_GL_ACCT_CTRL"},{"transformationType":"Source Definition","id":"e-3","source":"","target":"MA_FISCAL_MO_CTRL"},{"transformationType":"Source Definition","id":"e-4","source":"","target":"MA_EVENT_TYPE"},{"transformationType":"Source Definition","id":"e-5","source":"","target":"MA_EVENT"},{"transformationType":"Source Definition","id":"e-6","source":"","target":"MA_SALES_TRANS_UPC"},{"transformationType":"Source Definition","id":"e-7","source":"","target":"GL_ACCOUNT_PROFILE"},{"transformationType":"Source Definition","id":"e-8","source":"","target":"GL_PROFIT_CENTER_PROFILE"},{"transformationType":"Source Definition","id":"e-9","source":"","target":"DAYS"},{"transformationType":"Source Definition","id":"e-10","source":"","target":"SITE_PROFILE_RPT"},{"transformationType":"Source Qualifier","id":"e-11","source":"SITE_PROFILE_RPT","target":"SQ_MA_DC_COST_ADJ_CTRL"},{"transformationType":"Source Qualifier","id":"e-12","source":"MA_EVENT","target":"SQ_MA_DC_COST_ADJ_CTRL"},{"transformationType":"Source Qualifier","id":"e-13","source":"MA_DC_COST_ADJ_CTRL","target":"SQ_MA_DC_COST_ADJ_CTRL"},{"transformationType":"Update Strategy","id":"e-14","source":"SQ_MA_DC_COST_ADJ_CTRL","target":"UPD_Strategy"},{"transformationType":"Source Definition","id":"e-15","source":"","target":"GL_ACTUAL_DETAIL"},{"transformationType":"Source Definition","id":"e-16","source":"","target":"DM_GL_COA"},{"transformationType":"Target Definition","id":"e-17","source":"UPD_Strategy","target":"MA_DC_COST_ADJ_CTRL"}],"Nodes":[{"data":{"transformationType":"Source Definition","label":"MA_EVENT_TYPE_VAR_CTRL","queries":["df_0=spark.sql(\"\"\"\n    SELECT\n        MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\n        MA_EVENT_TYPE_VAR_TYPE_CD AS MA_EVENT_TYPE_VAR_TYPE_CD,\n        MA_EVENT_TYPE_VAR_VALUE AS MA_EVENT_TYPE_VAR_VALUE,\n        START_EFF_DT AS START_EFF_DT,\n        END_EFF_DT AS END_EFF_DT,\n        UPDATE_TSTMP AS UPDATE_TSTMP,\n        LOAD_TSTMP AS LOAD_TSTMP,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        MA_EVENT_TYPE_VAR_CTRL\"\"\")","df_0.createOrReplaceTempView(\"MA_EVENT_TYPE_VAR_CTRL_0\")"]},"id":"MA_EVENT_TYPE_VAR_CTRL","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"MA_DC_COST_ADJ_CTRL","queries":["df_1=spark.sql(\"\"\"\n    SELECT\n        FISCAL_MO AS FISCAL_MO,\n        MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\n        EST_DC_COST_USD AS EST_DC_COST_USD,\n        ACT_DC_COST_USD AS ACT_DC_COST_USD,\n        DC_COST_ADJ_PCT AS DC_COST_ADJ_PCT,\n        UPDATE_TSTMP AS UPDATE_TSTMP,\n        LOAD_TSTMP AS LOAD_TSTMP,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        MA_DC_COST_ADJ_CTRL\"\"\")","df_1.createOrReplaceTempView(\"MA_DC_COST_ADJ_CTRL_1\")"]},"id":"MA_DC_COST_ADJ_CTRL","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"MA_GL_ACCT_CTRL","queries":["df_2=spark.sql(\"\"\"\n    SELECT\n        MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\n        GL_ACCT_NBR AS GL_ACCT_NBR,\n        START_EFF_DT AS START_EFF_DT,\n        END_EFF_DT AS END_EFF_DT,\n        DC_COST_OVERRIDE_IND AS DC_COST_OVERRIDE_IND,\n        UPDATE_TSTMP AS UPDATE_TSTMP,\n        LOAD_TSTMP AS LOAD_TSTMP,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        MA_GL_ACCT_CTRL\"\"\")","df_2.createOrReplaceTempView(\"MA_GL_ACCT_CTRL_2\")"]},"id":"MA_GL_ACCT_CTRL","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"MA_FISCAL_MO_CTRL","queries":["df_3=spark.sql(\"\"\"\n    SELECT\n        FISCAL_MO AS FISCAL_MO,\n        RESTATE_DT AS RESTATE_DT,\n        UPDATE_TSTMP AS UPDATE_TSTMP,\n        LOAD_TSTMP AS LOAD_TSTMP,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        MA_FISCAL_MO_CTRL\"\"\")","df_3.createOrReplaceTempView(\"MA_FISCAL_MO_CTRL_3\")"]},"id":"MA_FISCAL_MO_CTRL","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"MA_EVENT_TYPE","queries":["df_4=spark.sql(\"\"\"\n    SELECT\n        MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\n        MA_EVENT_TYPE_DESC AS MA_EVENT_TYPE_DESC,\n        REF_MA_EVENT_TYPE_ID AS REF_MA_EVENT_TYPE_ID,\n        EM_TPR_TYPE AS EM_TPR_TYPE,\n        PETPERK_ONLY_FLAG AS PETPERK_ONLY_FLAG,\n        UPDATE_DT AS UPDATE_DT,\n        LOAD_DT AS LOAD_DT,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        MA_EVENT_TYPE\"\"\")","df_4.createOrReplaceTempView(\"MA_EVENT_TYPE_4\")"]},"id":"MA_EVENT_TYPE","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"MA_EVENT","queries":["df_5=spark.sql(\"\"\"\n    SELECT\n        MA_EVENT_ID AS MA_EVENT_ID,\n        OFFER_ID AS OFFER_ID,\n        SAP_DEPT_ID AS SAP_DEPT_ID,\n        PRODUCT_ID AS PRODUCT_ID,\n        COUNTRY_CD AS COUNTRY_CD,\n        START_DT AS START_DT,\n        END_DT AS END_DT,\n        MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\n        MA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\n        LOCATION_ID AS LOCATION_ID,\n        MOVEMENT_ID AS MOVEMENT_ID,\n        VALUATION_CLASS_CD AS VALUATION_CLASS_CD,\n        GL_ACCT_NBR AS GL_ACCT_NBR,\n        LOCATION_TYPE_ID AS LOCATION_TYPE_ID,\n        ROYALTY_BRAND_ID AS ROYALTY_BRAND_ID,\n        BRAND_CD AS BRAND_CD,\n        MA_FORMULA_CD AS MA_FORMULA_CD,\n        FISCAL_MO AS FISCAL_MO,\n        SAP_CATEGORY_ID AS SAP_CATEGORY_ID,\n        FROM_LOCATION_ID AS FROM_LOCATION_ID,\n        SOURCE_VENDOR_ID AS SOURCE_VENDOR_ID,\n        COMPANY_ID AS COMPANY_ID,\n        MA_EVENT_DESC AS MA_EVENT_DESC,\n        EM_VENDOR_FUNDING_ID AS EM_VENDOR_FUNDING_ID,\n        EM_COMMENT AS EM_COMMENT,\n        EM_BILL_ALT_VENDOR_FLAG AS EM_BILL_ALT_VENDOR_FLAG,\n        EM_ALT_VENDOR_ID AS EM_ALT_VENDOR_ID,\n        EM_ALT_VENDOR_NAME AS EM_ALT_VENDOR_NAME,\n        EM_ALT_VENDOR_COUNTRY_CD AS EM_ALT_VENDOR_COUNTRY_CD,\n        EM_VENDOR_ID AS EM_VENDOR_ID,\n        EM_VENDOR_NAME AS EM_VENDOR_NAME,\n        EM_VENDOR_COUNTRY_CD AS EM_VENDOR_COUNTRY_CD,\n        VENDOR_NAME_TXT AS VENDOR_NAME_TXT,\n        MA_PCT_IND AS MA_PCT_IND,\n        MA_AMT AS MA_AMT,\n        MA_MAX_AMT AS MA_MAX_AMT,\n        UPDATE_DT AS UPDATE_DT,\n        LOAD_DT AS LOAD_DT,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        MA_EVENT\"\"\")","df_5.createOrReplaceTempView(\"MA_EVENT_5\")"]},"id":"MA_EVENT","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"MA_SALES_TRANS_UPC","queries":["df_6=spark.sql(\"\"\"\n    SELECT\n        DAY_DT AS DAY_DT,\n        LOCATION_ID AS LOCATION_ID,\n        SALES_INSTANCE_ID AS SALES_INSTANCE_ID,\n        UPC_ID AS UPC_ID,\n        TP_INVOICE_NBR AS TP_INVOICE_NBR,\n        PARENT_UPC_ID AS PARENT_UPC_ID,\n        COMBO_TYPE_CD AS COMBO_TYPE_CD,\n        POS_TXN_SEQ_NBR AS POS_TXN_SEQ_NBR,\n        MA_EVENT_ID AS MA_EVENT_ID,\n        PRODUCT_ID AS PRODUCT_ID,\n        SALES_CUST_CAPTURE_CD AS SALES_CUST_CAPTURE_CD,\n        MA_SALES_AMT AS MA_SALES_AMT,\n        MA_SALES_QTY AS MA_SALES_QTY,\n        EXCH_RATE_PCT AS EXCH_RATE_PCT,\n        UPDATE_DT AS UPDATE_DT,\n        LOAD_DT AS LOAD_DT,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        MA_SALES_TRANS_UPC\"\"\")","df_6.createOrReplaceTempView(\"MA_SALES_TRANS_UPC_6\")"]},"id":"MA_SALES_TRANS_UPC","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"GL_ACCOUNT_PROFILE","queries":["df_7=spark.sql(\"\"\"\n    SELECT\n        GL_ACCOUNT_GID AS GL_ACCOUNT_GID,\n        GL_CHART_OF_ACCOUNTS_CD AS GL_CHART_OF_ACCOUNTS_CD,\n        GL_ACCOUNT_NBR AS GL_ACCOUNT_NBR,\n        GL_ACCOUNT_DESC AS GL_ACCOUNT_DESC,\n        GL_ACCOUNT_GROUP_CD AS GL_ACCOUNT_GROUP_CD,\n        GL_ACCOUNT_GROUP_DESC AS GL_ACCOUNT_GROUP_DESC,\n        GL_BAL_SHEET_IND AS GL_BAL_SHEET_IND,\n        GL_PL_IND AS GL_PL_IND,\n        UPDATE_DT AS UPDATE_DT,\n        LOAD_DT AS LOAD_DT,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        GL_ACCOUNT_PROFILE\"\"\")","df_7.createOrReplaceTempView(\"GL_ACCOUNT_PROFILE_7\")"]},"id":"GL_ACCOUNT_PROFILE","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"GL_PROFIT_CENTER_PROFILE","queries":["df_8=spark.sql(\"\"\"\n    SELECT\n        GL_PROFIT_CENTER_GID AS GL_PROFIT_CENTER_GID,\n        GL_COMPANY_CD AS GL_COMPANY_CD,\n        GL_PROFIT_CENTER_CD AS GL_PROFIT_CENTER_CD,\n        GL_PROFIT_CENTER_DESC AS GL_PROFIT_CENTER_DESC,\n        GL_HIERARCHY_AREA AS GL_HIERARCHY_AREA,\n        VALID_FROM_DT AS VALID_FROM_DT,\n        VALID_TO_DT AS VALID_TO_DT,\n        CURRENCY_ID AS CURRENCY_ID,\n        LOCATION_ID AS LOCATION_ID,\n        UPDATE_DT AS UPDATE_DT,\n        LOAD_DT AS LOAD_DT,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        GL_PROFIT_CENTER_PROFILE\"\"\")","df_8.createOrReplaceTempView(\"GL_PROFIT_CENTER_PROFILE_8\")"]},"id":"GL_PROFIT_CENTER_PROFILE","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"DAYS","queries":["df_9=spark.sql(\"\"\"\n    SELECT\n        DAY_DT AS DAY_DT,\n        BUSINESS_DAY_FLAG AS BUSINESS_DAY_FLAG,\n        HOLIDAY_FLAG AS HOLIDAY_FLAG,\n        DAY_OF_WK_NAME AS DAY_OF_WK_NAME,\n        DAY_OF_WK_NAME_ABBR AS DAY_OF_WK_NAME_ABBR,\n        DAY_OF_WK_NBR AS DAY_OF_WK_NBR,\n        CAL_DAY_OF_MO_NBR AS CAL_DAY_OF_MO_NBR,\n        CAL_DAY_OF_YR_NBR AS CAL_DAY_OF_YR_NBR,\n        CAL_WK AS CAL_WK,\n        CAL_WK_NBR AS CAL_WK_NBR,\n        CAL_MO AS CAL_MO,\n        CAL_MO_NBR AS CAL_MO_NBR,\n        CAL_MO_NAME AS CAL_MO_NAME,\n        CAL_MO_NAME_ABBR AS CAL_MO_NAME_ABBR,\n        CAL_QTR AS CAL_QTR,\n        CAL_QTR_NBR AS CAL_QTR_NBR,\n        CAL_HALF AS CAL_HALF,\n        CAL_YR AS CAL_YR,\n        FISCAL_DAY_OF_MO_NBR AS FISCAL_DAY_OF_MO_NBR,\n        FISCAL_DAY_OF_YR_NBR AS FISCAL_DAY_OF_YR_NBR,\n        FISCAL_WK AS FISCAL_WK,\n        FISCAL_WK_NBR AS FISCAL_WK_NBR,\n        FISCAL_MO AS FISCAL_MO,\n        FISCAL_MO_NBR AS FISCAL_MO_NBR,\n        FISCAL_MO_NAME AS FISCAL_MO_NAME,\n        FISCAL_MO_NAME_ABBR AS FISCAL_MO_NAME_ABBR,\n        FISCAL_QTR AS FISCAL_QTR,\n        FISCAL_QTR_NBR AS FISCAL_QTR_NBR,\n        FISCAL_HALF AS FISCAL_HALF,\n        FISCAL_YR AS FISCAL_YR,\n        LYR_WEEK_DT AS LYR_WEEK_DT,\n        LWK_WEEK_DT AS LWK_WEEK_DT,\n        WEEK_DT AS WEEK_DT,\n        EST_TIME_CONV_AMT AS EST_TIME_CONV_AMT,\n        EST_TIME_CONV_HRS AS EST_TIME_CONV_HRS,\n        ES0_TIME_CONV_AMT AS ES0_TIME_CONV_AMT,\n        ES0_TIME_CONV_HRS AS ES0_TIME_CONV_HRS,\n        CST_TIME_CONV_AMT AS CST_TIME_CONV_AMT,\n        CST_TIME_CONV_HRS AS CST_TIME_CONV_HRS,\n        CS0_TIME_CONV_AMT AS CS0_TIME_CONV_AMT,\n        CS0_TIME_CONV_HRS AS CS0_TIME_CONV_HRS,\n        MST_TIME_CONV_AMT AS MST_TIME_CONV_AMT,\n        MST_TIME_CONV_HRS AS MST_TIME_CONV_HRS,\n        MS0_TIME_CONV_AMT AS MS0_TIME_CONV_AMT,\n        MS0_TIME_CONV_HRS AS MS0_TIME_CONV_HRS,\n        PST_TIME_CONV_AMT AS PST_TIME_CONV_AMT,\n        PST_TIME_CONV_HRS AS PST_TIME_CONV_HRS,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        DAYS\"\"\")","df_9.createOrReplaceTempView(\"DAYS_9\")"]},"id":"DAYS","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"SITE_PROFILE_RPT","queries":["df_10=spark.sql(\"\"\"\n    SELECT\n        LOCATION_ID AS LOCATION_ID,\n        LOCATION_TYPE_ID AS LOCATION_TYPE_ID,\n        LOCATION_TYPE_DESC AS LOCATION_TYPE_DESC,\n        STORE_NBR AS STORE_NBR,\n        STORE_NAME AS STORE_NAME,\n        STORE_TYPE_ID AS STORE_TYPE_ID,\n        STORE_TYPE_DESC AS STORE_TYPE_DESC,\n        PARENT_LOCATION_ID AS PARENT_LOCATION_ID,\n        LOCATION_NBR AS LOCATION_NBR,\n        COMPANY_ID AS COMPANY_ID,\n        COMPANY_DESC AS COMPANY_DESC,\n        SUPER_REGION_ID AS SUPER_REGION_ID,\n        SUPER_REGION_DESC AS SUPER_REGION_DESC,\n        REGION_ID AS REGION_ID,\n        REGION_DESC AS REGION_DESC,\n        DISTRICT_ID AS DISTRICT_ID,\n        DISTRICT_DESC AS DISTRICT_DESC,\n        SITE_ADDRESS AS SITE_ADDRESS,\n        SITE_CITY AS SITE_CITY,\n        SITE_COUNTY AS SITE_COUNTY,\n        STATE_CD AS STATE_CD,\n        STATE_NAME AS STATE_NAME,\n        POSTAL_CD AS POSTAL_CD,\n        COUNTRY_CD AS COUNTRY_CD,\n        COUNTRY_NAME AS COUNTRY_NAME,\n        GEO_LATITUDE_NBR AS GEO_LATITUDE_NBR,\n        GEO_LONGITUDE_NBR AS GEO_LONGITUDE_NBR,\n        PETSMART_DMA_CD AS PETSMART_DMA_CD,\n        PETSMART_DMA_DESC AS PETSMART_DMA_DESC,\n        SITE_MAIN_TELE_NO AS SITE_MAIN_TELE_NO,\n        SITE_GROOM_TELE_NO AS SITE_GROOM_TELE_NO,\n        SITE_FAX_NO AS SITE_FAX_NO,\n        SITE_EMAIL_ADDRESS AS SITE_EMAIL_ADDRESS,\n        STORE_OPEN_CLOSE_FLAG AS STORE_OPEN_CLOSE_FLAG,\n        SFT_OPEN_DT AS SFT_OPEN_DT,\n        OPEN_DT AS OPEN_DT,\n        GR_OPEN_DT AS GR_OPEN_DT,\n        CLOSE_DT AS CLOSE_DT,\n        SITE_SALES_FLAG AS SITE_SALES_FLAG,\n        SALES_CURR_FLAG AS SALES_CURR_FLAG,\n        SITE_OPEN_YRS_AMT AS SITE_OPEN_YRS_AMT,\n        FIRST_SALE_DT AS FIRST_SALE_DT,\n        FIRST_MEASURED_SALE_DT AS FIRST_MEASURED_SALE_DT,\n        LAST_SALE_DT AS LAST_SALE_DT,\n        COMP_CURR_FLAG AS COMP_CURR_FLAG,\n        COMP_EFF_DT AS COMP_EFF_DT,\n        COMP_END_DT AS COMP_END_DT,\n        TP_LOC_FLAG AS TP_LOC_FLAG,\n        TP_ACTIVE_CNT AS TP_ACTIVE_CNT,\n        TP_START_DT AS TP_START_DT,\n        HOTEL_FLAG AS HOTEL_FLAG,\n        HOTEL_OPEN_DT AS HOTEL_OPEN_DT,\n        DAYCAMP_FLAG AS DAYCAMP_FLAG,\n        VET_FLAG AS VET_FLAG,\n        TIME_ZONE_ID AS TIME_ZONE_ID,\n        TIME_ZONE AS TIME_ZONE,\n        SQ_FEET_RETAIL AS SQ_FEET_RETAIL,\n        SQ_FEET_TOTAL AS SQ_FEET_TOTAL,\n        TRADE_AREA AS TRADE_AREA,\n        DELV_SERVICE_CLASS_ID AS DELV_SERVICE_CLASS_ID,\n        PICK_SERVICE_CLASS_ID AS PICK_SERVICE_CLASS_ID,\n        REPL_DC_NBR AS REPL_DC_NBR,\n        REPL_FISH_DC_NBR AS REPL_FISH_DC_NBR,\n        REPL_FWD_DC_NBR AS REPL_FWD_DC_NBR,\n        PROMO_LABEL_CD AS PROMO_LABEL_CD,\n        PRICE_ZONE_ID AS PRICE_ZONE_ID,\n        PRICE_ZONE_DESC AS PRICE_ZONE_DESC,\n        PRICE_AD_ZONE_ID AS PRICE_AD_ZONE_ID,\n        PRICE_AD_ZONE_DESC AS PRICE_AD_ZONE_DESC,\n        EQUINE_MERCH_ID AS EQUINE_MERCH_ID,\n        EQUINE_MERCH_DESC AS EQUINE_MERCH_DESC,\n        EQUINE_SITE_ID AS EQUINE_SITE_ID,\n        EQUINE_SITE_DESC AS EQUINE_SITE_DESC,\n        EQUINE_SITE_OPEN_DT AS EQUINE_SITE_OPEN_DT,\n        LOYALTY_PGM_TYPE_ID AS LOYALTY_PGM_TYPE_ID,\n        LOYALTY_PGM_TYPE_DESC AS LOYALTY_PGM_TYPE_DESC,\n        LOYALTY_PGM_STATUS_ID AS LOYALTY_PGM_STATUS_ID,\n        LOYALTY_PGM_STATUS_DESC AS LOYALTY_PGM_STATUS_DESC,\n        LOYALTY_PGM_START_DT AS LOYALTY_PGM_START_DT,\n        LOYALTY_PGM_CHANGE_DT AS LOYALTY_PGM_CHANGE_DT,\n        BP_COMPANY_NBR AS BP_COMPANY_NBR,\n        BP_GL_ACCT AS BP_GL_ACCT,\n        SITE_LOGIN_ID AS SITE_LOGIN_ID,\n        SITE_MANAGER_ID AS SITE_MANAGER_ID,\n        SITE_MANAGER_NAME AS SITE_MANAGER_NAME,\n        MGR_ID AS MGR_ID,\n        MGR_DESC AS MGR_DESC,\n        DVL_ID AS DVL_ID,\n        DVL_DESC AS DVL_DESC,\n        PURCH_GROUP_ID AS PURCH_GROUP_ID,\n        PURCH_GROUP_NAME AS PURCH_GROUP_NAME,\n        TOTAL_SALES_RANKING_CD AS TOTAL_SALES_RANKING_CD,\n        MERCH_SALES_RANKING_CD AS MERCH_SALES_RANKING_CD,\n        SERVICES_SALES_RANKING_CD AS SERVICES_SALES_RANKING_CD,\n        SALON_SALES_RANKING_CD AS SALON_SALES_RANKING_CD,\n        TRAINING_SALES_RANKING_CD AS TRAINING_SALES_RANKING_CD,\n        HOTEL_DDC_SALES_RANKING_CD AS HOTEL_DDC_SALES_RANKING_CD,\n        CONSUMABLES_SALES_RANKING_CD AS CONSUMABLES_SALES_RANKING_CD,\n        HARDGOODS_SALES_RANKING_CD AS HARDGOODS_SALES_RANKING_CD,\n        SPECIALTY_SALES_RANKING_CD AS SPECIALTY_SALES_RANKING_CD,\n        DIST_MGR_NAME AS DIST_MGR_NAME,\n        DM_EMAIL_ADDRESS AS DM_EMAIL_ADDRESS,\n        DC_AREA_DIRECTOR_NAME AS DC_AREA_DIRECTOR_NAME,\n        DC_AREA_DIRECTOR_EMAIL AS DC_AREA_DIRECTOR_EMAIL,\n        DIST_SVC_MGR_NAME AS DIST_SVC_MGR_NAME,\n        DSM_EMAIL_ADDRESS AS DSM_EMAIL_ADDRESS,\n        REGION_VP_NAME AS REGION_VP_NAME,\n        RVP_EMAIL_ADDRESS AS RVP_EMAIL_ADDRESS,\n        REGION_TRAINER_NAME AS REGION_TRAINER_NAME,\n        ASSET_PROTECT_NAME AS ASSET_PROTECT_NAME,\n        ASSET_PROTECT_EMAIL AS ASSET_PROTECT_EMAIL,\n        LP_SAFETY_DIRECTOR_NAME AS LP_SAFETY_DIRECTOR_NAME,\n        LP_SAFETY_DIRECTOR_EMAIL AS LP_SAFETY_DIRECTOR_EMAIL,\n        SR_LP_SAFETY_MGR_NAME AS SR_LP_SAFETY_MGR_NAME,\n        SR_LP_SAFETY_MGR_EMAIL AS SR_LP_SAFETY_MGR_EMAIL,\n        REGIONAL_LP_SAFETY_MGR_NAME AS REGIONAL_LP_SAFETY_MGR_NAME,\n        REGIONAL_LP_SAFETY_MGR_EMAIL AS REGIONAL_LP_SAFETY_MGR_EMAIL,\n        RETAIL_MANAGER_SAFETY_NAME AS RETAIL_MANAGER_SAFETY_NAME,\n        RETAIL_MANAGER_SAFETY_EMAIL AS RETAIL_MANAGER_SAFETY_EMAIL,\n        DC_GENERAL_MANAGER_NAME AS DC_GENERAL_MANAGER_NAME,\n        DC_GENERAL_MANAGER_EMAIL AS DC_GENERAL_MANAGER_EMAIL,\n        ASST_DC_GENERAL_MANAGER_NAME1 AS ASST_DC_GENERAL_MANAGER_NAME1,\n        ASST_DC_GENERAL_MANAGER_EMAIL1 AS ASST_DC_GENERAL_MANAGER_EMAIL1,\n        ASST_DC_GENERAL_MANAGER_NAME2 AS ASST_DC_GENERAL_MANAGER_NAME2,\n        ASST_DC_GENERAL_MANAGER_EMAIL2 AS ASST_DC_GENERAL_MANAGER_EMAIL2,\n        HR_MANAGER_NAME AS HR_MANAGER_NAME,\n        HR_MANAGER_EMAIL AS HR_MANAGER_EMAIL,\n        HR_SUPERVISOR_NAME1 AS HR_SUPERVISOR_NAME1,\n        HR_SUPERVISOR_EMAIL1 AS HR_SUPERVISOR_EMAIL1,\n        HR_SUPERVISOR_NAME2 AS HR_SUPERVISOR_NAME2,\n        HR_SUPERVISOR_EMAIL2 AS HR_SUPERVISOR_EMAIL2,\n        LEARN_SOLUTION_MGR_NAME AS LEARN_SOLUTION_MGR_NAME,\n        LEARN_SOLUTION_MGR_EMAIL AS LEARN_SOLUTION_MGR_EMAIL,\n        ADD_DT AS ADD_DT,\n        DELETE_DT AS DELETE_DT,\n        UPDATE_DT AS UPDATE_DT,\n        LOAD_DT AS LOAD_DT,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        SITE_PROFILE_RPT\"\"\")","df_10.createOrReplaceTempView(\"SITE_PROFILE_RPT_10\")"]},"id":"SITE_PROFILE_RPT","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Qualifier","label":"SQ_MA_DC_COST_ADJ_CTRL","queries":["df_11=spark.sql(\"\"\"\n    SELECT\n        A.FISCAL_MO,\n        A.MA_EVENT_TYPE_ID,\n        A.EST_DC_COST_USD,\n        A.ACT_DC_COST_USD,\n        A.DC_COST_ADJ_PCT,\n        CURRENT_TIMESTAMP UPDATE_TSTMP,\n        NVL(A.LOAD_TSTMP,\n        CURRENT_TIMESTAMP) LOAD_TSTMP,\n        CASE \n            WHEN MDCAC.FISCAL_MO IS NULL THEN 'I' \n            WHEN A.DC_COST_ADJ_PCT <> MDCAC.DC_COST_ADJ_PCT THEN 'U' \n            ELSE 'X' \n        END INS_UPD_FLAG \n    FROM\n        (SELECT\n            A.FISCAL_MO,\n            B.MA_EVENT_TYPE_ID,\n            A.EST_DC_COST_USD,\n            B.ACT_DC_COST_USD,\n            ((B.ACT_DC_COST_USD - A.EST_DC_COST_USD) / A.EST_DC_COST_USD)::NUMERIC (12,\n            6) AS DC_COST_ADJ_PCT,\n            CURRENT_TIMESTAMP UPDATE_TSTMP,\n            CURRENT_TIMESTAMP LOAD_TSTMP \n        FROM\n            (SELECT\n                ME.FISCAL_MO,\n                ME.MA_EVENT_TYPE_ID,\n                MET.REF_MA_EVENT_TYPE_ID,\n                -SUM(MSTU.MA_SALES_AMT * EXCH_RATE_PCT)::NUMERIC (12,\n                2) EST_DC_COST_USD \n            FROM\n                MA_SALES_TRANS_UPC MSTU \n            JOIN\n                MA_EVENT ME \n                    ON MSTU.MA_EVENT_ID = ME.MA_EVENT_ID \n            JOIN\n                MA_FISCAL_MO_CTRL MFMC \n                    ON ME.FISCAL_MO = MFMC.FISCAL_MO \n                    AND MFMC.RESTATE_DT = CURRENT_DATE \n            JOIN\n                MA_EVENT_TYPE MET \n                    ON ME.MA_EVENT_TYPE_ID = MET.MA_EVENT_TYPE_ID \n            WHERE\n                ME.MA_EVENT_SOURCE_ID = 10 \n            GROUP BY\n                ME.FISCAL_MO,\n                ME.MA_EVENT_TYPE_ID,\n                MET.REF_MA_EVENT_TYPE_ID) A \n        JOIN\n            (\n                SELECT\n                    NVL(C.MA_EVENT_TYPE_ID,\n                    D.MA_EVENT_TYPE_ID) MA_EVENT_TYPE_ID,\n                    NVL(C.FISCAL_MO,\n                    D.FISCAL_MO) FISCAL_MO,\n                    NVL(C.ACT_DC_COST_USD,\n                    0) + NVL(D.ACT_DC_COST_USD,\n                    0) ACT_DC_COST_USD \n                FROM\n                    (SELECT\n                        MET.MA_EVENT_TYPE_ID,\n                        GAD.FISCAL_MO,\n                        SUM(GAD.GL_GRP_AMT)::NUMERIC (12,\n                        2) ACT_DC_COST_USD \n                    FROM\n                        GL_ACTUAL_DETAIL GAD \n                    JOIN\n                        GL_ACCOUNT_PROFILE GAP \n                            ON GAD.GL_ACCOUNT_GID = GAP.GL_ACCOUNT_GID \n                    LEFT JOIN\n                        DM_GL_COA DGC \n                            ON GAP.GL_ACCOUNT_NBR = DGC.GL_ACCT_NBR \n                    JOIN\n                        SITE_PROFILE_RPT SITE \n                            ON GAD.LOCATION_ID = SITE.LOCATION_ID \n                    JOIN\n                        GL_PROFIT_CENTER_PROFILE GPCP \n                            ON GAD.GL_PROFIT_CENTER_GID = GPCP.GL_PROFIT_CENTER_GID \n                    JOIN\n                        MA_FISCAL_MO_CTRL MFMC \n                            ON GAD.FISCAL_MO = MFMC.FISCAL_MO \n                            AND MFMC.RESTATE_DT = CURRENT_DATE CROSS \n                    JOIN\n                        (\n                            SELECT\n                                DISTINCT MA_EVENT_TYPE_ID \n                            FROM\n                                MA_EVENT_TYPE_VAR_CTRL \n                            WHERE\n                                MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_ADJ_MA_EVENT_TYPE_ID'\n                        ) MET \n                    LEFT JOIN\n                        (\n                            SELECT\n                                MA_EVENT_TYPE_ID,\n                                MA_EVENT_TYPE_VAR_VALUE,\n                                START_EFF_DT,\n                                END_EFF_DT \n                            FROM\n                                MA_EVENT_TYPE_VAR_CTRL \n                            WHERE\n                                MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_STORE_LNBR_INCL' \n                                AND MA_EVENT_TYPE_ID IN (\n                                    SELECT\n                                        DISTINCT MA_EVENT_TYPE_ID \n                                    FROM\n                                        MA_EVENT_TYPE_VAR_CTRL \n                                    WHERE\n                                        MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_ADJ_MA_EVENT_TYPE_ID'\n                                )\n                            ) DCSLI \n                                ON MET.MA_EVENT_TYPE_ID = DCSLI.MA_EVENT_TYPE_ID \n                                AND DGC.STORE_LNBR::VARCHAR (25) = DCSLI.MA_EVENT_TYPE_VAR_VALUE \n                                AND GAD.GL_POSTING_DT BETWEEN DCSLI.START_EFF_DT AND DCSLI.END_EFF_DT \n                        LEFT JOIN\n                            (\n                                SELECT\n                                    MA_EVENT_TYPE_ID,\n                                    MA_EVENT_TYPE_VAR_VALUE,\n                                    START_EFF_DT,\n                                    END_EFF_DT \n                                FROM\n                                    MA_EVENT_TYPE_VAR_CTRL \n                                WHERE\n                                    MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_GL_ACCT_NBR_EXCL' \n                                    AND MA_EVENT_TYPE_ID IN (\n                                        SELECT\n                                            DISTINCT MA_EVENT_TYPE_ID \n                                        FROM\n                                            MA_EVENT_TYPE_VAR_CTRL \n                                        WHERE\n                                            MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_ADJ_MA_EVENT_TYPE_ID'\n                                    )\n                                ) DCGANE \n                                    ON MET.MA_EVENT_TYPE_ID = DCGANE.MA_EVENT_TYPE_ID \n                                    AND GAP.GL_ACCOUNT_NBR::VARCHAR (25) = DCGANE.MA_EVENT_TYPE_VAR_VALUE \n                                    AND GAD.GL_POSTING_DT BETWEEN DCGANE.START_EFF_DT AND DCGANE.END_EFF_DT \n                            LEFT JOIN\n                                (\n                                    SELECT\n                                        MA_EVENT_TYPE_ID,\n                                        MA_EVENT_TYPE_VAR_VALUE,\n                                        START_EFF_DT,\n                                        END_EFF_DT \n                                    FROM\n                                        MA_EVENT_TYPE_VAR_CTRL \n                                    WHERE\n                                        MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_GL_ACCT_NBR_INCL' \n                                        AND MA_EVENT_TYPE_ID IN (\n                                            SELECT\n                                                DISTINCT MA_EVENT_TYPE_ID \n                                            FROM\n                                                MA_EVENT_TYPE_VAR_CTRL \n                                            WHERE\n                                                MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_ADJ_MA_EVENT_TYPE_ID'\n                                        )\n                                    ) DCGANI \n                                        ON MET.MA_EVENT_TYPE_ID = DCGANI.MA_EVENT_TYPE_ID \n                                        AND GAP.GL_ACCOUNT_NBR::VARCHAR (25) = DCGANI.MA_EVENT_TYPE_VAR_VALUE \n                                        AND GAD.GL_POSTING_DT BETWEEN DCGANI.START_EFF_DT AND DCGANI.END_EFF_DT \n                                LEFT JOIN\n                                    (\n                                        SELECT\n                                            MA_EVENT_TYPE_ID,\n                                            CASE \n                                                WHEN LENGTH(SITE.STORE_NBR) = 1 THEN '0' \n                                                ELSE '' \n                                            END || SITE.STORE_NBR AS STORE_NBR,\n                                            METVC.START_EFF_DT,\n                                            METVC.END_EFF_DT \n                                        FROM\n                                            MA_EVENT_TYPE_VAR_CTRL METVC \n                                        JOIN\n                                            SITE_PROFILE SITE \n                                                ON METVC.MA_EVENT_TYPE_VAR_VALUE = SITE.LOCATION_TYPE_ID::VARCHAR (25) \n                                        WHERE\n                                            METVC.MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_LOCATION_TYPE_ID_INCL' \n                                            AND LENGTH(SITE.STORE_NBR) <= 2 \n                                            AND METVC.MA_EVENT_TYPE_ID IN (\n                                                SELECT\n                                                    DISTINCT MA_EVENT_TYPE_ID \n                                                FROM\n                                                    MA_EVENT_TYPE_VAR_CTRL \n                                                WHERE\n                                                    MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_ADJ_MA_EVENT_TYPE_ID'\n                                            )\n                                        ) LT \n                                            ON MET.MA_EVENT_TYPE_ID = LT.MA_EVENT_TYPE_ID \n                                            AND SUBSTR(GPCP.GL_PROFIT_CENTER_CD,\n                                        1,\n                                        7) = '0000003' \n                                        AND SUBSTR(GPCP.GL_PROFIT_CENTER_CD,\n                                        9,\n                                        2) = LT.STORE_NBR \n                                        AND GAD.GL_POSTING_DT BETWEEN LT.START_EFF_DT AND LT.END_EFF_DT \n                                    LEFT JOIN\n                                        (\n                                            SELECT\n                                                MA_EVENT_TYPE_ID,\n                                                MA_EVENT_TYPE_VAR_VALUE,\n                                                METVC.START_EFF_DT,\n                                                METVC.END_EFF_DT \n                                            FROM\n                                                MA_EVENT_TYPE_VAR_CTRL METVC \n                                            WHERE\n                                                METVC.MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_LOCATION_TYPE_ID_INCL' \n                                                AND METVC.MA_EVENT_TYPE_ID IN (\n                                                    SELECT\n                                                        DISTINCT MA_EVENT_TYPE_ID \n                                                    FROM\n                                                        MA_EVENT_TYPE_VAR_CTRL \n                                                    WHERE\n                                                        MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_ADJ_MA_EVENT_TYPE_ID'\n                                                )\n                                            ) LT2 \n                                                ON MET.MA_EVENT_TYPE_ID = LT2.MA_EVENT_TYPE_ID \n                                                AND SITE.LOCATION_TYPE_ID::VARCHAR (25) = LT2.MA_EVENT_TYPE_VAR_VALUE \n                                                AND GAD.GL_POSTING_DT BETWEEN LT2.START_EFF_DT AND LT2.END_EFF_DT \n                                        LEFT JOIN\n                                            (\n                                                SELECT\n                                                    MA_EVENT_TYPE_ID,\n                                                    MA_EVENT_TYPE_VAR_VALUE,\n                                                    START_EFF_DT,\n                                                    END_EFF_DT \n                                                FROM\n                                                    MA_EVENT_TYPE_VAR_CTRL \n                                                WHERE\n                                                    MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_GL_PROFIT_CENTER_CD_INCL' \n                                                    AND MA_EVENT_TYPE_ID IN (\n                                                        SELECT\n                                                            DISTINCT MA_EVENT_TYPE_ID \n                                                        FROM\n                                                            MA_EVENT_TYPE_VAR_CTRL \n                                                        WHERE\n                                                            MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_ADJ_MA_EVENT_TYPE_ID'\n                                                    )\n                                                ) GPC \n                                                    ON MET.MA_EVENT_TYPE_ID = GPC.MA_EVENT_TYPE_ID \n                                                    AND GPCP.GL_PROFIT_CENTER_CD::VARCHAR (25) = GPC.MA_EVENT_TYPE_VAR_VALUE \n                                                    AND GAD.GL_POSTING_DT BETWEEN GPC.START_EFF_DT AND GPC.END_EFF_DT \n                                            WHERE\n                                                DCGANE.MA_EVENT_TYPE_VAR_VALUE IS NULL \n                                                AND (\n                                                    DCSLI.MA_EVENT_TYPE_VAR_VALUE IS NOT NULL \n                                                    OR DCGANI.MA_EVENT_TYPE_VAR_VALUE IS NOT NULL\n                                                ) \n                                                AND (\n                                                    LT.STORE_NBR IS NOT NULL \n                                                    OR LT2.MA_EVENT_TYPE_VAR_VALUE IS NOT NULL \n                                                    OR GPC.MA_EVENT_TYPE_VAR_VALUE IS NOT NULL\n                                                ) \n                                            GROUP BY\n                                                MET.MA_EVENT_TYPE_ID,\n                                                GAD.FISCAL_MO\n                                        ) C FULL \n                                    OUTER JOIN\n                                        (\n                                            SELECT\n                                                DISTINCT M.MA_EVENT_TYPE_ID,\n                                                D.FISCAL_MO,\n                                                M.MA_EVENT_TYPE_VAR_VALUE::NUMERIC (12,\n                                                2) ACT_DC_COST_USD \n                                            FROM\n                                                MA_EVENT_TYPE_VAR_CTRL M \n                                            JOIN\n                                                DAYS D \n                                                    ON D.DAY_DT BETWEEN M.START_EFF_DT AND M.END_EFF_DT \n                                            JOIN\n                                                MA_FISCAL_MO_CTRL MFMC \n                                                    ON D.FISCAL_MO = MFMC.FISCAL_MO \n                                                    AND MFMC.RESTATE_DT = CURRENT_DATE \n                                            WHERE\n                                                M.MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_GL_AMT_ADJ' \n                                                AND M.MA_EVENT_TYPE_ID IN (\n                                                    SELECT\n                                                        DISTINCT MA_EVENT_TYPE_ID \n                                                    FROM\n                                                        MA_EVENT_TYPE_VAR_CTRL \n                                                    WHERE\n                                                        MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_ADJ_MA_EVENT_TYPE_ID'\n                                                )\n                                            ) D \n                                                ON C.MA_EVENT_TYPE_ID = D.MA_EVENT_TYPE_ID \n                                                AND C.FISCAL_MO = D.FISCAL_MO\n                                        ) B \n                                            ON A.REF_MA_EVENT_TYPE_ID = B.MA_EVENT_TYPE_ID \n                                            AND A.FISCAL_MO = B.FISCAL_MO\n                                        ) A \n                                LEFT JOIN\n                                    MA_DC_COST_ADJ_CTRL MDCAC \n                                        ON A.MA_EVENT_TYPE_ID = MDCAC.MA_EVENT_TYPE_ID \n                                        AND A.FISCAL_MO = MDCAC.FISCAL_MO \n                                WHERE\n                                    INS_UPD_FLAG <> 'X'\"\"\")","df_11.createOrReplaceTempView(\"SQ_MA_DC_COST_ADJ_CTRL_11\")"]},"id":"SQ_MA_DC_COST_ADJ_CTRL","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Qualifier","label":"SQ_MA_DC_COST_ADJ_CTRL","queries":["df_11=spark.sql(\"\"\"\n    SELECT\n        A.FISCAL_MO,\n        A.MA_EVENT_TYPE_ID,\n        A.EST_DC_COST_USD,\n        A.ACT_DC_COST_USD,\n        A.DC_COST_ADJ_PCT,\n        CURRENT_TIMESTAMP UPDATE_TSTMP,\n        NVL(A.LOAD_TSTMP,\n        CURRENT_TIMESTAMP) LOAD_TSTMP,\n        CASE \n            WHEN MDCAC.FISCAL_MO IS NULL THEN 'I' \n            WHEN A.DC_COST_ADJ_PCT <> MDCAC.DC_COST_ADJ_PCT THEN 'U' \n            ELSE 'X' \n        END INS_UPD_FLAG \n    FROM\n        (SELECT\n            A.FISCAL_MO,\n            B.MA_EVENT_TYPE_ID,\n            A.EST_DC_COST_USD,\n            B.ACT_DC_COST_USD,\n            ((B.ACT_DC_COST_USD - A.EST_DC_COST_USD) / A.EST_DC_COST_USD)::NUMERIC (12,\n            6) AS DC_COST_ADJ_PCT,\n            CURRENT_TIMESTAMP UPDATE_TSTMP,\n            CURRENT_TIMESTAMP LOAD_TSTMP \n        FROM\n            (SELECT\n                ME.FISCAL_MO,\n                ME.MA_EVENT_TYPE_ID,\n                MET.REF_MA_EVENT_TYPE_ID,\n                -SUM(MSTU.MA_SALES_AMT * EXCH_RATE_PCT)::NUMERIC (12,\n                2) EST_DC_COST_USD \n            FROM\n                MA_SALES_TRANS_UPC MSTU \n            JOIN\n                MA_EVENT ME \n                    ON MSTU.MA_EVENT_ID = ME.MA_EVENT_ID \n            JOIN\n                MA_FISCAL_MO_CTRL MFMC \n                    ON ME.FISCAL_MO = MFMC.FISCAL_MO \n                    AND MFMC.RESTATE_DT = CURRENT_DATE \n            JOIN\n                MA_EVENT_TYPE MET \n                    ON ME.MA_EVENT_TYPE_ID = MET.MA_EVENT_TYPE_ID \n            WHERE\n                ME.MA_EVENT_SOURCE_ID = 10 \n            GROUP BY\n                ME.FISCAL_MO,\n                ME.MA_EVENT_TYPE_ID,\n                MET.REF_MA_EVENT_TYPE_ID) A \n        JOIN\n            (\n                SELECT\n                    NVL(C.MA_EVENT_TYPE_ID,\n                    D.MA_EVENT_TYPE_ID) MA_EVENT_TYPE_ID,\n                    NVL(C.FISCAL_MO,\n                    D.FISCAL_MO) FISCAL_MO,\n                    NVL(C.ACT_DC_COST_USD,\n                    0) + NVL(D.ACT_DC_COST_USD,\n                    0) ACT_DC_COST_USD \n                FROM\n                    (SELECT\n                        MET.MA_EVENT_TYPE_ID,\n                        GAD.FISCAL_MO,\n                        SUM(GAD.GL_GRP_AMT)::NUMERIC (12,\n                        2) ACT_DC_COST_USD \n                    FROM\n                        GL_ACTUAL_DETAIL GAD \n                    JOIN\n                        GL_ACCOUNT_PROFILE GAP \n                            ON GAD.GL_ACCOUNT_GID = GAP.GL_ACCOUNT_GID \n                    LEFT JOIN\n                        DM_GL_COA DGC \n                            ON GAP.GL_ACCOUNT_NBR = DGC.GL_ACCT_NBR \n                    JOIN\n                        SITE_PROFILE_RPT SITE \n                            ON GAD.LOCATION_ID = SITE.LOCATION_ID \n                    JOIN\n                        GL_PROFIT_CENTER_PROFILE GPCP \n                            ON GAD.GL_PROFIT_CENTER_GID = GPCP.GL_PROFIT_CENTER_GID \n                    JOIN\n                        MA_FISCAL_MO_CTRL MFMC \n                            ON GAD.FISCAL_MO = MFMC.FISCAL_MO \n                            AND MFMC.RESTATE_DT = CURRENT_DATE CROSS \n                    JOIN\n                        (\n                            SELECT\n                                DISTINCT MA_EVENT_TYPE_ID \n                            FROM\n                                MA_EVENT_TYPE_VAR_CTRL \n                            WHERE\n                                MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_ADJ_MA_EVENT_TYPE_ID'\n                        ) MET \n                    LEFT JOIN\n                        (\n                            SELECT\n                                MA_EVENT_TYPE_ID,\n                                MA_EVENT_TYPE_VAR_VALUE,\n                                START_EFF_DT,\n                                END_EFF_DT \n                            FROM\n                                MA_EVENT_TYPE_VAR_CTRL \n                            WHERE\n                                MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_STORE_LNBR_INCL' \n                                AND MA_EVENT_TYPE_ID IN (\n                                    SELECT\n                                        DISTINCT MA_EVENT_TYPE_ID \n                                    FROM\n                                        MA_EVENT_TYPE_VAR_CTRL \n                                    WHERE\n                                        MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_ADJ_MA_EVENT_TYPE_ID'\n                                )\n                            ) DCSLI \n                                ON MET.MA_EVENT_TYPE_ID = DCSLI.MA_EVENT_TYPE_ID \n                                AND DGC.STORE_LNBR::VARCHAR (25) = DCSLI.MA_EVENT_TYPE_VAR_VALUE \n                                AND GAD.GL_POSTING_DT BETWEEN DCSLI.START_EFF_DT AND DCSLI.END_EFF_DT \n                        LEFT JOIN\n                            (\n                                SELECT\n                                    MA_EVENT_TYPE_ID,\n                                    MA_EVENT_TYPE_VAR_VALUE,\n                                    START_EFF_DT,\n                                    END_EFF_DT \n                                FROM\n                                    MA_EVENT_TYPE_VAR_CTRL \n                                WHERE\n                                    MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_GL_ACCT_NBR_EXCL' \n                                    AND MA_EVENT_TYPE_ID IN (\n                                        SELECT\n                                            DISTINCT MA_EVENT_TYPE_ID \n                                        FROM\n                                            MA_EVENT_TYPE_VAR_CTRL \n                                        WHERE\n                                            MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_ADJ_MA_EVENT_TYPE_ID'\n                                    )\n                                ) DCGANE \n                                    ON MET.MA_EVENT_TYPE_ID = DCGANE.MA_EVENT_TYPE_ID \n                                    AND GAP.GL_ACCOUNT_NBR::VARCHAR (25) = DCGANE.MA_EVENT_TYPE_VAR_VALUE \n                                    AND GAD.GL_POSTING_DT BETWEEN DCGANE.START_EFF_DT AND DCGANE.END_EFF_DT \n                            LEFT JOIN\n                                (\n                                    SELECT\n                                        MA_EVENT_TYPE_ID,\n                                        MA_EVENT_TYPE_VAR_VALUE,\n                                        START_EFF_DT,\n                                        END_EFF_DT \n                                    FROM\n                                        MA_EVENT_TYPE_VAR_CTRL \n                                    WHERE\n                                        MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_GL_ACCT_NBR_INCL' \n                                        AND MA_EVENT_TYPE_ID IN (\n                                            SELECT\n                                                DISTINCT MA_EVENT_TYPE_ID \n                                            FROM\n                                                MA_EVENT_TYPE_VAR_CTRL \n                                            WHERE\n                                                MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_ADJ_MA_EVENT_TYPE_ID'\n                                        )\n                                    ) DCGANI \n                                        ON MET.MA_EVENT_TYPE_ID = DCGANI.MA_EVENT_TYPE_ID \n                                        AND GAP.GL_ACCOUNT_NBR::VARCHAR (25) = DCGANI.MA_EVENT_TYPE_VAR_VALUE \n                                        AND GAD.GL_POSTING_DT BETWEEN DCGANI.START_EFF_DT AND DCGANI.END_EFF_DT \n                                LEFT JOIN\n                                    (\n                                        SELECT\n                                            MA_EVENT_TYPE_ID,\n                                            CASE \n                                                WHEN LENGTH(SITE.STORE_NBR) = 1 THEN '0' \n                                                ELSE '' \n                                            END || SITE.STORE_NBR AS STORE_NBR,\n                                            METVC.START_EFF_DT,\n                                            METVC.END_EFF_DT \n                                        FROM\n                                            MA_EVENT_TYPE_VAR_CTRL METVC \n                                        JOIN\n                                            SITE_PROFILE SITE \n                                                ON METVC.MA_EVENT_TYPE_VAR_VALUE = SITE.LOCATION_TYPE_ID::VARCHAR (25) \n                                        WHERE\n                                            METVC.MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_LOCATION_TYPE_ID_INCL' \n                                            AND LENGTH(SITE.STORE_NBR) <= 2 \n                                            AND METVC.MA_EVENT_TYPE_ID IN (\n                                                SELECT\n                                                    DISTINCT MA_EVENT_TYPE_ID \n                                                FROM\n                                                    MA_EVENT_TYPE_VAR_CTRL \n                                                WHERE\n                                                    MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_ADJ_MA_EVENT_TYPE_ID'\n                                            )\n                                        ) LT \n                                            ON MET.MA_EVENT_TYPE_ID = LT.MA_EVENT_TYPE_ID \n                                            AND SUBSTR(GPCP.GL_PROFIT_CENTER_CD,\n                                        1,\n                                        7) = '0000003' \n                                        AND SUBSTR(GPCP.GL_PROFIT_CENTER_CD,\n                                        9,\n                                        2) = LT.STORE_NBR \n                                        AND GAD.GL_POSTING_DT BETWEEN LT.START_EFF_DT AND LT.END_EFF_DT \n                                    LEFT JOIN\n                                        (\n                                            SELECT\n                                                MA_EVENT_TYPE_ID,\n                                                MA_EVENT_TYPE_VAR_VALUE,\n                                                METVC.START_EFF_DT,\n                                                METVC.END_EFF_DT \n                                            FROM\n                                                MA_EVENT_TYPE_VAR_CTRL METVC \n                                            WHERE\n                                                METVC.MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_LOCATION_TYPE_ID_INCL' \n                                                AND METVC.MA_EVENT_TYPE_ID IN (\n                                                    SELECT\n                                                        DISTINCT MA_EVENT_TYPE_ID \n                                                    FROM\n                                                        MA_EVENT_TYPE_VAR_CTRL \n                                                    WHERE\n                                                        MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_ADJ_MA_EVENT_TYPE_ID'\n                                                )\n                                            ) LT2 \n                                                ON MET.MA_EVENT_TYPE_ID = LT2.MA_EVENT_TYPE_ID \n                                                AND SITE.LOCATION_TYPE_ID::VARCHAR (25) = LT2.MA_EVENT_TYPE_VAR_VALUE \n                                                AND GAD.GL_POSTING_DT BETWEEN LT2.START_EFF_DT AND LT2.END_EFF_DT \n                                        LEFT JOIN\n                                            (\n                                                SELECT\n                                                    MA_EVENT_TYPE_ID,\n                                                    MA_EVENT_TYPE_VAR_VALUE,\n                                                    START_EFF_DT,\n                                                    END_EFF_DT \n                                                FROM\n                                                    MA_EVENT_TYPE_VAR_CTRL \n                                                WHERE\n                                                    MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_GL_PROFIT_CENTER_CD_INCL' \n                                                    AND MA_EVENT_TYPE_ID IN (\n                                                        SELECT\n                                                            DISTINCT MA_EVENT_TYPE_ID \n                                                        FROM\n                                                            MA_EVENT_TYPE_VAR_CTRL \n                                                        WHERE\n                                                            MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_ADJ_MA_EVENT_TYPE_ID'\n                                                    )\n                                                ) GPC \n                                                    ON MET.MA_EVENT_TYPE_ID = GPC.MA_EVENT_TYPE_ID \n                                                    AND GPCP.GL_PROFIT_CENTER_CD::VARCHAR (25) = GPC.MA_EVENT_TYPE_VAR_VALUE \n                                                    AND GAD.GL_POSTING_DT BETWEEN GPC.START_EFF_DT AND GPC.END_EFF_DT \n                                            WHERE\n                                                DCGANE.MA_EVENT_TYPE_VAR_VALUE IS NULL \n                                                AND (\n                                                    DCSLI.MA_EVENT_TYPE_VAR_VALUE IS NOT NULL \n                                                    OR DCGANI.MA_EVENT_TYPE_VAR_VALUE IS NOT NULL\n                                                ) \n                                                AND (\n                                                    LT.STORE_NBR IS NOT NULL \n                                                    OR LT2.MA_EVENT_TYPE_VAR_VALUE IS NOT NULL \n                                                    OR GPC.MA_EVENT_TYPE_VAR_VALUE IS NOT NULL\n                                                ) \n                                            GROUP BY\n                                                MET.MA_EVENT_TYPE_ID,\n                                                GAD.FISCAL_MO\n                                        ) C FULL \n                                    OUTER JOIN\n                                        (\n                                            SELECT\n                                                DISTINCT M.MA_EVENT_TYPE_ID,\n                                                D.FISCAL_MO,\n                                                M.MA_EVENT_TYPE_VAR_VALUE::NUMERIC (12,\n                                                2) ACT_DC_COST_USD \n                                            FROM\n                                                MA_EVENT_TYPE_VAR_CTRL M \n                                            JOIN\n                                                DAYS D \n                                                    ON D.DAY_DT BETWEEN M.START_EFF_DT AND M.END_EFF_DT \n                                            JOIN\n                                                MA_FISCAL_MO_CTRL MFMC \n                                                    ON D.FISCAL_MO = MFMC.FISCAL_MO \n                                                    AND MFMC.RESTATE_DT = CURRENT_DATE \n                                            WHERE\n                                                M.MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_GL_AMT_ADJ' \n                                                AND M.MA_EVENT_TYPE_ID IN (\n                                                    SELECT\n                                                        DISTINCT MA_EVENT_TYPE_ID \n                                                    FROM\n                                                        MA_EVENT_TYPE_VAR_CTRL \n                                                    WHERE\n                                                        MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_ADJ_MA_EVENT_TYPE_ID'\n                                                )\n                                            ) D \n                                                ON C.MA_EVENT_TYPE_ID = D.MA_EVENT_TYPE_ID \n                                                AND C.FISCAL_MO = D.FISCAL_MO\n                                        ) B \n                                            ON A.REF_MA_EVENT_TYPE_ID = B.MA_EVENT_TYPE_ID \n                                            AND A.FISCAL_MO = B.FISCAL_MO\n                                        ) A \n                                LEFT JOIN\n                                    MA_DC_COST_ADJ_CTRL MDCAC \n                                        ON A.MA_EVENT_TYPE_ID = MDCAC.MA_EVENT_TYPE_ID \n                                        AND A.FISCAL_MO = MDCAC.FISCAL_MO \n                                WHERE\n                                    INS_UPD_FLAG <> 'X'\"\"\")","df_11.createOrReplaceTempView(\"SQ_MA_DC_COST_ADJ_CTRL_11\")"]},"id":"SQ_MA_DC_COST_ADJ_CTRL","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Qualifier","label":"SQ_MA_DC_COST_ADJ_CTRL","queries":["df_11=spark.sql(\"\"\"\n    SELECT\n        A.FISCAL_MO,\n        A.MA_EVENT_TYPE_ID,\n        A.EST_DC_COST_USD,\n        A.ACT_DC_COST_USD,\n        A.DC_COST_ADJ_PCT,\n        CURRENT_TIMESTAMP UPDATE_TSTMP,\n        NVL(A.LOAD_TSTMP,\n        CURRENT_TIMESTAMP) LOAD_TSTMP,\n        CASE \n            WHEN MDCAC.FISCAL_MO IS NULL THEN 'I' \n            WHEN A.DC_COST_ADJ_PCT <> MDCAC.DC_COST_ADJ_PCT THEN 'U' \n            ELSE 'X' \n        END INS_UPD_FLAG \n    FROM\n        (SELECT\n            A.FISCAL_MO,\n            B.MA_EVENT_TYPE_ID,\n            A.EST_DC_COST_USD,\n            B.ACT_DC_COST_USD,\n            ((B.ACT_DC_COST_USD - A.EST_DC_COST_USD) / A.EST_DC_COST_USD)::NUMERIC (12,\n            6) AS DC_COST_ADJ_PCT,\n            CURRENT_TIMESTAMP UPDATE_TSTMP,\n            CURRENT_TIMESTAMP LOAD_TSTMP \n        FROM\n            (SELECT\n                ME.FISCAL_MO,\n                ME.MA_EVENT_TYPE_ID,\n                MET.REF_MA_EVENT_TYPE_ID,\n                -SUM(MSTU.MA_SALES_AMT * EXCH_RATE_PCT)::NUMERIC (12,\n                2) EST_DC_COST_USD \n            FROM\n                MA_SALES_TRANS_UPC MSTU \n            JOIN\n                MA_EVENT ME \n                    ON MSTU.MA_EVENT_ID = ME.MA_EVENT_ID \n            JOIN\n                MA_FISCAL_MO_CTRL MFMC \n                    ON ME.FISCAL_MO = MFMC.FISCAL_MO \n                    AND MFMC.RESTATE_DT = CURRENT_DATE \n            JOIN\n                MA_EVENT_TYPE MET \n                    ON ME.MA_EVENT_TYPE_ID = MET.MA_EVENT_TYPE_ID \n            WHERE\n                ME.MA_EVENT_SOURCE_ID = 10 \n            GROUP BY\n                ME.FISCAL_MO,\n                ME.MA_EVENT_TYPE_ID,\n                MET.REF_MA_EVENT_TYPE_ID) A \n        JOIN\n            (\n                SELECT\n                    NVL(C.MA_EVENT_TYPE_ID,\n                    D.MA_EVENT_TYPE_ID) MA_EVENT_TYPE_ID,\n                    NVL(C.FISCAL_MO,\n                    D.FISCAL_MO) FISCAL_MO,\n                    NVL(C.ACT_DC_COST_USD,\n                    0) + NVL(D.ACT_DC_COST_USD,\n                    0) ACT_DC_COST_USD \n                FROM\n                    (SELECT\n                        MET.MA_EVENT_TYPE_ID,\n                        GAD.FISCAL_MO,\n                        SUM(GAD.GL_GRP_AMT)::NUMERIC (12,\n                        2) ACT_DC_COST_USD \n                    FROM\n                        GL_ACTUAL_DETAIL GAD \n                    JOIN\n                        GL_ACCOUNT_PROFILE GAP \n                            ON GAD.GL_ACCOUNT_GID = GAP.GL_ACCOUNT_GID \n                    LEFT JOIN\n                        DM_GL_COA DGC \n                            ON GAP.GL_ACCOUNT_NBR = DGC.GL_ACCT_NBR \n                    JOIN\n                        SITE_PROFILE_RPT SITE \n                            ON GAD.LOCATION_ID = SITE.LOCATION_ID \n                    JOIN\n                        GL_PROFIT_CENTER_PROFILE GPCP \n                            ON GAD.GL_PROFIT_CENTER_GID = GPCP.GL_PROFIT_CENTER_GID \n                    JOIN\n                        MA_FISCAL_MO_CTRL MFMC \n                            ON GAD.FISCAL_MO = MFMC.FISCAL_MO \n                            AND MFMC.RESTATE_DT = CURRENT_DATE CROSS \n                    JOIN\n                        (\n                            SELECT\n                                DISTINCT MA_EVENT_TYPE_ID \n                            FROM\n                                MA_EVENT_TYPE_VAR_CTRL \n                            WHERE\n                                MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_ADJ_MA_EVENT_TYPE_ID'\n                        ) MET \n                    LEFT JOIN\n                        (\n                            SELECT\n                                MA_EVENT_TYPE_ID,\n                                MA_EVENT_TYPE_VAR_VALUE,\n                                START_EFF_DT,\n                                END_EFF_DT \n                            FROM\n                                MA_EVENT_TYPE_VAR_CTRL \n                            WHERE\n                                MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_STORE_LNBR_INCL' \n                                AND MA_EVENT_TYPE_ID IN (\n                                    SELECT\n                                        DISTINCT MA_EVENT_TYPE_ID \n                                    FROM\n                                        MA_EVENT_TYPE_VAR_CTRL \n                                    WHERE\n                                        MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_ADJ_MA_EVENT_TYPE_ID'\n                                )\n                            ) DCSLI \n                                ON MET.MA_EVENT_TYPE_ID = DCSLI.MA_EVENT_TYPE_ID \n                                AND DGC.STORE_LNBR::VARCHAR (25) = DCSLI.MA_EVENT_TYPE_VAR_VALUE \n                                AND GAD.GL_POSTING_DT BETWEEN DCSLI.START_EFF_DT AND DCSLI.END_EFF_DT \n                        LEFT JOIN\n                            (\n                                SELECT\n                                    MA_EVENT_TYPE_ID,\n                                    MA_EVENT_TYPE_VAR_VALUE,\n                                    START_EFF_DT,\n                                    END_EFF_DT \n                                FROM\n                                    MA_EVENT_TYPE_VAR_CTRL \n                                WHERE\n                                    MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_GL_ACCT_NBR_EXCL' \n                                    AND MA_EVENT_TYPE_ID IN (\n                                        SELECT\n                                            DISTINCT MA_EVENT_TYPE_ID \n                                        FROM\n                                            MA_EVENT_TYPE_VAR_CTRL \n                                        WHERE\n                                            MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_ADJ_MA_EVENT_TYPE_ID'\n                                    )\n                                ) DCGANE \n                                    ON MET.MA_EVENT_TYPE_ID = DCGANE.MA_EVENT_TYPE_ID \n                                    AND GAP.GL_ACCOUNT_NBR::VARCHAR (25) = DCGANE.MA_EVENT_TYPE_VAR_VALUE \n                                    AND GAD.GL_POSTING_DT BETWEEN DCGANE.START_EFF_DT AND DCGANE.END_EFF_DT \n                            LEFT JOIN\n                                (\n                                    SELECT\n                                        MA_EVENT_TYPE_ID,\n                                        MA_EVENT_TYPE_VAR_VALUE,\n                                        START_EFF_DT,\n                                        END_EFF_DT \n                                    FROM\n                                        MA_EVENT_TYPE_VAR_CTRL \n                                    WHERE\n                                        MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_GL_ACCT_NBR_INCL' \n                                        AND MA_EVENT_TYPE_ID IN (\n                                            SELECT\n                                                DISTINCT MA_EVENT_TYPE_ID \n                                            FROM\n                                                MA_EVENT_TYPE_VAR_CTRL \n                                            WHERE\n                                                MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_ADJ_MA_EVENT_TYPE_ID'\n                                        )\n                                    ) DCGANI \n                                        ON MET.MA_EVENT_TYPE_ID = DCGANI.MA_EVENT_TYPE_ID \n                                        AND GAP.GL_ACCOUNT_NBR::VARCHAR (25) = DCGANI.MA_EVENT_TYPE_VAR_VALUE \n                                        AND GAD.GL_POSTING_DT BETWEEN DCGANI.START_EFF_DT AND DCGANI.END_EFF_DT \n                                LEFT JOIN\n                                    (\n                                        SELECT\n                                            MA_EVENT_TYPE_ID,\n                                            CASE \n                                                WHEN LENGTH(SITE.STORE_NBR) = 1 THEN '0' \n                                                ELSE '' \n                                            END || SITE.STORE_NBR AS STORE_NBR,\n                                            METVC.START_EFF_DT,\n                                            METVC.END_EFF_DT \n                                        FROM\n                                            MA_EVENT_TYPE_VAR_CTRL METVC \n                                        JOIN\n                                            SITE_PROFILE SITE \n                                                ON METVC.MA_EVENT_TYPE_VAR_VALUE = SITE.LOCATION_TYPE_ID::VARCHAR (25) \n                                        WHERE\n                                            METVC.MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_LOCATION_TYPE_ID_INCL' \n                                            AND LENGTH(SITE.STORE_NBR) <= 2 \n                                            AND METVC.MA_EVENT_TYPE_ID IN (\n                                                SELECT\n                                                    DISTINCT MA_EVENT_TYPE_ID \n                                                FROM\n                                                    MA_EVENT_TYPE_VAR_CTRL \n                                                WHERE\n                                                    MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_ADJ_MA_EVENT_TYPE_ID'\n                                            )\n                                        ) LT \n                                            ON MET.MA_EVENT_TYPE_ID = LT.MA_EVENT_TYPE_ID \n                                            AND SUBSTR(GPCP.GL_PROFIT_CENTER_CD,\n                                        1,\n                                        7) = '0000003' \n                                        AND SUBSTR(GPCP.GL_PROFIT_CENTER_CD,\n                                        9,\n                                        2) = LT.STORE_NBR \n                                        AND GAD.GL_POSTING_DT BETWEEN LT.START_EFF_DT AND LT.END_EFF_DT \n                                    LEFT JOIN\n                                        (\n                                            SELECT\n                                                MA_EVENT_TYPE_ID,\n                                                MA_EVENT_TYPE_VAR_VALUE,\n                                                METVC.START_EFF_DT,\n                                                METVC.END_EFF_DT \n                                            FROM\n                                                MA_EVENT_TYPE_VAR_CTRL METVC \n                                            WHERE\n                                                METVC.MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_LOCATION_TYPE_ID_INCL' \n                                                AND METVC.MA_EVENT_TYPE_ID IN (\n                                                    SELECT\n                                                        DISTINCT MA_EVENT_TYPE_ID \n                                                    FROM\n                                                        MA_EVENT_TYPE_VAR_CTRL \n                                                    WHERE\n                                                        MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_ADJ_MA_EVENT_TYPE_ID'\n                                                )\n                                            ) LT2 \n                                                ON MET.MA_EVENT_TYPE_ID = LT2.MA_EVENT_TYPE_ID \n                                                AND SITE.LOCATION_TYPE_ID::VARCHAR (25) = LT2.MA_EVENT_TYPE_VAR_VALUE \n                                                AND GAD.GL_POSTING_DT BETWEEN LT2.START_EFF_DT AND LT2.END_EFF_DT \n                                        LEFT JOIN\n                                            (\n                                                SELECT\n                                                    MA_EVENT_TYPE_ID,\n                                                    MA_EVENT_TYPE_VAR_VALUE,\n                                                    START_EFF_DT,\n                                                    END_EFF_DT \n                                                FROM\n                                                    MA_EVENT_TYPE_VAR_CTRL \n                                                WHERE\n                                                    MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_GL_PROFIT_CENTER_CD_INCL' \n                                                    AND MA_EVENT_TYPE_ID IN (\n                                                        SELECT\n                                                            DISTINCT MA_EVENT_TYPE_ID \n                                                        FROM\n                                                            MA_EVENT_TYPE_VAR_CTRL \n                                                        WHERE\n                                                            MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_ADJ_MA_EVENT_TYPE_ID'\n                                                    )\n                                                ) GPC \n                                                    ON MET.MA_EVENT_TYPE_ID = GPC.MA_EVENT_TYPE_ID \n                                                    AND GPCP.GL_PROFIT_CENTER_CD::VARCHAR (25) = GPC.MA_EVENT_TYPE_VAR_VALUE \n                                                    AND GAD.GL_POSTING_DT BETWEEN GPC.START_EFF_DT AND GPC.END_EFF_DT \n                                            WHERE\n                                                DCGANE.MA_EVENT_TYPE_VAR_VALUE IS NULL \n                                                AND (\n                                                    DCSLI.MA_EVENT_TYPE_VAR_VALUE IS NOT NULL \n                                                    OR DCGANI.MA_EVENT_TYPE_VAR_VALUE IS NOT NULL\n                                                ) \n                                                AND (\n                                                    LT.STORE_NBR IS NOT NULL \n                                                    OR LT2.MA_EVENT_TYPE_VAR_VALUE IS NOT NULL \n                                                    OR GPC.MA_EVENT_TYPE_VAR_VALUE IS NOT NULL\n                                                ) \n                                            GROUP BY\n                                                MET.MA_EVENT_TYPE_ID,\n                                                GAD.FISCAL_MO\n                                        ) C FULL \n                                    OUTER JOIN\n                                        (\n                                            SELECT\n                                                DISTINCT M.MA_EVENT_TYPE_ID,\n                                                D.FISCAL_MO,\n                                                M.MA_EVENT_TYPE_VAR_VALUE::NUMERIC (12,\n                                                2) ACT_DC_COST_USD \n                                            FROM\n                                                MA_EVENT_TYPE_VAR_CTRL M \n                                            JOIN\n                                                DAYS D \n                                                    ON D.DAY_DT BETWEEN M.START_EFF_DT AND M.END_EFF_DT \n                                            JOIN\n                                                MA_FISCAL_MO_CTRL MFMC \n                                                    ON D.FISCAL_MO = MFMC.FISCAL_MO \n                                                    AND MFMC.RESTATE_DT = CURRENT_DATE \n                                            WHERE\n                                                M.MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_GL_AMT_ADJ' \n                                                AND M.MA_EVENT_TYPE_ID IN (\n                                                    SELECT\n                                                        DISTINCT MA_EVENT_TYPE_ID \n                                                    FROM\n                                                        MA_EVENT_TYPE_VAR_CTRL \n                                                    WHERE\n                                                        MA_EVENT_TYPE_VAR_TYPE_CD = 'DC_COST_ADJ_MA_EVENT_TYPE_ID'\n                                                )\n                                            ) D \n                                                ON C.MA_EVENT_TYPE_ID = D.MA_EVENT_TYPE_ID \n                                                AND C.FISCAL_MO = D.FISCAL_MO\n                                        ) B \n                                            ON A.REF_MA_EVENT_TYPE_ID = B.MA_EVENT_TYPE_ID \n                                            AND A.FISCAL_MO = B.FISCAL_MO\n                                        ) A \n                                LEFT JOIN\n                                    MA_DC_COST_ADJ_CTRL MDCAC \n                                        ON A.MA_EVENT_TYPE_ID = MDCAC.MA_EVENT_TYPE_ID \n                                        AND A.FISCAL_MO = MDCAC.FISCAL_MO \n                                WHERE\n                                    INS_UPD_FLAG <> 'X'\"\"\")","df_11.createOrReplaceTempView(\"SQ_MA_DC_COST_ADJ_CTRL_11\")"]},"id":"SQ_MA_DC_COST_ADJ_CTRL","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Update Strategy","label":"UPD_Strategy","queries":["df_12=spark.sql(\"\"\"\n    SELECT\n        FISCAL_MO AS FISCAL_MO,\n        MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\n        EST_DC_COST_USD AS EST_DC_COST_USD,\n        ACT_DC_COST_USD AS ACT_DC_COST_USD,\n        DC_COST_ADJ_PCT AS DC_COST_ADJ_PCT,\n        UPDATE_TSTMP AS UPDATE_TSTMP,\n        LOAD_TSTMP AS LOAD_TSTMP,\n        INS_UPD_FLAG AS INS_UPD_FLAG,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        SQ_MA_DC_COST_ADJ_CTRL_11\"\"\")","df_12.createOrReplaceTempView(\"UPD_Strategy_12\")"]},"id":"UPD_Strategy","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"GL_ACTUAL_DETAIL","queries":["df_13=spark.sql(\"\"\"\n    SELECT\n        FISCAL_YR AS FISCAL_YR,\n        FISCAL_MO AS FISCAL_MO,\n        GL_DOCUMENT_NBR AS GL_DOCUMENT_NBR,\n        GL_COMPANY_CD AS GL_COMPANY_CD,\n        GL_DOCUMENT_LINE_NBR AS GL_DOCUMENT_LINE_NBR,\n        FISCAL_WK AS FISCAL_WK,\n        WEEK_DT AS WEEK_DT,\n        GL_DOCUMENT_DT AS GL_DOCUMENT_DT,\n        GL_POSTING_DT AS GL_POSTING_DT,\n        GL_DOCUMENT_ENTRY_DT AS GL_DOCUMENT_ENTRY_DT,\n        GL_DOCUMENT_TYPE_CD AS GL_DOCUMENT_TYPE_CD,\n        GL_REF_DOCUMENT_NBR AS GL_REF_DOCUMENT_NBR,\n        GL_PROFIT_CENTER_GID AS GL_PROFIT_CENTER_GID,\n        LOCATION_ID AS LOCATION_ID,\n        STORE_NBR AS STORE_NBR,\n        GL_DEPARTMENT_CD AS GL_DEPARTMENT_CD,\n        GL_DEBIT_CREDIT_IND AS GL_DEBIT_CREDIT_IND,\n        GL_ACCOUNT_GID AS GL_ACCOUNT_GID,\n        GL_BALANCE_SHEET_IND AS GL_BALANCE_SHEET_IND,\n        GL_PL_SHEET_IND AS GL_PL_SHEET_IND,\n        GL_SPLIT_LINE_ITEM_IND AS GL_SPLIT_LINE_ITEM_IND,\n        GL_BUSINESS_TXN_TYPE_CD AS GL_BUSINESS_TXN_TYPE_CD,\n        GL_REF_TXN_TYPE_CD AS GL_REF_TXN_TYPE_CD,\n        GL_TXN_TYPE_CD AS GL_TXN_TYPE_CD,\n        GL_COST_ELEMENT_CD AS GL_COST_ELEMENT_CD,\n        GL_POSTING_KEY_GID AS GL_POSTING_KEY_GID,\n        GL_CONTROLLING_AREA AS GL_CONTROLLING_AREA,\n        GL_SEGMENT_CD AS GL_SEGMENT_CD,\n        GL_PARTNER_PROFIT_CENTER_GID AS GL_PARTNER_PROFIT_CENTER_GID,\n        GL_PARTNER_COMPANY_CD AS GL_PARTNER_COMPANY_CD,\n        GL_PARTNER_SEGMENT_CD AS GL_PARTNER_SEGMENT_CD,\n        VENDOR_ID AS VENDOR_ID,\n        GL_ITEM_CATEGORY_CD AS GL_ITEM_CATEGORY_CD,\n        GL_PURCH_DOC_NBR AS GL_PURCH_DOC_NBR,\n        GL_DOC_CURRENCY_ID AS GL_DOC_CURRENCY_ID,\n        GL_DOC_AMT AS GL_DOC_AMT,\n        GL_LOC_CURRENCY_ID AS GL_LOC_CURRENCY_ID,\n        GL_LOC_AMT AS GL_LOC_AMT,\n        GL_GRP_CURRENCY_ID AS GL_GRP_CURRENCY_ID,\n        GL_GRP_AMT AS GL_GRP_AMT,\n        GL_QTY AS GL_QTY,\n        GL_QTY_UOM_CD AS GL_QTY_UOM_CD,\n        EXCH_RATE_PCT AS EXCH_RATE_PCT,\n        GL_USER_NAME AS GL_USER_NAME,\n        GL_LOAD_TSTMP AS GL_LOAD_TSTMP,\n        UPDATE_DT AS UPDATE_DT,\n        LOAD_DT AS LOAD_DT,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        GL_ACTUAL_DETAIL\"\"\")","df_13.createOrReplaceTempView(\"GL_ACTUAL_DETAIL_13\")"]},"id":"GL_ACTUAL_DETAIL","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"DM_GL_COA","queries":["df_14=spark.sql(\"\"\"\n    SELECT\n        GL_ACCT_NBR AS GL_ACCT_NBR,\n        GL_ACCT_DESC AS GL_ACCT_DESC,\n        STORE_LNBR AS STORE_LNBR,\n        STORE_LNBR_DESC AS STORE_LNBR_DESC,\n        SSG_LNBR AS SSG_LNBR,\n        SSG_LNBR_DESC AS SSG_LNBR_DESC,\n        CENTER AS CENTER,\n        GL_CHART_OF_ACCOUNTS_CD AS GL_CHART_OF_ACCOUNTS_CD,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        DM_GL_COA\"\"\")","df_14.createOrReplaceTempView(\"DM_GL_COA_14\")"]},"id":"DM_GL_COA","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Target Definition","label":"MA_DC_COST_ADJ_CTRL","queries":["spark.sql(\"\"\"INSERT INTO MA_DC_COST_ADJ_CTRL SELECT FISCAL_MO AS FISCAL_MO,\nMA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\nEST_DC_COST_USD AS EST_DC_COST_USD,\nACT_DC_COST_USD AS ACT_DC_COST_USD,\nDC_COST_ADJ_PCT AS DC_COST_ADJ_PCT,\nUPDATE_TSTMP AS UPDATE_TSTMP,\nLOAD_TSTMP AS LOAD_TSTMP FROM UPD_Strategy_12\"\"\")"]},"id":"MA_DC_COST_ADJ_CTRL","position":{"x":0,"y":0},"type":"normalNode"}]}