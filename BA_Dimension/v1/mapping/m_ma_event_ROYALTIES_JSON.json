{"Edges":[{"transformationType":"Sequence","id":"e-0","source":"","target":"SEQ_MA_EVENT_ID"},{"transformationType":"Source Definition","id":"e-1","source":"","target":"MaRoyaltySKU"},{"transformationType":"Source Qualifier","id":"e-2","source":"MaRoyaltySKU","target":"SQ_Shortcut_to_MaRoyaltySKU"},{"transformationType":"Source Definition","id":"e-3","source":"","target":"MaRoyaltyBrand"},{"transformationType":"Source Qualifier","id":"e-4","source":"MaRoyaltyBrand","target":"SQ_Shortcut_to_MaRoyaltyBrand"},{"transformationType":"Joiner","id":"e-5","source":"SQ_Shortcut_to_MaRoyaltyBrand","target":"JNR_RoyaltyBrandIdNew"},{"transformationType":"Joiner","id":"e-6","source":"SQ_Shortcut_to_MaRoyaltySKU","target":"JNR_RoyaltyBrandIdNew"},{"transformationType":"Expression","id":"e-7","source":"JNR_RoyaltyBrandIdNew","target":"EXP_RoyaltyBrandNew"},{"transformationType":"Source Definition","id":"e-8","source":"","target":"EXT_DAYS"},{"transformationType":"Source Qualifier","id":"e-9","source":"EXT_DAYS","target":"SQ_Shortcut_to_EXT_DAYS"},{"transformationType":"Expression","id":"e-10","source":"SQ_Shortcut_to_EXT_DAYS","target":"EXP_Ext_Days"},{"transformationType":"Joiner","id":"e-11","source":"EXP_RoyaltyBrandNew","target":"JNR_MaRoyalty"},{"transformationType":"Joiner","id":"e-12","source":"EXP_Ext_Days","target":"JNR_MaRoyalty"},{"transformationType":"Filter","id":"e-13","source":"JNR_MaRoyalty","target":"FIL_Date"},{"transformationType":"Aggregator","id":"e-14","source":"FIL_Date","target":"AGG_Day_Dt"},{"transformationType":"Expression","id":"e-15","source":"AGG_Day_Dt","target":"EXP_PriductIdNew"},{"transformationType":"Lookup Procedure","id":"e-16","source":"EXP_PriductIdNew","target":"LKP_EXT_DAYS"},{"transformationType":"Filter","id":"e-17","source":"EXP_PriductIdNew","target":"FIL_Having"},{"transformationType":"Filter","id":"e-18","source":"LKP_EXT_DAYS","target":"FIL_Having"},{"transformationType":"Source Definition","id":"e-19","source":"","target":"MA_EVENT"},{"transformationType":"Source Qualifier","id":"e-20","source":"MA_EVENT","target":"SQ_Shortcut_to_MA_EVENT"},{"transformationType":"Filter","id":"e-21","source":"SQ_Shortcut_to_MA_EVENT","target":"FIL_Royalty"},{"transformationType":"Lookup Procedure","id":"e-22","source":"FIL_Royalty","target":"LKP_DAYS"},{"transformationType":"Filter","id":"e-23","source":"FIL_Royalty","target":"FIL_START_DT"},{"transformationType":"Filter","id":"e-24","source":"LKP_DAYS","target":"FIL_START_DT"},{"transformationType":"Expression","id":"e-25","source":"FIL_START_DT","target":"EXP_ProductId"},{"transformationType":"Joiner","id":"e-26","source":"EXP_ProductId","target":"JNR_All"},{"transformationType":"Joiner","id":"e-27","source":"FIL_Having","target":"JNR_All"},{"transformationType":"Expression","id":"e-28","source":"SEQ_MA_EVENT_ID","target":"EXP_Strategy"},{"transformationType":"Expression","id":"e-29","source":"JNR_All","target":"EXP_Strategy"},{"transformationType":"Filter","id":"e-30","source":"EXP_Strategy","target":"FIL_LoadFlag"},{"transformationType":"Update Strategy","id":"e-31","source":"FIL_LoadFlag","target":"UPD_InsertDeleteUpdate"},{"transformationType":"Filter","id":"e-32","source":"EXP_Strategy","target":"FIL_Restate_Hist"},{"transformationType":"Expression","id":"e-33","source":"FIL_Restate_Hist","target":"EXP_Load_Flag"},{"transformationType":"Update Strategy","id":"e-34","source":"EXP_Load_Flag","target":"UPD_InsertOnly"},{"transformationType":"Target Definition","id":"e-35","source":"UPD_InsertDeleteUpdate","target":"MA_EVENT"},{"transformationType":"Target Definition","id":"e-36","source":"UPD_InsertOnly","target":"MA_EVENT_RESTATE_HIST"}],"Nodes":[{"data":{"transformationType":"Sequence","label":"SEQ_MA_EVENT_ID","queries":["spark.sql(\"\"\"CREATE TABLE SEQ_MA_EVENT_ID(NEXTVAL BIGINT,\nCURRVAL BIGINT,\nIncrement_By Int);\"\"\")","spark.sql(\"\"\"INSERT INTO SEQ_MA_EVENT_ID(NEXTVAL BIGINT,\nCURRVAL BIGINT,\nIncrement_By Int) VALUES(2, 1, 1)\"\"\")"]},"id":"SEQ_MA_EVENT_ID","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"MaRoyaltySKU","queries":["df_1=spark.sql(\"\"\"\n    SELECT\n        RoyaltyBrandId AS RoyaltyBrandId,\n        ProductId AS ProductId,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        MaRoyaltySKU\"\"\")","df_1.createOrReplaceTempView(\"MaRoyaltySKU_1\")"]},"id":"MaRoyaltySKU","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Qualifier","label":"SQ_Shortcut_to_MaRoyaltySKU","queries":["df_2=spark.sql(\"\"\"\n    SELECT\n        RoyaltyBrandId AS RoyaltyBrandId,\n        ProductId AS ProductId,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        MaRoyaltySKU_1\"\"\")","df_2.createOrReplaceTempView(\"SQ_Shortcut_to_MaRoyaltySKU_2\")"]},"id":"SQ_Shortcut_to_MaRoyaltySKU","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"MaRoyaltyBrand","queries":["df_3=spark.sql(\"\"\"\n    SELECT\n        RoyaltyBrandId AS RoyaltyBrandId,\n        RoyaltyBrandDesc AS RoyaltyBrandDesc,\n        BrandCd AS BrandCd,\n        SkuListInd AS SkuListInd,\n        ContractStartDate AS ContractStartDate,\n        ContractEndDate AS ContractEndDate,\n        RoyaltyFormulaCd AS RoyaltyFormulaCd,\n        RoyaltyPct AS RoyaltyPct,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        MaRoyaltyBrand\"\"\")","df_3.createOrReplaceTempView(\"MaRoyaltyBrand_3\")"]},"id":"MaRoyaltyBrand","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Qualifier","label":"SQ_Shortcut_to_MaRoyaltyBrand","queries":["df_4=spark.sql(\"\"\"\n    SELECT\n        RoyaltyBrandId AS RoyaltyBrandId,\n        RoyaltyBrandDesc AS RoyaltyBrandDesc,\n        BrandCd AS BrandCd,\n        SkuListInd AS SkuListInd,\n        ContractStartDate AS ContractStartDate,\n        ContractEndDate AS ContractEndDate,\n        RoyaltyFormulaCd AS RoyaltyFormulaCd,\n        RoyaltyPct AS RoyaltyPct,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        MaRoyaltyBrand_3\"\"\")","df_4.createOrReplaceTempView(\"SQ_Shortcut_to_MaRoyaltyBrand_4\")"]},"id":"SQ_Shortcut_to_MaRoyaltyBrand","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Joiner","label":"JNR_RoyaltyBrandIdNew","queries":["df_5=spark.sql(\"\"\"\n    SELECT\n        MASTER.RoyaltyBrandId AS RoyaltyBrandId1,\n        MASTER.RoyaltyBrandDesc AS RoyaltyBrandDesc,\n        MASTER.BrandCd AS BrandCd,\n        MASTER.SkuListInd AS SkuListInd,\n        MASTER.ContractStartDate AS ContractStartDate,\n        MASTER.ContractEndDate AS ContractEndDate,\n        MASTER.RoyaltyFormulaCd AS RoyaltyFormulaCd,\n        MASTER.RoyaltyPct AS RoyaltyPct,\n        DETAIL.RoyaltyBrandId AS RoyaltyBrandId,\n        DETAIL.ProductId AS ProductId,\n        MASTER.Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        SQ_Shortcut_to_MaRoyaltyBrand_4 MASTER \n    RIGHT JOIN\n        SQ_Shortcut_to_MaRoyaltySKU_2 DETAIL \n            ON MASTER.RoyaltyBrandId = DETAIL.RoyaltyBrandId\"\"\")","df_5.createOrReplaceTempView(\"JNR_RoyaltyBrandIdNew_5\")"]},"id":"JNR_RoyaltyBrandIdNew","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Joiner","label":"JNR_RoyaltyBrandIdNew","queries":["df_5=spark.sql(\"\"\"\n    SELECT\n        MASTER.RoyaltyBrandId AS RoyaltyBrandId1,\n        MASTER.RoyaltyBrandDesc AS RoyaltyBrandDesc,\n        MASTER.BrandCd AS BrandCd,\n        MASTER.SkuListInd AS SkuListInd,\n        MASTER.ContractStartDate AS ContractStartDate,\n        MASTER.ContractEndDate AS ContractEndDate,\n        MASTER.RoyaltyFormulaCd AS RoyaltyFormulaCd,\n        MASTER.RoyaltyPct AS RoyaltyPct,\n        DETAIL.RoyaltyBrandId AS RoyaltyBrandId,\n        DETAIL.ProductId AS ProductId,\n        MASTER.Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        SQ_Shortcut_to_MaRoyaltyBrand_4 MASTER \n    RIGHT JOIN\n        SQ_Shortcut_to_MaRoyaltySKU_2 DETAIL \n            ON MASTER.RoyaltyBrandId = DETAIL.RoyaltyBrandId\"\"\")","df_5.createOrReplaceTempView(\"JNR_RoyaltyBrandIdNew_5\")"]},"id":"JNR_RoyaltyBrandIdNew","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Expression","label":"EXP_RoyaltyBrandNew","queries":["df_6=spark.sql(\"\"\"\n    SELECT\n        RoyaltyBrandId AS RoyaltyBrandId,\n        ProductId AS ProductId,\n        BrandCd AS BrandCd,\n        RoyaltyFormulaCd AS RoyaltyFormulaCd,\n        RoyaltyBrandDesc AS RoyaltyBrandDesc,\n        (RoyaltyPct * 100) * -1 AS RoyaltyPct1,\n        ContractStartDate AS ContractStartDate,\n        ContractEndDate AS ContractEndDate,\n        SkuListInd AS SkuListInd,\n        1 AS Flag,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        JNR_RoyaltyBrandIdNew_5\"\"\")","df_6.createOrReplaceTempView(\"EXP_RoyaltyBrandNew_6\")"]},"id":"EXP_RoyaltyBrandNew","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"EXT_DAYS","queries":["df_7=spark.sql(\"\"\"\n    SELECT\n        DAY_DT AS DAY_DT,\n        BUSINESS_DAY_FLAG AS BUSINESS_DAY_FLAG,\n        HOLIDAY_FLAG AS HOLIDAY_FLAG,\n        DAY_OF_WK_NAME AS DAY_OF_WK_NAME,\n        DAY_OF_WK_NAME_ABBR AS DAY_OF_WK_NAME_ABBR,\n        DAY_OF_WK_NBR AS DAY_OF_WK_NBR,\n        CAL_DAY_OF_MO_NBR AS CAL_DAY_OF_MO_NBR,\n        CAL_DAY_OF_YR_NBR AS CAL_DAY_OF_YR_NBR,\n        CAL_WK AS CAL_WK,\n        CAL_WK_NBR AS CAL_WK_NBR,\n        CAL_MO AS CAL_MO,\n        CAL_MO_NBR AS CAL_MO_NBR,\n        CAL_MO_NAME AS CAL_MO_NAME,\n        CAL_MO_NAME_ABBR AS CAL_MO_NAME_ABBR,\n        CAL_QTR AS CAL_QTR,\n        CAL_QTR_NBR AS CAL_QTR_NBR,\n        CAL_HALF AS CAL_HALF,\n        CAL_YR AS CAL_YR,\n        FISCAL_DAY_OF_MO_NBR AS FISCAL_DAY_OF_MO_NBR,\n        FISCAL_DAY_OF_YR_NBR AS FISCAL_DAY_OF_YR_NBR,\n        FISCAL_WK AS FISCAL_WK,\n        FISCAL_WK_NBR AS FISCAL_WK_NBR,\n        FISCAL_MO AS FISCAL_MO,\n        FISCAL_MO_NBR AS FISCAL_MO_NBR,\n        FISCAL_MO_NAME AS FISCAL_MO_NAME,\n        FISCAL_MO_NAME_ABBR AS FISCAL_MO_NAME_ABBR,\n        FISCAL_QTR AS FISCAL_QTR,\n        FISCAL_QTR_NBR AS FISCAL_QTR_NBR,\n        FISCAL_HALF AS FISCAL_HALF,\n        FISCAL_YR AS FISCAL_YR,\n        LYR_WEEK_DT AS LYR_WEEK_DT,\n        LWK_WEEK_DT AS LWK_WEEK_DT,\n        WEEK_DT AS WEEK_DT,\n        EST_TIME_CONV_AMT AS EST_TIME_CONV_AMT,\n        EST_TIME_CONV_HRS AS EST_TIME_CONV_HRS,\n        ES0_TIME_CONV_AMT AS ES0_TIME_CONV_AMT,\n        ES0_TIME_CONV_HRS AS ES0_TIME_CONV_HRS,\n        CST_TIME_CONV_AMT AS CST_TIME_CONV_AMT,\n        CST_TIME_CONV_HRS AS CST_TIME_CONV_HRS,\n        CS0_TIME_CONV_AMT AS CS0_TIME_CONV_AMT,\n        CS0_TIME_CONV_HRS AS CS0_TIME_CONV_HRS,\n        MST_TIME_CONV_AMT AS MST_TIME_CONV_AMT,\n        MST_TIME_CONV_HRS AS MST_TIME_CONV_HRS,\n        MS0_TIME_CONV_AMT AS MS0_TIME_CONV_AMT,\n        MS0_TIME_CONV_HRS AS MS0_TIME_CONV_HRS,\n        PST_TIME_CONV_AMT AS PST_TIME_CONV_AMT,\n        PST_TIME_CONV_HRS AS PST_TIME_CONV_HRS,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        EXT_DAYS\"\"\")","df_7.createOrReplaceTempView(\"EXT_DAYS_7\")"]},"id":"EXT_DAYS","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Qualifier","label":"SQ_Shortcut_to_EXT_DAYS","queries":["df_8=spark.sql(\"\"\"\n    SELECT\n        DAY_DT AS DAY_DT,\n        FISCAL_MO AS FISCAL_MO,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        EXT_DAYS_7\"\"\")","df_8.createOrReplaceTempView(\"SQ_Shortcut_to_EXT_DAYS_8\")"]},"id":"SQ_Shortcut_to_EXT_DAYS","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Expression","label":"EXP_Ext_Days","queries":["df_9=spark.sql(\"\"\"\n    SELECT\n        DAY_DT AS DAY_DT,\n        FISCAL_MO AS FISCAL_MO,\n        1 AS Flag,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        SQ_Shortcut_to_EXT_DAYS_8\"\"\")","df_9.createOrReplaceTempView(\"EXP_Ext_Days_9\")"]},"id":"EXP_Ext_Days","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Joiner","label":"JNR_MaRoyalty","queries":["df_10=spark.sql(\"\"\"\n    SELECT\n        MASTER.RoyaltyBrandId AS RoyaltyBrandId,\n        MASTER.ProductId AS ProductId,\n        MASTER.BrandCd AS BrandCd,\n        MASTER.RoyaltyFormulaCd AS RoyaltyFormulaCd,\n        MASTER.RoyaltyBrandDesc AS RoyaltyBrandDesc,\n        MASTER.RoyaltyPct1 AS RoyaltyPct1,\n        MASTER.ContractStartDate AS ContractStartDate,\n        MASTER.ContractEndDate AS ContractEndDate,\n        MASTER.SkuListInd AS SkuListInd,\n        MASTER.Flag AS Flag1,\n        DETAIL.DAY_DT AS DAY_DT,\n        DETAIL.FISCAL_MO AS FISCAL_MO,\n        DETAIL.Flag AS Flag,\n        MASTER.Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        EXP_RoyaltyBrandNew_6 MASTER \n    LEFT JOIN\n        EXP_Ext_Days_9 DETAIL \n            ON MASTER.Flag = DETAIL.Flag\"\"\")","df_10.createOrReplaceTempView(\"JNR_MaRoyalty_10\")"]},"id":"JNR_MaRoyalty","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Joiner","label":"JNR_MaRoyalty","queries":["df_10=spark.sql(\"\"\"\n    SELECT\n        MASTER.RoyaltyBrandId AS RoyaltyBrandId,\n        MASTER.ProductId AS ProductId,\n        MASTER.BrandCd AS BrandCd,\n        MASTER.RoyaltyFormulaCd AS RoyaltyFormulaCd,\n        MASTER.RoyaltyBrandDesc AS RoyaltyBrandDesc,\n        MASTER.RoyaltyPct1 AS RoyaltyPct1,\n        MASTER.ContractStartDate AS ContractStartDate,\n        MASTER.ContractEndDate AS ContractEndDate,\n        MASTER.SkuListInd AS SkuListInd,\n        MASTER.Flag AS Flag1,\n        DETAIL.DAY_DT AS DAY_DT,\n        DETAIL.FISCAL_MO AS FISCAL_MO,\n        DETAIL.Flag AS Flag,\n        MASTER.Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        EXP_RoyaltyBrandNew_6 MASTER \n    LEFT JOIN\n        EXP_Ext_Days_9 DETAIL \n            ON MASTER.Flag = DETAIL.Flag\"\"\")","df_10.createOrReplaceTempView(\"JNR_MaRoyalty_10\")"]},"id":"JNR_MaRoyalty","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Filter","label":"FIL_Date","queries":["df_11=spark.sql(\"\"\"\n    SELECT\n        RoyaltyBrandId AS RoyaltyBrandId,\n        ProductId AS ProductId,\n        BrandCd AS BrandCd,\n        RoyaltyFormulaCd AS RoyaltyFormulaCd,\n        RoyaltyBrandDesc AS RoyaltyBrandDesc,\n        RoyaltyPct1 AS RoyaltyPct1,\n        ContractStartDate AS ContractStartDate,\n        ContractEndDate AS ContractEndDate,\n        SkuListInd AS SkuListInd,\n        DAY_DT AS DAY_DT,\n        FISCAL_MO AS FISCAL_MO,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        JNR_MaRoyalty_10 \n    WHERE\n        DAY_DT >= ContractStartDate \n        AND DAY_DT <= ContractEndDate \n        AND FISCAL_MO >= 201605 \n        AND FISCAL_MO <= 299999\"\"\")","df_11.createOrReplaceTempView(\"FIL_Date_11\")"]},"id":"FIL_Date","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Aggregator","label":"AGG_Day_Dt","queries":["df_12=spark.sql(\"\"\"\n    SELECT\n        RoyaltyBrandId AS RoyaltyBrandId,\n        MIN(DAY_DT) AS START_DT,\n        MAX(DAY_DT) AS END_DT,\n        ProductId AS ProductId,\n        RoyaltyBrandDesc AS RoyaltyBrandDesc,\n        BrandCd AS BrandCd,\n        SkuListInd AS SkuListInd,\n        RoyaltyFormulaCd AS RoyaltyFormulaCd,\n        RoyaltyPct1 AS RoyaltyPct1,\n        FISCAL_MO AS FISCAL_MO \n    FROM\n        FIL_Date_11 \n    GROUP BY\n        RoyaltyBrandId,\n        ProductId,\n        RoyaltyBrandDesc,\n        BrandCd,\n        SkuListInd,\n        RoyaltyFormulaCd,\n        RoyaltyPct1,\n        FISCAL_MO\"\"\")","df_12.createOrReplaceTempView(\"AGG_Day_Dt_12\")"]},"id":"AGG_Day_Dt","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Expression","label":"EXP_PriductIdNew","queries":["df_13=spark.sql(\"\"\"\n    SELECT\n        RoyaltyBrandId AS RoyaltyBrandId,\n        IFF(ISNULL(ProductId),\n        0,\n        ProductId) AS PRODUCT_ID_JOIN,\n        ProductId AS PRODUCT_ID,\n        START_DT AS START_DT,\n        END_DT AS END_DT,\n        RoyaltyBrandDesc AS RoyaltyBrandDesc,\n        BrandCd AS BrandCd,\n        SkuListInd AS SkuListInd,\n        RoyaltyFormulaCd AS RoyaltyFormulaCd,\n        RoyaltyPct1 AS RoyaltyPct1,\n        FISCAL_MO AS FISCAL_MO,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        AGG_Day_Dt_12\"\"\")","df_13.createOrReplaceTempView(\"EXP_PriductIdNew_13\")"]},"id":"EXP_PriductIdNew","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Lookup Procedure","label":"LKP_EXT_DAYS","queries":["df_14=spark.sql(\"\"\"\n    SELECT\n        DAY_DT AS DAY_DT,\n        EXP_PriductIdNew_13.Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        (SELECT\n            DATEADD(day,\n            1,\n            WEEK_DT) AS DAY_DT \n        FROM\n            EXT_DAYS \n        WHERE\n            DAY_DT = DATEADD(dd, DATEDIFF(dd, 96, getdate()), 0)) AS EXT_DAYS \n    RIGHT OUTER JOIN\n        EXP_PriductIdNew_13 \n            ON DAY_DT < EXP_PriductIdNew_13.START_DT\"\"\")","df_14.createOrReplaceTempView(\"LKP_EXT_DAYS_14\")"]},"id":"LKP_EXT_DAYS","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Filter","label":"FIL_Having","queries":["df_15=spark.sql(\"\"\"\n    SELECT\n        DAY_DT AS DAY_DT,\n        RoyaltyBrandId AS RoyaltyBrandId,\n        START_DT AS START_DT,\n        END_DT AS END_DT,\n        PRODUCT_ID_JOIN AS PRODUCT_ID_JOIN,\n        PRODUCT_ID AS PRODUCT_ID,\n        RoyaltyBrandDesc AS RoyaltyBrandDesc,\n        BrandCd AS BrandCd,\n        RoyaltyFormulaCd AS RoyaltyFormulaCd,\n        RoyaltyPct1 AS RoyaltyPct1,\n        FISCAL_MO AS FISCAL_MO,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        EXP_PriductIdNew_13 \n    WHERE\n        NOT ISNULL(DAY_DT)\"\"\")","df_15.createOrReplaceTempView(\"FIL_Having_15\")","df_15=spark.sql(\"\"\"\n    SELECT\n        DAY_DT AS DAY_DT,\n        RoyaltyBrandId AS RoyaltyBrandId,\n        START_DT AS START_DT,\n        END_DT AS END_DT,\n        PRODUCT_ID_JOIN AS PRODUCT_ID_JOIN,\n        PRODUCT_ID AS PRODUCT_ID,\n        RoyaltyBrandDesc AS RoyaltyBrandDesc,\n        BrandCd AS BrandCd,\n        RoyaltyFormulaCd AS RoyaltyFormulaCd,\n        RoyaltyPct1 AS RoyaltyPct1,\n        FISCAL_MO AS FISCAL_MO,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        LKP_EXT_DAYS_14 \n    WHERE\n        NOT ISNULL(DAY_DT)\"\"\")","df_15.createOrReplaceTempView(\"FIL_Having_15\")"]},"id":"FIL_Having","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Filter","label":"FIL_Having","queries":["df_15=spark.sql(\"\"\"\n    SELECT\n        DAY_DT AS DAY_DT,\n        RoyaltyBrandId AS RoyaltyBrandId,\n        START_DT AS START_DT,\n        END_DT AS END_DT,\n        PRODUCT_ID_JOIN AS PRODUCT_ID_JOIN,\n        PRODUCT_ID AS PRODUCT_ID,\n        RoyaltyBrandDesc AS RoyaltyBrandDesc,\n        BrandCd AS BrandCd,\n        RoyaltyFormulaCd AS RoyaltyFormulaCd,\n        RoyaltyPct1 AS RoyaltyPct1,\n        FISCAL_MO AS FISCAL_MO,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        EXP_PriductIdNew_13 \n    WHERE\n        NOT ISNULL(DAY_DT)\"\"\")","df_15.createOrReplaceTempView(\"FIL_Having_15\")","df_15=spark.sql(\"\"\"\n    SELECT\n        DAY_DT AS DAY_DT,\n        RoyaltyBrandId AS RoyaltyBrandId,\n        START_DT AS START_DT,\n        END_DT AS END_DT,\n        PRODUCT_ID_JOIN AS PRODUCT_ID_JOIN,\n        PRODUCT_ID AS PRODUCT_ID,\n        RoyaltyBrandDesc AS RoyaltyBrandDesc,\n        BrandCd AS BrandCd,\n        RoyaltyFormulaCd AS RoyaltyFormulaCd,\n        RoyaltyPct1 AS RoyaltyPct1,\n        FISCAL_MO AS FISCAL_MO,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        LKP_EXT_DAYS_14 \n    WHERE\n        NOT ISNULL(DAY_DT)\"\"\")","df_15.createOrReplaceTempView(\"FIL_Having_15\")"]},"id":"FIL_Having","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"MA_EVENT","queries":["df_16=spark.sql(\"\"\"\n    SELECT\n        MA_EVENT_ID AS MA_EVENT_ID,\n        OFFER_ID AS OFFER_ID,\n        SAP_DEPT_ID AS SAP_DEPT_ID,\n        PRODUCT_ID AS PRODUCT_ID,\n        COUNTRY_CD AS COUNTRY_CD,\n        START_DT AS START_DT,\n        END_DT AS END_DT,\n        MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\n        MA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\n        LOCATION_ID AS LOCATION_ID,\n        MOVEMENT_ID AS MOVEMENT_ID,\n        VALUATION_CLASS_CD AS VALUATION_CLASS_CD,\n        GL_ACCT_NBR AS GL_ACCT_NBR,\n        LOCATION_TYPE_ID AS LOCATION_TYPE_ID,\n        ROYALTY_BRAND_ID AS ROYALTY_BRAND_ID,\n        BRAND_CD AS BRAND_CD,\n        MA_FORMULA_CD AS MA_FORMULA_CD,\n        FISCAL_MO AS FISCAL_MO,\n        SAP_CATEGORY_ID AS SAP_CATEGORY_ID,\n        FROM_LOCATION_ID AS FROM_LOCATION_ID,\n        SOURCE_VENDOR_ID AS SOURCE_VENDOR_ID,\n        COMPANY_ID AS COMPANY_ID,\n        MA_EVENT_DESC AS MA_EVENT_DESC,\n        EM_VENDOR_FUNDING_ID AS EM_VENDOR_FUNDING_ID,\n        EM_COMMENT AS EM_COMMENT,\n        EM_BILL_ALT_VENDOR_FLAG AS EM_BILL_ALT_VENDOR_FLAG,\n        EM_ALT_VENDOR_ID AS EM_ALT_VENDOR_ID,\n        EM_ALT_VENDOR_NAME AS EM_ALT_VENDOR_NAME,\n        EM_ALT_VENDOR_COUNTRY_CD AS EM_ALT_VENDOR_COUNTRY_CD,\n        EM_VENDOR_ID AS EM_VENDOR_ID,\n        EM_VENDOR_NAME AS EM_VENDOR_NAME,\n        EM_VENDOR_COUNTRY_CD AS EM_VENDOR_COUNTRY_CD,\n        VENDOR_NAME_TXT AS VENDOR_NAME_TXT,\n        MA_PCT_IND AS MA_PCT_IND,\n        MA_AMT AS MA_AMT,\n        MA_MAX_AMT AS MA_MAX_AMT,\n        UPDATE_DT AS UPDATE_DT,\n        LOAD_DT AS LOAD_DT,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        MA_EVENT\"\"\")","df_16.createOrReplaceTempView(\"MA_EVENT_16\")"]},"id":"MA_EVENT","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Qualifier","label":"SQ_Shortcut_to_MA_EVENT","queries":["df_17=spark.sql(\"\"\"\n    SELECT\n        MA_EVENT_ID AS MA_EVENT_ID,\n        PRODUCT_ID AS PRODUCT_ID,\n        START_DT AS START_DT,\n        END_DT AS END_DT,\n        MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\n        ROYALTY_BRAND_ID AS ROYALTY_BRAND_ID,\n        BRAND_CD AS BRAND_CD,\n        MA_FORMULA_CD AS MA_FORMULA_CD,\n        FISCAL_MO AS FISCAL_MO,\n        MA_EVENT_DESC AS MA_EVENT_DESC,\n        MA_AMT AS MA_AMT,\n        UPDATE_DT AS UPDATE_DT,\n        LOAD_DT AS LOAD_DT,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        MA_EVENT_16\"\"\")","df_17.createOrReplaceTempView(\"SQ_Shortcut_to_MA_EVENT_17\")"]},"id":"SQ_Shortcut_to_MA_EVENT","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Filter","label":"FIL_Royalty","queries":["df_18=spark.sql(\"\"\"\n    SELECT\n        ROYALTY_BRAND_ID AS ROYALTY_BRAND_ID,\n        PRODUCT_ID AS PRODUCT_ID,\n        START_DT AS START_DT,\n        END_DT AS END_DT,\n        FISCAL_MO AS FISCAL_MO,\n        BRAND_CD AS BRAND_CD,\n        MA_FORMULA_CD AS MA_FORMULA_CD,\n        MA_EVENT_DESC AS MA_EVENT_DESC,\n        MA_AMT AS MA_AMT,\n        MA_EVENT_ID AS MA_EVENT_ID,\n        MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\n        UPDATE_DT AS UPDATE_DT,\n        LOAD_DT AS LOAD_DT,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        SQ_Shortcut_to_MA_EVENT_17 \n    WHERE\n        MA_EVENT_TYPE_ID = 10 \n        AND FISCAL_MO >= 201604\"\"\")","df_18.createOrReplaceTempView(\"FIL_Royalty_18\")"]},"id":"FIL_Royalty","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Lookup Procedure","label":"LKP_DAYS","queries":["df_19=spark.sql(\"\"\"\n    SELECT\n        WEEK_DT AS WEEK_DT,\n        FIL_Royalty_18.Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        (SELECT\n            (WEEK_DT + 1) AS WEEK_DT \n        FROM\n            DAYS \n        WHERE\n            DAY_DT = CURRENT_DATE - 96) AS DAYS \n    RIGHT OUTER JOIN\n        FIL_Royalty_18 \n            ON WEEK_DT < FIL_Royalty_18.START_DT\"\"\")","df_19.createOrReplaceTempView(\"LKP_DAYS_19\")"]},"id":"LKP_DAYS","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Filter","label":"FIL_START_DT","queries":["df_20=spark.sql(\"\"\"\n    SELECT\n        WEEK_DT AS WEEK_DT,\n        ROYALTY_BRAND_ID AS ROYALTY_BRAND_ID,\n        PRODUCT_ID AS PRODUCT_ID,\n        START_DT AS START_DT,\n        END_DT AS END_DT,\n        FISCAL_MO AS FISCAL_MO,\n        BRAND_CD AS BRAND_CD,\n        MA_FORMULA_CD AS MA_FORMULA_CD,\n        MA_EVENT_DESC AS MA_EVENT_DESC,\n        MA_AMT AS MA_AMT,\n        MA_EVENT_ID AS MA_EVENT_ID,\n        UPDATE_DT AS UPDATE_DT,\n        LOAD_DT AS LOAD_DT,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        FIL_Royalty_18 \n    WHERE\n        NOT ISNULL(WEEK_DT)\"\"\")","df_20.createOrReplaceTempView(\"FIL_START_DT_20\")","df_20=spark.sql(\"\"\"\n    SELECT\n        WEEK_DT AS WEEK_DT,\n        ROYALTY_BRAND_ID AS ROYALTY_BRAND_ID,\n        PRODUCT_ID AS PRODUCT_ID,\n        START_DT AS START_DT,\n        END_DT AS END_DT,\n        FISCAL_MO AS FISCAL_MO,\n        BRAND_CD AS BRAND_CD,\n        MA_FORMULA_CD AS MA_FORMULA_CD,\n        MA_EVENT_DESC AS MA_EVENT_DESC,\n        MA_AMT AS MA_AMT,\n        MA_EVENT_ID AS MA_EVENT_ID,\n        UPDATE_DT AS UPDATE_DT,\n        LOAD_DT AS LOAD_DT,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        LKP_DAYS_19 \n    WHERE\n        NOT ISNULL(WEEK_DT)\"\"\")","df_20.createOrReplaceTempView(\"FIL_START_DT_20\")"]},"id":"FIL_START_DT","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Filter","label":"FIL_START_DT","queries":["df_20=spark.sql(\"\"\"\n    SELECT\n        WEEK_DT AS WEEK_DT,\n        ROYALTY_BRAND_ID AS ROYALTY_BRAND_ID,\n        PRODUCT_ID AS PRODUCT_ID,\n        START_DT AS START_DT,\n        END_DT AS END_DT,\n        FISCAL_MO AS FISCAL_MO,\n        BRAND_CD AS BRAND_CD,\n        MA_FORMULA_CD AS MA_FORMULA_CD,\n        MA_EVENT_DESC AS MA_EVENT_DESC,\n        MA_AMT AS MA_AMT,\n        MA_EVENT_ID AS MA_EVENT_ID,\n        UPDATE_DT AS UPDATE_DT,\n        LOAD_DT AS LOAD_DT,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        FIL_Royalty_18 \n    WHERE\n        NOT ISNULL(WEEK_DT)\"\"\")","df_20.createOrReplaceTempView(\"FIL_START_DT_20\")","df_20=spark.sql(\"\"\"\n    SELECT\n        WEEK_DT AS WEEK_DT,\n        ROYALTY_BRAND_ID AS ROYALTY_BRAND_ID,\n        PRODUCT_ID AS PRODUCT_ID,\n        START_DT AS START_DT,\n        END_DT AS END_DT,\n        FISCAL_MO AS FISCAL_MO,\n        BRAND_CD AS BRAND_CD,\n        MA_FORMULA_CD AS MA_FORMULA_CD,\n        MA_EVENT_DESC AS MA_EVENT_DESC,\n        MA_AMT AS MA_AMT,\n        MA_EVENT_ID AS MA_EVENT_ID,\n        UPDATE_DT AS UPDATE_DT,\n        LOAD_DT AS LOAD_DT,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        LKP_DAYS_19 \n    WHERE\n        NOT ISNULL(WEEK_DT)\"\"\")","df_20.createOrReplaceTempView(\"FIL_START_DT_20\")"]},"id":"FIL_START_DT","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Expression","label":"EXP_ProductId","queries":["df_21=spark.sql(\"\"\"\n    SELECT\n        ROYALTY_BRAND_ID AS ROYALTY_BRAND_ID,\n        IFF(ISNULL(PRODUCT_ID),\n        0,\n        PRODUCT_ID) AS PRODUCT_ID_JOIN,\n        START_DT AS START_DT,\n        END_DT AS END_DT,\n        PRODUCT_ID AS PRODUCT_ID,\n        FISCAL_MO AS FISCAL_MO,\n        BRAND_CD AS BRAND_CD,\n        MA_FORMULA_CD AS MA_FORMULA_CD,\n        MA_EVENT_DESC AS MA_EVENT_DESC,\n        MA_AMT AS MA_AMT,\n        MA_EVENT_ID AS MA_EVENT_ID,\n        UPDATE_DT AS UPDATE_DT,\n        LOAD_DT AS LOAD_DT,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        FIL_START_DT_20\"\"\")","df_21.createOrReplaceTempView(\"EXP_ProductId_21\")"]},"id":"EXP_ProductId","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Joiner","label":"JNR_All","queries":["df_22=spark.sql(\"\"\"\n    SELECT\n        DETAIL.ROYALTY_BRAND_ID AS ROYALTY_BRAND_ID,\n        DETAIL.PRODUCT_ID_JOIN AS PRODUCT_ID_JOIN,\n        DETAIL.START_DT AS START_DT,\n        DETAIL.END_DT AS END_DT,\n        DETAIL.PRODUCT_ID AS PRODUCT_ID,\n        DETAIL.FISCAL_MO AS FISCAL_MO,\n        DETAIL.BRAND_CD AS BRAND_CD,\n        DETAIL.MA_FORMULA_CD AS MA_FORMULA_CD,\n        DETAIL.MA_EVENT_DESC AS MA_EVENT_DESC,\n        DETAIL.MA_AMT AS MA_AMT,\n        DETAIL.MA_EVENT_ID AS MA_EVENT_ID,\n        DETAIL.UPDATE_DT AS UPDATE_DT,\n        DETAIL.LOAD_DT AS LOAD_DT,\n        MASTER.RoyaltyBrandId AS ROYALTY_BRAND_ID_MTX,\n        MASTER.PRODUCT_ID_JOIN AS PRODUCT_ID_JOIN_MTX,\n        MASTER.START_DT AS START_DT_MTX,\n        MASTER.END_DT AS END_DT_MTX,\n        MASTER.PRODUCT_ID AS PRODUCT_ID_MTX,\n        MASTER.FISCAL_MO AS FISCAL_MO_MTX,\n        MASTER.BrandCd AS BRAND_CD_MTX,\n        MASTER.RoyaltyFormulaCd AS MA_FORMULA_CD_MTX,\n        MASTER.RoyaltyBrandDesc AS MA_EVENT_DESC_MTX,\n        MASTER.RoyaltyPct1 AS MA_AMT_MTX,\n        MASTER.Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        FIL_Having_15 MASTER \n    LEFT JOIN\n        EXP_ProductId_21 DETAIL \n            ON MASTER.RoyaltyBrandId = ROYALTY_BRAND_ID \n            AND PRODUCT_ID_JOIN_MTX = PRODUCT_ID_JOIN \n            AND START_DT_MTX = START_DT \n            AND END_DT_MTX = DETAIL.END_DT\"\"\")","df_22.createOrReplaceTempView(\"JNR_All_22\")"]},"id":"JNR_All","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Joiner","label":"JNR_All","queries":["df_22=spark.sql(\"\"\"\n    SELECT\n        DETAIL.ROYALTY_BRAND_ID AS ROYALTY_BRAND_ID,\n        DETAIL.PRODUCT_ID_JOIN AS PRODUCT_ID_JOIN,\n        DETAIL.START_DT AS START_DT,\n        DETAIL.END_DT AS END_DT,\n        DETAIL.PRODUCT_ID AS PRODUCT_ID,\n        DETAIL.FISCAL_MO AS FISCAL_MO,\n        DETAIL.BRAND_CD AS BRAND_CD,\n        DETAIL.MA_FORMULA_CD AS MA_FORMULA_CD,\n        DETAIL.MA_EVENT_DESC AS MA_EVENT_DESC,\n        DETAIL.MA_AMT AS MA_AMT,\n        DETAIL.MA_EVENT_ID AS MA_EVENT_ID,\n        DETAIL.UPDATE_DT AS UPDATE_DT,\n        DETAIL.LOAD_DT AS LOAD_DT,\n        MASTER.RoyaltyBrandId AS ROYALTY_BRAND_ID_MTX,\n        MASTER.PRODUCT_ID_JOIN AS PRODUCT_ID_JOIN_MTX,\n        MASTER.START_DT AS START_DT_MTX,\n        MASTER.END_DT AS END_DT_MTX,\n        MASTER.PRODUCT_ID AS PRODUCT_ID_MTX,\n        MASTER.FISCAL_MO AS FISCAL_MO_MTX,\n        MASTER.BrandCd AS BRAND_CD_MTX,\n        MASTER.RoyaltyFormulaCd AS MA_FORMULA_CD_MTX,\n        MASTER.RoyaltyBrandDesc AS MA_EVENT_DESC_MTX,\n        MASTER.RoyaltyPct1 AS MA_AMT_MTX,\n        MASTER.Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        FIL_Having_15 MASTER \n    LEFT JOIN\n        EXP_ProductId_21 DETAIL \n            ON MASTER.RoyaltyBrandId = ROYALTY_BRAND_ID \n            AND PRODUCT_ID_JOIN_MTX = PRODUCT_ID_JOIN \n            AND START_DT_MTX = START_DT \n            AND END_DT_MTX = DETAIL.END_DT\"\"\")","df_22.createOrReplaceTempView(\"JNR_All_22\")"]},"id":"JNR_All","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Expression","label":"EXP_Strategy","queries":["df_23=spark.sql(\"\"\"\n    SELECT\n        (ROW_NUMBER() OVER (\n    ORDER BY\n        (SELECT\n            NULL)) - 1) * (SELECT\n            Increment_By \n        FROM\n            SEQ_MA_EVENT_ID) + (SELECT\n            NEXTVAL \n        FROM\n            SEQ_MA_EVENT_ID) AS in_MA_EVENT_ID,\n        IFF(ISNULL(MA_EVENT_ID),\n        NEXTVAL,\n        MA_EVENT_ID) AS MA_EVENT_ID,\n        JNR_All_22.PRODUCT_ID_MTX AS PRODUCT_ID,\n        IFF(ISNULL(START_DT),\n        JNR_All_22.START_DT_MTX,\n        START_DT) AS START_DT,\n        IFF(ISNULL(END_DT),\n        JNR_All_22.END_DT_MTX,\n        END_DT) AS END_DT,\n        10 AS MA_EVENT_TYPE_ID,\n        9 AS MA_EVENT_SOURCE_ID,\n        IFF(ISNULL(ROYALTY_BRAND_ID),\n        JNR_All_22.ROYALTY_BRAND_ID_MTX,\n        ROYALTY_BRAND_ID) AS ROYALTY_BRAND_ID,\n        JNR_All_22.BRAND_CD_MTX AS BRAND_CD,\n        JNR_All_22.MA_FORMULA_CD_MTX AS MA_FORMULA_CD,\n        IFF(ISNULL(FISCAL_MO),\n        JNR_All_22.FISCAL_MO_MTX,\n        FISCAL_MO) AS FISCAL_MO,\n        JNR_All_22.MA_EVENT_DESC_MTX AS MA_EVENT_DESC,\n        1 AS MA_PCT_IND,\n        JNR_All_22.MA_AMT_MTX AS MA_AMT,\n        IFF(ISNULL(UPDATE_DT),\n        current_timestamp,\n        UPDATE_DT) AS UPDATE_DT,\n        date_trunc('DAY',\n        current_timestamp) AS LOAD_DT,\n        DECODE(TRUE,\n        ISNULL(MA_EVENT_ID),\n        'I',\n        ISNULL(JNR_All_22.ROYALTY_BRAND_ID_MTX),\n        'D',\n        IFF(ISNULL(BRAND_CD),\n        'zzz ',\n        BRAND_CD) <> IFF(ISNULL(JNR_All_22.BRAND_CD_MTX),\n        'zzz ',\n        JNR_All_22.BRAND_CD_MTX) \n        OR IFF(ISNULL(MA_FORMULA_CD),\n        'zzz ',\n        MA_FORMULA_CD) <> IFF(ISNULL(JNR_All_22.MA_FORMULA_CD_MTX),\n        'zzz ',\n        JNR_All_22.MA_FORMULA_CD_MTX) \n        OR IFF(ISNULL(MA_AMT),\n        -1,\n        MA_AMT) <> IFF(ISNULL(JNR_All_22.MA_AMT_MTX),\n        -1,\n        JNR_All_22.MA_AMT_MTX),\n        'U',\n        IFF(ISNULL(MA_EVENT_DESC),\n        'zzz ',\n        MA_EVENT_DESC) <> IFF(ISNULL(JNR_All_22.MA_EVENT_DESC_MTX),\n        'zzz ',\n        JNR_All_22.MA_EVENT_DESC_MTX),\n        'C',\n        'N') AS LOAD_FLAG,\n        SEQ_MA_EVENT_ID.Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        SEQ_MA_EVENT_ID \n    INNER JOIN\n        JNR_All_22 \n            ON SEQ_MA_EVENT_ID.Monotonically_Increasing_Id = JNR_All_22.Monotonically_Increasing_Id\"\"\")","df_23.createOrReplaceTempView(\"EXP_Strategy_23\")","spark.sql(\"\"\"UPDATE SEQ_MA_EVENT_ID SET CURRVAL = (SELECT MAX(in_MA_EVENT_ID) FROM EXP_Strategy_23) , NEXTVAL = (SELECT MAX(in_MA_EVENT_ID) FROM EXP_Strategy_23) + (SELECT Increment_By FROM EXP_Strategy_23)\"\"\")"]},"id":"EXP_Strategy","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Expression","label":"EXP_Strategy","queries":["df_23=spark.sql(\"\"\"\n    SELECT\n        (ROW_NUMBER() OVER (\n    ORDER BY\n        (SELECT\n            NULL)) - 1) * (SELECT\n            Increment_By \n        FROM\n            SEQ_MA_EVENT_ID) + (SELECT\n            NEXTVAL \n        FROM\n            SEQ_MA_EVENT_ID) AS in_MA_EVENT_ID,\n        IFF(ISNULL(MA_EVENT_ID),\n        NEXTVAL,\n        MA_EVENT_ID) AS MA_EVENT_ID,\n        JNR_All_22.PRODUCT_ID_MTX AS PRODUCT_ID,\n        IFF(ISNULL(START_DT),\n        JNR_All_22.START_DT_MTX,\n        START_DT) AS START_DT,\n        IFF(ISNULL(END_DT),\n        JNR_All_22.END_DT_MTX,\n        END_DT) AS END_DT,\n        10 AS MA_EVENT_TYPE_ID,\n        9 AS MA_EVENT_SOURCE_ID,\n        IFF(ISNULL(ROYALTY_BRAND_ID),\n        JNR_All_22.ROYALTY_BRAND_ID_MTX,\n        ROYALTY_BRAND_ID) AS ROYALTY_BRAND_ID,\n        JNR_All_22.BRAND_CD_MTX AS BRAND_CD,\n        JNR_All_22.MA_FORMULA_CD_MTX AS MA_FORMULA_CD,\n        IFF(ISNULL(FISCAL_MO),\n        JNR_All_22.FISCAL_MO_MTX,\n        FISCAL_MO) AS FISCAL_MO,\n        JNR_All_22.MA_EVENT_DESC_MTX AS MA_EVENT_DESC,\n        1 AS MA_PCT_IND,\n        JNR_All_22.MA_AMT_MTX AS MA_AMT,\n        IFF(ISNULL(UPDATE_DT),\n        current_timestamp,\n        UPDATE_DT) AS UPDATE_DT,\n        date_trunc('DAY',\n        current_timestamp) AS LOAD_DT,\n        DECODE(TRUE,\n        ISNULL(MA_EVENT_ID),\n        'I',\n        ISNULL(JNR_All_22.ROYALTY_BRAND_ID_MTX),\n        'D',\n        IFF(ISNULL(BRAND_CD),\n        'zzz ',\n        BRAND_CD) <> IFF(ISNULL(JNR_All_22.BRAND_CD_MTX),\n        'zzz ',\n        JNR_All_22.BRAND_CD_MTX) \n        OR IFF(ISNULL(MA_FORMULA_CD),\n        'zzz ',\n        MA_FORMULA_CD) <> IFF(ISNULL(JNR_All_22.MA_FORMULA_CD_MTX),\n        'zzz ',\n        JNR_All_22.MA_FORMULA_CD_MTX) \n        OR IFF(ISNULL(MA_AMT),\n        -1,\n        MA_AMT) <> IFF(ISNULL(JNR_All_22.MA_AMT_MTX),\n        -1,\n        JNR_All_22.MA_AMT_MTX),\n        'U',\n        IFF(ISNULL(MA_EVENT_DESC),\n        'zzz ',\n        MA_EVENT_DESC) <> IFF(ISNULL(JNR_All_22.MA_EVENT_DESC_MTX),\n        'zzz ',\n        JNR_All_22.MA_EVENT_DESC_MTX),\n        'C',\n        'N') AS LOAD_FLAG,\n        SEQ_MA_EVENT_ID.Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        SEQ_MA_EVENT_ID \n    INNER JOIN\n        JNR_All_22 \n            ON SEQ_MA_EVENT_ID.Monotonically_Increasing_Id = JNR_All_22.Monotonically_Increasing_Id\"\"\")","df_23.createOrReplaceTempView(\"EXP_Strategy_23\")","spark.sql(\"\"\"UPDATE SEQ_MA_EVENT_ID SET CURRVAL = (SELECT MAX(in_MA_EVENT_ID) FROM EXP_Strategy_23) , NEXTVAL = (SELECT MAX(in_MA_EVENT_ID) FROM EXP_Strategy_23) + (SELECT Increment_By FROM EXP_Strategy_23)\"\"\")"]},"id":"EXP_Strategy","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Filter","label":"FIL_LoadFlag","queries":["df_24=spark.sql(\"\"\"\n    SELECT\n        MA_EVENT_ID AS MA_EVENT_ID,\n        PRODUCT_ID AS PRODUCT_ID,\n        START_DT AS START_DT,\n        END_DT AS END_DT,\n        MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\n        MA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\n        ROYALTY_BRAND_ID AS ROYALTY_BRAND_ID,\n        BRAND_CD AS BRAND_CD,\n        MA_FORMULA_CD AS MA_FORMULA_CD,\n        FISCAL_MO AS FISCAL_MO,\n        MA_EVENT_DESC AS MA_EVENT_DESC,\n        MA_PCT_IND AS MA_PCT_IND,\n        MA_AMT AS MA_AMT,\n        UPDATE_DT AS UPDATE_DT,\n        LOAD_DT AS LOAD_DT,\n        LOAD_FLAG AS LOAD_FLAG,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        EXP_Strategy_23 \n    WHERE\n        LOAD_FLAG <> 'N'\"\"\")","df_24.createOrReplaceTempView(\"FIL_LoadFlag_24\")"]},"id":"FIL_LoadFlag","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Update Strategy","label":"UPD_InsertDeleteUpdate","queries":["df_25=spark.sql(\"\"\"\n    SELECT\n        MA_EVENT_ID AS MA_EVENT_ID,\n        PRODUCT_ID AS PRODUCT_ID,\n        START_DT AS START_DT,\n        END_DT AS END_DT,\n        MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\n        MA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\n        ROYALTY_BRAND_ID AS ROYALTY_BRAND_ID,\n        BRAND_CD AS BRAND_CD,\n        MA_FORMULA_CD AS MA_FORMULA_CD,\n        FISCAL_MO AS FISCAL_MO,\n        MA_EVENT_DESC AS MA_EVENT_DESC,\n        MA_PCT_IND AS MA_PCT_IND,\n        MA_AMT AS MA_AMT,\n        UPDATE_DT AS UPDATE_DT,\n        LOAD_DT AS LOAD_DT,\n        LOAD_FLAG AS Load_Flag,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        FIL_LoadFlag_24\"\"\")","df_25.createOrReplaceTempView(\"UPD_InsertDeleteUpdate_25\")"]},"id":"UPD_InsertDeleteUpdate","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Filter","label":"FIL_Restate_Hist","queries":["df_26=spark.sql(\"\"\"\n    SELECT\n        MA_EVENT_ID AS MA_EVENT_ID,\n        PRODUCT_ID AS PRODUCT_ID,\n        START_DT AS START_DT,\n        END_DT AS END_DT,\n        MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\n        MA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\n        ROYALTY_BRAND_ID AS ROYALTY_BRAND_ID,\n        BRAND_CD AS BRAND_CD,\n        MA_FORMULA_CD AS MA_FORMULA_CD,\n        FISCAL_MO AS FISCAL_MO,\n        MA_EVENT_DESC AS MA_EVENT_DESC,\n        MA_PCT_IND AS MA_PCT_IND,\n        MA_AMT AS MA_AMT,\n        Load_Flag AS Load_Flag,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        EXP_Strategy_23 \n    WHERE\n        Load_Flag <> 'N'\"\"\")","df_26.createOrReplaceTempView(\"FIL_Restate_Hist_26\")"]},"id":"FIL_Restate_Hist","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Expression","label":"EXP_Load_Flag","queries":["df_27=spark.sql(\"\"\"\n    SELECT\n        date_trunc('DAY',\n        current_timestamp) AS LOAD_DT,\n        MA_EVENT_ID AS MA_EVENT_ID,\n        PRODUCT_ID AS PRODUCT_ID,\n        START_DT AS START_DT,\n        END_DT AS END_DT,\n        MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\n        MA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\n        ROYALTY_BRAND_ID AS ROYALTY_BRAND_ID,\n        BRAND_CD AS BRAND_CD,\n        MA_FORMULA_CD AS MA_FORMULA_CD,\n        FISCAL_MO AS FISCAL_MO,\n        MA_EVENT_DESC AS MA_EVENT_DESC,\n        MA_PCT_IND AS MA_PCT_IND,\n        MA_AMT AS MA_AMT,\n        INS_UPD_DEL_FLAG AS INS_UPD_DEL_FLAG,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        FIL_Restate_Hist_26\"\"\")","df_27.createOrReplaceTempView(\"EXP_Load_Flag_27\")"]},"id":"EXP_Load_Flag","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Update Strategy","label":"UPD_InsertOnly","queries":["df_28=spark.sql(\"\"\"\n    SELECT\n        LOAD_DT AS LOAD_DT,\n        MA_EVENT_ID AS MA_EVENT_ID,\n        PRODUCT_ID AS PRODUCT_ID,\n        START_DT AS START_DT,\n        END_DT AS END_DT,\n        MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\n        MA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\n        ROYALTY_BRAND_ID AS ROYALTY_BRAND_ID,\n        BRAND_CD AS BRAND_CD,\n        MA_FORMULA_CD AS MA_FORMULA_CD,\n        FISCAL_MO AS FISCAL_MO,\n        MA_EVENT_DESC AS MA_EVENT_DESC,\n        MA_PCT_IND AS MA_PCT_IND,\n        MA_AMT AS MA_AMT,\n        INS_UPD_DEL_FLAG AS INS_UPD_DEL_FLAG,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        EXP_Load_Flag_27\"\"\")","df_28.createOrReplaceTempView(\"UPD_InsertOnly_28\")"]},"id":"UPD_InsertOnly","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Target Definition","label":"MA_EVENT","queries":["spark.sql(\"\"\"INSERT INTO MA_EVENT SELECT MA_EVENT_ID AS MA_EVENT_ID,\nOFFER_ID AS OFFER_ID,\nSAP_DEPT_ID AS SAP_DEPT_ID,\nPRODUCT_ID AS PRODUCT_ID,\nCOUNTRY_CD AS COUNTRY_CD,\nSTART_DT AS START_DT,\nEND_DT AS END_DT,\nMA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\nMA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\nLOCATION_ID AS LOCATION_ID,\nMOVEMENT_ID AS MOVEMENT_ID,\nVALUATION_CLASS_CD AS VALUATION_CLASS_CD,\nGL_ACCT_NBR AS GL_ACCT_NBR,\nLOCATION_TYPE_ID AS LOCATION_TYPE_ID,\nROYALTY_BRAND_ID AS ROYALTY_BRAND_ID,\nBRAND_CD AS BRAND_CD,\nMA_FORMULA_CD AS MA_FORMULA_CD,\nFISCAL_MO AS FISCAL_MO,\nSAP_CATEGORY_ID AS SAP_CATEGORY_ID,\nFROM_LOCATION_ID AS FROM_LOCATION_ID,\nSOURCE_VENDOR_ID AS SOURCE_VENDOR_ID,\nCOMPANY_ID AS COMPANY_ID,\nMA_EVENT_DESC AS MA_EVENT_DESC,\nEM_VENDOR_FUNDING_ID AS EM_VENDOR_FUNDING_ID,\nEM_COMMENT AS EM_COMMENT,\nEM_BILL_ALT_VENDOR_FLAG AS EM_BILL_ALT_VENDOR_FLAG,\nEM_ALT_VENDOR_ID AS EM_ALT_VENDOR_ID,\nEM_ALT_VENDOR_NAME AS EM_ALT_VENDOR_NAME,\nEM_ALT_VENDOR_COUNTRY_CD AS EM_ALT_VENDOR_COUNTRY_CD,\nEM_VENDOR_ID AS EM_VENDOR_ID,\nEM_VENDOR_NAME AS EM_VENDOR_NAME,\nEM_VENDOR_COUNTRY_CD AS EM_VENDOR_COUNTRY_CD,\nVENDOR_NAME_TXT AS VENDOR_NAME_TXT,\nMA_PCT_IND AS MA_PCT_IND,\nNEW_MA_AMT AS MA_AMT,\nMA_MAX_AMT AS MA_MAX_AMT,\nUPDATE_DT AS UPDATE_DT,\nLOAD_DT AS LOAD_DT FROM UPD_InsertDeleteUpdate_25\"\"\")"]},"id":"MA_EVENT","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Target Definition","label":"MA_EVENT_RESTATE_HIST","queries":["spark.sql(\"\"\"INSERT INTO MA_EVENT_RESTATE_HIST SELECT LOAD_DT AS LOAD_DT,\nMA_EVENT_ID AS MA_EVENT_ID,\nOFFER_ID AS OFFER_ID,\nSAP_DEPT_ID AS SAP_DEPT_ID,\nPRODUCT_ID AS PRODUCT_ID,\nCOUNTRY_CD AS COUNTRY_CD,\nSTART_DT AS START_DT,\nEND_DT AS END_DT,\nMA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\nMA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\nLOCATION_ID AS LOCATION_ID,\nMOVEMENT_ID AS MOVEMENT_ID,\nVALUATION_CLASS_CD AS VALUATION_CLASS_CD,\nGL_ACCT_NBR AS GL_ACCT_NBR,\nLOCATION_TYPE_ID AS LOCATION_TYPE_ID,\nROYALTY_BRAND_ID AS ROYALTY_BRAND_ID,\nBRAND_CD AS BRAND_CD,\nMA_FORMULA_CD AS MA_FORMULA_CD,\nFISCAL_MO AS FISCAL_MO,\nSAP_CATEGORY_ID AS SAP_CATEGORY_ID,\nFROM_LOCATION_ID AS FROM_LOCATION_ID,\nSOURCE_VENDOR_ID AS SOURCE_VENDOR_ID,\nCOMPANY_ID AS COMPANY_ID,\nMA_EVENT_DESC AS MA_EVENT_DESC,\nEM_VENDOR_FUNDING_ID AS EM_VENDOR_FUNDING_ID,\nEM_COMMENT AS EM_COMMENT,\nEM_BILL_ALT_VENDOR_FLAG AS EM_BILL_ALT_VENDOR_FLAG,\nEM_ALT_VENDOR_ID AS EM_ALT_VENDOR_ID,\nEM_ALT_VENDOR_NAME AS EM_ALT_VENDOR_NAME,\nEM_ALT_VENDOR_COUNTRY_CD AS EM_ALT_VENDOR_COUNTRY_CD,\nEM_VENDOR_ID AS EM_VENDOR_ID,\nEM_VENDOR_NAME AS EM_VENDOR_NAME,\nEM_VENDOR_COUNTRY_CD AS EM_VENDOR_COUNTRY_CD,\nVENDOR_NAME_TXT AS VENDOR_NAME_TXT,\nMA_PCT_IND AS MA_PCT_IND,\nORIG_MA_AMT AS MA_AMT,\nMA_MAX_AMT AS MA_MAX_AMT,\nINS_UPD_DEL_FLAG AS INS_UPD_DEL_FLAG FROM UPD_InsertOnly_28\"\"\")"]},"id":"MA_EVENT_RESTATE_HIST","position":{"x":0,"y":0},"type":"normalNode"}]}