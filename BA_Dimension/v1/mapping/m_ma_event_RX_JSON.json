{"Edges":[{"transformationType":"Sequence","id":"e-0","source":"","target":"SEQ_MA_EVENT_ID"},{"transformationType":"Source Definition","id":"e-1","source":"","target":"MA_EVENT_SOURCE"},{"transformationType":"Source Definition","id":"e-2","source":"","target":"MA_EVENT"},{"transformationType":"Source Qualifier","id":"e-3","source":"MA_EVENT","target":"ASQ_MA_EVENT_NEW"},{"transformationType":"Expression","id":"e-4","source":"SEQ_MA_EVENT_ID","target":"EXP_NEW"},{"transformationType":"Expression","id":"e-5","source":"ASQ_MA_EVENT_NEW","target":"EXP_NEW"},{"transformationType":"Source Qualifier","id":"e-6","source":"MA_EVENT","target":"ASQ_MA_EVENT_EXISTING"},{"transformationType":"Custom Transformation","id":"e-7","source":"ASQ_MA_EVENT_EXISTING","target":"UNI_RX"},{"transformationType":"Custom Transformation","id":"e-8","source":"EXP_NEW","target":"UNI_RX"},{"transformationType":"Update Strategy","id":"e-9","source":"UNI_RX","target":"UPD_MA_EVENT"},{"transformationType":"Source Definition","id":"e-10","source":"","target":"COUNTRY"},{"transformationType":"Source Definition","id":"e-11","source":"","target":"SKU_PROFILE"},{"transformationType":"Target Definition","id":"e-12","source":"UPD_MA_EVENT","target":"MA_EVENT"}],"Nodes":[{"data":{"transformationType":"Sequence","label":"SEQ_MA_EVENT_ID","queries":["spark.sql(\"\"\"CREATE TABLE SEQ_MA_EVENT_ID(NEXTVAL BIGINT,\nCURRVAL BIGINT,\nIncrement_By Int);\"\"\")","spark.sql(\"\"\"INSERT INTO SEQ_MA_EVENT_ID(NEXTVAL BIGINT,\nCURRVAL BIGINT,\nIncrement_By Int) VALUES(2, 1, 1)\"\"\")"]},"id":"SEQ_MA_EVENT_ID","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"MA_EVENT_SOURCE","queries":["df_1=spark.sql(\"\"\"\n    SELECT\n        MA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\n        MA_EVENT_SOURCE_DESC AS MA_EVENT_SOURCE_DESC,\n        TARGET_TABLE AS TARGET_TABLE,\n        UPDATE_DT AS UPDATE_DT,\n        LOAD_DT AS LOAD_DT,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        MA_EVENT_SOURCE\"\"\")","df_1.createOrReplaceTempView(\"MA_EVENT_SOURCE_1\")"]},"id":"MA_EVENT_SOURCE","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"MA_EVENT","queries":["df_2=spark.sql(\"\"\"\n    SELECT\n        MA_EVENT_ID AS MA_EVENT_ID,\n        OFFER_ID AS OFFER_ID,\n        SAP_DEPT_ID AS SAP_DEPT_ID,\n        PRODUCT_ID AS PRODUCT_ID,\n        COUNTRY_CD AS COUNTRY_CD,\n        START_DT AS START_DT,\n        END_DT AS END_DT,\n        MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\n        MA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\n        LOCATION_ID AS LOCATION_ID,\n        MOVEMENT_ID AS MOVEMENT_ID,\n        VALUATION_CLASS_CD AS VALUATION_CLASS_CD,\n        GL_ACCT_NBR AS GL_ACCT_NBR,\n        LOCATION_TYPE_ID AS LOCATION_TYPE_ID,\n        ROYALTY_BRAND_ID AS ROYALTY_BRAND_ID,\n        BRAND_CD AS BRAND_CD,\n        MA_FORMULA_CD AS MA_FORMULA_CD,\n        FISCAL_MO AS FISCAL_MO,\n        SAP_CATEGORY_ID AS SAP_CATEGORY_ID,\n        FROM_LOCATION_ID AS FROM_LOCATION_ID,\n        SOURCE_VENDOR_ID AS SOURCE_VENDOR_ID,\n        COMPANY_ID AS COMPANY_ID,\n        MA_EVENT_DESC AS MA_EVENT_DESC,\n        EM_VENDOR_FUNDING_ID AS EM_VENDOR_FUNDING_ID,\n        EM_COMMENT AS EM_COMMENT,\n        EM_BILL_ALT_VENDOR_FLAG AS EM_BILL_ALT_VENDOR_FLAG,\n        EM_ALT_VENDOR_ID AS EM_ALT_VENDOR_ID,\n        EM_ALT_VENDOR_NAME AS EM_ALT_VENDOR_NAME,\n        EM_ALT_VENDOR_COUNTRY_CD AS EM_ALT_VENDOR_COUNTRY_CD,\n        EM_VENDOR_ID AS EM_VENDOR_ID,\n        EM_VENDOR_NAME AS EM_VENDOR_NAME,\n        EM_VENDOR_COUNTRY_CD AS EM_VENDOR_COUNTRY_CD,\n        VENDOR_NAME_TXT AS VENDOR_NAME_TXT,\n        MA_PCT_IND AS MA_PCT_IND,\n        MA_AMT AS MA_AMT,\n        MA_MAX_AMT AS MA_MAX_AMT,\n        UPDATE_DT AS UPDATE_DT,\n        LOAD_DT AS LOAD_DT,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        MA_EVENT\"\"\")","df_2.createOrReplaceTempView(\"MA_EVENT_2\")"]},"id":"MA_EVENT","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Qualifier","label":"ASQ_MA_EVENT_NEW","queries":["df_3=spark.sql(\"\"\"\n    SELECT\n        sp.product_id,\n        c.country_cd,\n        CURRENT_DATE - 1 start_dt,\n        TO_DATE('12/31/9999',\n        'mm/dd/yyyy') end_dt,\n        1 ma_event_type_id,\n        mes.ma_event_source_id,\n        mes.ma_event_source_desc || ' - SKU=' || CAST(sp.sku_nbr AS CHARACTER (7)) || ' - Country=' || c.country_cd ma_event_desc,\n        -.25 ma_amt,\n        CURRENT_DATE update_dt,\n        CURRENT_DATE load_dt,\n        'I' ins_upd_flag \n    FROM\n        sku_profile sp,\n        country c,\n        (SELECT\n            * \n        FROM\n            ma_event_source \n        WHERE\n            ma_event_source_id IN (\n                4, 5\n            )) mes \n    WHERE\n        sp.sap_dept_id IN (\n            3117, 3007, 18, 28\n        ) \n        AND c.country_cd IN (\n            'CA', 'US'\n        ) \n        AND (\n            sp.product_id, c.country_cd, mes.ma_event_source_id\n        ) NOT IN (\n            SELECT\n                e.product_id,\n                e.country_cd,\n                e.ma_event_source_id \n            FROM\n                ma_event e \n            WHERE\n                e.ma_event_source_id IN (\n                    4, 5\n                ) \n                AND e.ma_event_type_id = 1 \n                AND e.end_dt = TO_DATE('12/31/9999', 'mm/dd/yyyy')\n        )\"\"\")","df_3.createOrReplaceTempView(\"ASQ_MA_EVENT_NEW_3\")"]},"id":"ASQ_MA_EVENT_NEW","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Expression","label":"EXP_NEW","queries":["df_4=spark.sql(\"\"\"\n    SELECT\n        (ROW_NUMBER() OVER (\n    ORDER BY\n        (SELECT\n            NULL)) - 1) * (SELECT\n            Increment_By \n        FROM\n            SEQ_MA_EVENT_ID) + (SELECT\n            NEXTVAL \n        FROM\n            SEQ_MA_EVENT_ID) AS MA_EVENT_ID,\n        SEQ_MA_EVENT_ID.NEXTVAL AS MA_EVENT_ID,\n        ASQ_MA_EVENT_NEW_3.PRODUCT_ID AS PRODUCT_ID,\n        ASQ_MA_EVENT_NEW_3.COUNTRY_CD AS COUNTRY_CD,\n        ASQ_MA_EVENT_NEW_3.START_DT AS START_DT,\n        ASQ_MA_EVENT_NEW_3.END_DT AS END_DT,\n        ASQ_MA_EVENT_NEW_3.MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\n        ASQ_MA_EVENT_NEW_3.MA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\n        ASQ_MA_EVENT_NEW_3.MA_EVENT_DESC AS MA_EVENT_DESC,\n        ASQ_MA_EVENT_NEW_3.MA_AMT AS MA_AMT,\n        ASQ_MA_EVENT_NEW_3.UPDATE_DT AS UPDATE_DT,\n        ASQ_MA_EVENT_NEW_3.LOAD_DT AS LOAD_DT,\n        ASQ_MA_EVENT_NEW_3.INS_UPD_FLAG AS INS_UPD_FLAG,\n        SEQ_MA_EVENT_ID.Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        SEQ_MA_EVENT_ID \n    INNER JOIN\n        ASQ_MA_EVENT_NEW_3 \n            ON SEQ_MA_EVENT_ID.Monotonically_Increasing_Id = ASQ_MA_EVENT_NEW_3.Monotonically_Increasing_Id\"\"\")","df_4.createOrReplaceTempView(\"EXP_NEW_4\")","spark.sql(\"\"\"UPDATE SEQ_MA_EVENT_ID SET CURRVAL = (SELECT MAX(MA_EVENT_ID) FROM EXP_NEW_4) , NEXTVAL = (SELECT MAX(MA_EVENT_ID) FROM EXP_NEW_4) + (SELECT Increment_By FROM EXP_NEW_4)\"\"\")"]},"id":"EXP_NEW","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Expression","label":"EXP_NEW","queries":["df_4=spark.sql(\"\"\"\n    SELECT\n        (ROW_NUMBER() OVER (\n    ORDER BY\n        (SELECT\n            NULL)) - 1) * (SELECT\n            Increment_By \n        FROM\n            SEQ_MA_EVENT_ID) + (SELECT\n            NEXTVAL \n        FROM\n            SEQ_MA_EVENT_ID) AS MA_EVENT_ID,\n        SEQ_MA_EVENT_ID.NEXTVAL AS MA_EVENT_ID,\n        ASQ_MA_EVENT_NEW_3.PRODUCT_ID AS PRODUCT_ID,\n        ASQ_MA_EVENT_NEW_3.COUNTRY_CD AS COUNTRY_CD,\n        ASQ_MA_EVENT_NEW_3.START_DT AS START_DT,\n        ASQ_MA_EVENT_NEW_3.END_DT AS END_DT,\n        ASQ_MA_EVENT_NEW_3.MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\n        ASQ_MA_EVENT_NEW_3.MA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\n        ASQ_MA_EVENT_NEW_3.MA_EVENT_DESC AS MA_EVENT_DESC,\n        ASQ_MA_EVENT_NEW_3.MA_AMT AS MA_AMT,\n        ASQ_MA_EVENT_NEW_3.UPDATE_DT AS UPDATE_DT,\n        ASQ_MA_EVENT_NEW_3.LOAD_DT AS LOAD_DT,\n        ASQ_MA_EVENT_NEW_3.INS_UPD_FLAG AS INS_UPD_FLAG,\n        SEQ_MA_EVENT_ID.Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        SEQ_MA_EVENT_ID \n    INNER JOIN\n        ASQ_MA_EVENT_NEW_3 \n            ON SEQ_MA_EVENT_ID.Monotonically_Increasing_Id = ASQ_MA_EVENT_NEW_3.Monotonically_Increasing_Id\"\"\")","df_4.createOrReplaceTempView(\"EXP_NEW_4\")","spark.sql(\"\"\"UPDATE SEQ_MA_EVENT_ID SET CURRVAL = (SELECT MAX(MA_EVENT_ID) FROM EXP_NEW_4) , NEXTVAL = (SELECT MAX(MA_EVENT_ID) FROM EXP_NEW_4) + (SELECT Increment_By FROM EXP_NEW_4)\"\"\")"]},"id":"EXP_NEW","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Qualifier","label":"ASQ_MA_EVENT_EXISTING","queries":["df_5=spark.sql(\"\"\"\n    SELECT\n        e.ma_event_id,\n        e.product_id,\n        e.country_cd,\n        e.start_dt,\n        CURRENT_DATE - 1 end_dt,\n        e.ma_event_type_id,\n        e.ma_event_source_id,\n        e.ma_event_desc,\n        e.ma_amt,\n        CURRENT_DATE update_dt,\n        e.load_dt,\n        'U' ins_upd_flag \n    FROM\n        ma_event e \n    WHERE\n        e.ma_event_source_id IN (\n            4, 5\n        ) \n        AND e.ma_event_type_id = 1 \n        AND e.end_dt = TO_DATE('12/31/9999', 'mm/dd/yyyy') \n        AND (\n            product_id, country_cd, ma_event_source_id\n        ) NOT IN (\n            SELECT\n                product_id,\n                c.country_cd,\n                mes.ma_event_source_id \n            FROM\n                sku_profile sp,\n                country c,\n                (SELECT\n                    * \n                FROM\n                    ma_event_source \n                WHERE\n                    ma_event_source_id IN (\n                        4, 5\n                    )) mes \n            WHERE\n                sp.sap_dept_id IN (\n                    3117, 3007, 18, 28\n                ) \n                AND c.country_cd IN (\n                    'CA', 'US'\n                )\n            )\"\"\")","df_5.createOrReplaceTempView(\"ASQ_MA_EVENT_EXISTING_5\")"]},"id":"ASQ_MA_EVENT_EXISTING","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Custom Transformation","label":"UNI_RX","queries":["df_6=spark.sql(\"\"\"SELECT COUNTRY_CD AS COUNTRY_CD,\nEND_DT AS END_DT,\nINS_UPD_FLAG AS INS_UPD_FLAG,\nLOAD_DT AS LOAD_DT,\nMA_AMT AS MA_AMT,\nMA_EVENT_DESC AS MA_EVENT_DESC,\nMA_EVENT_ID AS MA_EVENT_ID,\nMA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\nMA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\nMonotonically_Increasing_Id AS Monotonically_Increasing_Id,\nPRODUCT_ID AS PRODUCT_ID,\nSTART_DT AS START_DT,\nUPDATE_DT AS UPDATE_DT FROM ASQ_MA_EVENT_EXISTING_5 UNION ALL SELECT COUNTRY_CD AS COUNTRY_CD,\nEND_DT AS END_DT,\nINS_UPD_FLAG AS INS_UPD_FLAG,\nLOAD_DT AS LOAD_DT,\nMA_AMT AS MA_AMT,\nMA_EVENT_DESC AS MA_EVENT_DESC,\nMA_EVENT_ID AS MA_EVENT_ID,\nMA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\nMA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\nMonotonically_Increasing_Id AS Monotonically_Increasing_Id,\nPRODUCT_ID AS PRODUCT_ID,\nSTART_DT AS START_DT,\nUPDATE_DT AS UPDATE_DT FROM EXP_NEW_4\"\"\")","df_6.createOrReplaceTempView(\"UNI_RX_6\")"]},"id":"UNI_RX","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Custom Transformation","label":"UNI_RX","queries":["df_6=spark.sql(\"\"\"SELECT COUNTRY_CD AS COUNTRY_CD,\nEND_DT AS END_DT,\nINS_UPD_FLAG AS INS_UPD_FLAG,\nLOAD_DT AS LOAD_DT,\nMA_AMT AS MA_AMT,\nMA_EVENT_DESC AS MA_EVENT_DESC,\nMA_EVENT_ID AS MA_EVENT_ID,\nMA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\nMA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\nMonotonically_Increasing_Id AS Monotonically_Increasing_Id,\nPRODUCT_ID AS PRODUCT_ID,\nSTART_DT AS START_DT,\nUPDATE_DT AS UPDATE_DT FROM ASQ_MA_EVENT_EXISTING_5 UNION ALL SELECT COUNTRY_CD AS COUNTRY_CD,\nEND_DT AS END_DT,\nINS_UPD_FLAG AS INS_UPD_FLAG,\nLOAD_DT AS LOAD_DT,\nMA_AMT AS MA_AMT,\nMA_EVENT_DESC AS MA_EVENT_DESC,\nMA_EVENT_ID AS MA_EVENT_ID,\nMA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\nMA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\nMonotonically_Increasing_Id AS Monotonically_Increasing_Id,\nPRODUCT_ID AS PRODUCT_ID,\nSTART_DT AS START_DT,\nUPDATE_DT AS UPDATE_DT FROM EXP_NEW_4\"\"\")","df_6.createOrReplaceTempView(\"UNI_RX_6\")"]},"id":"UNI_RX","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Update Strategy","label":"UPD_MA_EVENT","queries":["df_7=spark.sql(\"\"\"\n    SELECT\n        MA_EVENT_ID AS MA_EVENT_ID,\n        PRODUCT_ID AS PRODUCT_ID,\n        COUNTRY_CD AS COUNTRY_CD,\n        START_DT AS START_DT,\n        END_DT AS END_DT,\n        MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\n        MA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\n        MA_EVENT_DESC AS MA_EVENT_DESC,\n        MA_AMT AS MA_AMT,\n        UPDATE_DT AS UPDATE_DT,\n        LOAD_DT AS LOAD_DT,\n        INS_UPD_FLAG AS INS_UPD_FLAG,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        UNI_RX_6\"\"\")","df_7.createOrReplaceTempView(\"UPD_MA_EVENT_7\")"]},"id":"UPD_MA_EVENT","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"COUNTRY","queries":["df_8=spark.sql(\"\"\"\n    SELECT\n        COUNTRY_CD AS COUNTRY_CD,\n        COUNTRY_NAME AS COUNTRY_NAME,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        COUNTRY\"\"\")","df_8.createOrReplaceTempView(\"COUNTRY_8\")"]},"id":"COUNTRY","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"SKU_PROFILE","queries":["df_9=spark.sql(\"\"\"\n    SELECT\n        PRODUCT_ID AS PRODUCT_ID,\n        SKU_NBR AS SKU_NBR,\n        SKU_TYPE AS SKU_TYPE,\n        PRIMARY_UPC_ID AS PRIMARY_UPC_ID,\n        STATUS_ID AS STATUS_ID,\n        SUBS_HIST_FLAG AS SUBS_HIST_FLAG,\n        SUBS_CURR_FLAG AS SUBS_CURR_FLAG,\n        SKU_DESC AS SKU_DESC,\n        ALT_DESC AS ALT_DESC,\n        SAP_CATEGORY_ID AS SAP_CATEGORY_ID,\n        SAP_CLASS_ID AS SAP_CLASS_ID,\n        SAP_DEPT_ID AS SAP_DEPT_ID,\n        SAP_DIVISION_ID AS SAP_DIVISION_ID,\n        PRIMARY_VENDOR_ID AS PRIMARY_VENDOR_ID,\n        PARENT_VENDOR_ID AS PARENT_VENDOR_ID,\n        COUNTRY_CD AS COUNTRY_CD,\n        IMPORT_FLAG AS IMPORT_FLAG,\n        HTS_CODE_ID AS HTS_CODE_ID,\n        CONTENTS AS CONTENTS,\n        CONTENTS_UNITS AS CONTENTS_UNITS,\n        WEIGHT_NET_AMT AS WEIGHT_NET_AMT,\n        WEIGHT_UOM_CD AS WEIGHT_UOM_CD,\n        SIZE_DESC AS SIZE_DESC,\n        BUM_QTY AS BUM_QTY,\n        UOM_CD AS UOM_CD,\n        UNIT_NUMERATOR AS UNIT_NUMERATOR,\n        UNIT_DENOMINATOR AS UNIT_DENOMINATOR,\n        BUYER_ID AS BUYER_ID,\n        PURCH_GROUP_ID AS PURCH_GROUP_ID,\n        PURCH_COST_AMT AS PURCH_COST_AMT,\n        NAT_PRICE_US_AMT AS NAT_PRICE_US_AMT,\n        TAX_CLASS_ID AS TAX_CLASS_ID,\n        VALUATION_CLASS_CD AS VALUATION_CLASS_CD,\n        BRAND_CD AS BRAND_CD,\n        BRAND_CLASSIFICATION_ID AS BRAND_CLASSIFICATION_ID,\n        OWNBRAND_FLAG AS OWNBRAND_FLAG,\n        STATELINE_FLAG AS STATELINE_FLAG,\n        SIGN_TYPE_CD AS SIGN_TYPE_CD,\n        OLD_ARTICLE_NBR AS OLD_ARTICLE_NBR,\n        VENDOR_ARTICLE_NBR AS VENDOR_ARTICLE_NBR,\n        INIT_MKDN_DT AS INIT_MKDN_DT,\n        DISC_START_DT AS DISC_START_DT,\n        ADD_DT AS ADD_DT,\n        DELETE_DT AS DELETE_DT,\n        UPDATE_DT AS UPDATE_DT,\n        FIRST_SALE_DT AS FIRST_SALE_DT,\n        LAST_SALE_DT AS LAST_SALE_DT,\n        FIRST_INV_DT AS FIRST_INV_DT,\n        LAST_INV_DT AS LAST_INV_DT,\n        LOAD_DT AS LOAD_DT,\n        BASE_NBR AS BASE_NBR,\n        BP_COLOR_ID AS BP_COLOR_ID,\n        BP_SIZE_ID AS BP_SIZE_ID,\n        BP_BREED_ID AS BP_BREED_ID,\n        BP_ITEM_CONCATENATED AS BP_ITEM_CONCATENATED,\n        BP_AEROSOL_FLAG AS BP_AEROSOL_FLAG,\n        BP_HAZMAT_FLAG AS BP_HAZMAT_FLAG,\n        CANADIAN_HTS_CD AS CANADIAN_HTS_CD,\n        NAT_PRICE_CA_AMT AS NAT_PRICE_CA_AMT,\n        NAT_PRICE_PR_AMT AS NAT_PRICE_PR_AMT,\n        RTV_DEPT_CD AS RTV_DEPT_CD,\n        GL_ACCT_NBR AS GL_ACCT_NBR,\n        ARTICLE_CATEGORY_ID AS ARTICLE_CATEGORY_ID,\n        COMPONENT_FLAG AS COMPONENT_FLAG,\n        ZDISCO_SCHED_TYPE_ID AS ZDISCO_SCHED_TYPE_ID,\n        ZDISCO_MKDN_SCHED_ID AS ZDISCO_MKDN_SCHED_ID,\n        ZDISCO_PID_DT AS ZDISCO_PID_DT,\n        ZDISCO_START_DT AS ZDISCO_START_DT,\n        ZDISCO_INIT_MKDN_DT AS ZDISCO_INIT_MKDN_DT,\n        ZDISCO_DC_DT AS ZDISCO_DC_DT,\n        ZDISCO_STR_DT AS ZDISCO_STR_DT,\n        ZDISCO_STR_OWNRSHP_DT AS ZDISCO_STR_OWNRSHP_DT,\n        ZDISCO_STR_WRT_OFF_DT AS ZDISCO_STR_WRT_OFF_DT,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        SKU_PROFILE\"\"\")","df_9.createOrReplaceTempView(\"SKU_PROFILE_9\")"]},"id":"SKU_PROFILE","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Target Definition","label":"MA_EVENT","queries":["spark.sql(\"\"\"INSERT INTO MA_EVENT SELECT MA_EVENT_ID AS MA_EVENT_ID,\nOFFER_ID AS OFFER_ID,\nSAP_DEPT_ID AS SAP_DEPT_ID,\nPRODUCT_ID AS PRODUCT_ID,\nCOUNTRY_CD AS COUNTRY_CD,\nSTART_DT AS START_DT,\nEND_DT AS END_DT,\nMA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\nMA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\nLOCATION_ID AS LOCATION_ID,\nMOVEMENT_ID AS MOVEMENT_ID,\nVALUATION_CLASS_CD AS VALUATION_CLASS_CD,\nGL_ACCT_NBR AS GL_ACCT_NBR,\nLOCATION_TYPE_ID AS LOCATION_TYPE_ID,\nROYALTY_BRAND_ID AS ROYALTY_BRAND_ID,\nBRAND_CD AS BRAND_CD,\nMA_FORMULA_CD AS MA_FORMULA_CD,\nFISCAL_MO AS FISCAL_MO,\nSAP_CATEGORY_ID AS SAP_CATEGORY_ID,\nFROM_LOCATION_ID AS FROM_LOCATION_ID,\nSOURCE_VENDOR_ID AS SOURCE_VENDOR_ID,\nCOMPANY_ID AS COMPANY_ID,\nMA_EVENT_DESC AS MA_EVENT_DESC,\nEM_VENDOR_FUNDING_ID AS EM_VENDOR_FUNDING_ID,\nEM_COMMENT AS EM_COMMENT,\nEM_BILL_ALT_VENDOR_FLAG AS EM_BILL_ALT_VENDOR_FLAG,\nEM_ALT_VENDOR_ID AS EM_ALT_VENDOR_ID,\nEM_ALT_VENDOR_NAME AS EM_ALT_VENDOR_NAME,\nEM_ALT_VENDOR_COUNTRY_CD AS EM_ALT_VENDOR_COUNTRY_CD,\nEM_VENDOR_ID AS EM_VENDOR_ID,\nEM_VENDOR_NAME AS EM_VENDOR_NAME,\nEM_VENDOR_COUNTRY_CD AS EM_VENDOR_COUNTRY_CD,\nVENDOR_NAME_TXT AS VENDOR_NAME_TXT,\nMA_PCT_IND AS MA_PCT_IND,\nNEW_MA_AMT AS MA_AMT,\nMA_MAX_AMT AS MA_MAX_AMT,\nUPDATE_DT AS UPDATE_DT,\nLOAD_DT AS LOAD_DT FROM UPD_MA_EVENT_7\"\"\")"]},"id":"MA_EVENT","position":{"x":0,"y":0},"type":"normalNode"}]}