{"Edges":[{"transformationType":"Source Definition","id":"e-0","source":"","target":"SALES_TRANS_UPC_OFFER"},{"transformationType":"Source Definition","id":"e-1","source":"","target":"TRANS_AGG_PRE"},{"transformationType":"Source Definition","id":"e-2","source":"","target":"SERVICES_MARGIN_CTRL"},{"transformationType":"Source Definition","id":"e-3","source":"","target":"SALES_TRANS_CUST"},{"transformationType":"Source Definition","id":"e-4","source":"","target":"SALES_TRANS_UPC"},{"transformationType":"Source Definition","id":"e-5","source":"","target":"SALES_TRANS_SPECIAL"},{"transformationType":"Source Definition","id":"e-6","source":"","target":"MA_EVENT_SOURCE"},{"transformationType":"Source Definition","id":"e-7","source":"","target":"MA_EVENT_TYPE"},{"transformationType":"Source Definition","id":"e-8","source":"","target":"MA_EVENT"},{"transformationType":"Source Definition","id":"e-9","source":"","target":"STX_UPC_PRE"},{"transformationType":"Source Definition","id":"e-10","source":"","target":"SALES_TRANS_DISCOUNT"},{"transformationType":"Source Definition","id":"e-11","source":"","target":"SQL_TRANSFORM_DUMMY_SOURCE"},{"transformationType":"Source Qualifier","id":"e-12","source":"SQL_TRANSFORM_DUMMY_SOURCE","target":"SQ_Shortcut_to_GL_PLAN_FORECAST_MONTH"},{"transformationType":"Custom Transformation","id":"e-13","source":"SQ_Shortcut_to_GL_PLAN_FORECAST_MONTH","target":"SQL_INS_and_DUPS_CHECK"},{"transformationType":"Expression","id":"e-14","source":"SQL_INS_and_DUPS_CHECK","target":"EXP_GET_SESSION_INFO"},{"transformationType":"Aggregator","id":"e-15","source":"EXP_GET_SESSION_INFO","target":"AGG"},{"transformationType":"Expression","id":"e-16","source":"AGG","target":"EXP_CREATE_INS_SQL"},{"transformationType":"Custom Transformation","id":"e-17","source":"EXP_CREATE_INS_SQL","target":"SQL_INS_to_SQL_TRANSFORM_LOG"},{"transformationType":"Expression","id":"e-18","source":"SQL_INS_to_SQL_TRANSFORM_LOG","target":"EXP_ABORT_SESSION"},{"transformationType":"Source Definition","id":"e-19","source":"","target":"CURRENCY_DAY"},{"transformationType":"Source Definition","id":"e-20","source":"","target":"SALES_TRANS_TXN"},{"transformationType":"Source Definition","id":"e-21","source":"","target":"SUPPLY_CHAIN"},{"transformationType":"Source Definition","id":"e-22","source":"","target":"CR_CUST_ACCT_TYPE"},{"transformationType":"Source Definition","id":"e-23","source":"","target":"SALES_CUST_CAPTURE"},{"transformationType":"Source Definition","id":"e-24","source":"","target":"SALES_TRANS_CLEARANCE"},{"transformationType":"Source Definition","id":"e-25","source":"","target":"UPC"},{"transformationType":"Source Definition","id":"e-26","source":"","target":"DAYS"},{"transformationType":"Source Definition","id":"e-27","source":"","target":"SKU_PROFILE"},{"transformationType":"Source Definition","id":"e-28","source":"","target":"SITE_PROFILE"},{"transformationType":"Source Definition","id":"e-29","source":"","target":"MA_EVENT_RESTATE_HIST"},{"transformationType":"Target Definition","id":"e-30","source":"EXP_ABORT_SESSION","target":"SQL_TRANSFORM_DUMMY_TARGET"}],"Nodes":[{"data":{"transformationType":"Source Definition","label":"SALES_TRANS_UPC_OFFER","queries":["df_0=spark.sql(\"\"\"\n    SELECT\n        DAY_DT AS DAY_DT,\n        LOCATION_ID AS LOCATION_ID,\n        SALES_INSTANCE_ID AS SALES_INSTANCE_ID,\n        UPC_ID AS UPC_ID,\n        POS_TXN_SEQ_NBR AS POS_TXN_SEQ_NBR,\n        OFFER_ID AS OFFER_ID,\n        SCAN_SEQ_NBR AS SCAN_SEQ_NBR,\n        UPC_SEQ_NBR AS UPC_SEQ_NBR,\n        OFFER_AMT AS OFFER_AMT,\n        LOAD_TSTMP AS LOAD_TSTMP,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        SALES_TRANS_UPC_OFFER\"\"\")","df_0.createOrReplaceTempView(\"SALES_TRANS_UPC_OFFER_0\")"]},"id":"SALES_TRANS_UPC_OFFER","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"TRANS_AGG_PRE","queries":["df_1=spark.sql(\"\"\"\n    SELECT\n        DAY_DT AS DAY_DT,\n        LOCATION_ID AS LOCATION_ID,\n        TXN_KEY_GID AS TXN_KEY_GID,\n        SALES_INSTANCE_ID AS SALES_INSTANCE_ID,\n        TIME_ID AS TIME_ID,\n        REGISTER_NBR AS REGISTER_NBR,\n        TRANSACTION_NBR AS TRANSACTION_NBR,\n        ORDER_NBR AS ORDER_NBR,\n        ORDER_FULFILLMENT_CHANNEL AS ORDER_FULFILLMENT_CHANNEL,\n        ORDER_CREATION_CHANNEL AS ORDER_CREATION_CHANNEL,\n        DS_ORDER_SEQ_NBR AS DS_ORDER_SEQ_NBR,\n        TXN_CNT AS TXN_CNT,\n        CUST_TRANS_ID AS CUST_TRANS_ID,\n        CASHIER_NBR AS CASHIER_NBR,\n        CUST_CAPTURE_TYPE AS CUST_CAPTURE_TYPE,\n        COUNTRY_CD AS COUNTRY_CD,\n        SALES_TYPE_ID AS SALES_TYPE_ID,\n        DS_CHANNEL AS DS_CHANNEL,\n        DS_ASSIST_SITE_NBR AS DS_ASSIST_SITE_NBR,\n        DS_CURRENCY_CD AS DS_CURRENCY_CD,\n        SALES_MID_VOID_REASON_CD AS SALES_MID_VOID_REASON_CD,\n        ORDER_CREATION_DEVICE_TYPE AS ORDER_CREATION_DEVICE_TYPE,\n        ORDER_CREATION_DEVICE_WIDTH AS ORDER_CREATION_DEVICE_WIDTH,\n        TXN_SEGMENT AS TXN_SEGMENT,\n        PAYMENT_DEVICE_TYPE AS PAYMENT_DEVICE_TYPE,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        TRANS_AGG_PRE\"\"\")","df_1.createOrReplaceTempView(\"TRANS_AGG_PRE_1\")"]},"id":"TRANS_AGG_PRE","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"SERVICES_MARGIN_CTRL","queries":["df_2=spark.sql(\"\"\"\n    SELECT\n        SAP_DEPT_ID AS SAP_DEPT_ID,\n        PRIMARY_SAP_DEPT_ID AS PRIMARY_SAP_DEPT_ID,\n        STORE_DEPT_NBR AS STORE_DEPT_NBR,\n        START_EFF_DT AS START_EFF_DT,\n        END_EFF_DT AS END_EFF_DT,\n        UPDATE_TSTMP AS UPDATE_TSTMP,\n        LOAD_TSTMP AS LOAD_TSTMP,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        SERVICES_MARGIN_CTRL\"\"\")","df_2.createOrReplaceTempView(\"SERVICES_MARGIN_CTRL_2\")"]},"id":"SERVICES_MARGIN_CTRL","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"SALES_TRANS_CUST","queries":["df_3=spark.sql(\"\"\"\n    SELECT\n        DAY_DT AS DAY_DT,\n        SALES_INSTANCE_ID AS SALES_INSTANCE_ID,\n        CUST_ACCT_ID AS CUST_ACCT_ID,\n        CUST_ACCT_TYPE_CD AS CUST_ACCT_TYPE_CD,\n        LOAD_DT AS LOAD_DT,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        SALES_TRANS_CUST\"\"\")","df_3.createOrReplaceTempView(\"SALES_TRANS_CUST_3\")"]},"id":"SALES_TRANS_CUST","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"SALES_TRANS_UPC","queries":["df_4=spark.sql(\"\"\"\n    SELECT\n        DAY_DT AS DAY_DT,\n        LOCATION_ID AS LOCATION_ID,\n        SALES_INSTANCE_ID AS SALES_INSTANCE_ID,\n        UPC_ID AS UPC_ID,\n        TP_INVOICE_NBR AS TP_INVOICE_NBR,\n        PARENT_UPC_ID AS PARENT_UPC_ID,\n        COMBO_TYPE_CD AS COMBO_TYPE_CD,\n        POS_TXN_SEQ_NBR AS POS_TXN_SEQ_NBR,\n        VOID_TYPE_CD AS VOID_TYPE_CD,\n        TRANS_TSTMP AS TRANS_TSTMP,\n        SALES_TYPE_ID AS SALES_TYPE_ID,\n        PRODUCT_ID AS PRODUCT_ID,\n        SERVICE_BULK_SKU_NBR AS SERVICE_BULK_SKU_NBR,\n        PET_ID AS PET_ID,\n        CUST_TRANS_ID AS CUST_TRANS_ID,\n        KEYED_FLAG AS KEYED_FLAG,\n        UPC_ADD_FLAG AS UPC_ADD_FLAG,\n        NON_TAX_FLAG AS NON_TAX_FLAG,\n        SPECIAL_SALES_FLAG AS SPECIAL_SALES_FLAG,\n        DROP_SHIP_FLAG AS DROP_SHIP_FLAG,\n        REASON_ID AS REASON_ID,\n        CASHIER_NBR AS CASHIER_NBR,\n        UPC_SEQ_NBR AS UPC_SEQ_NBR,\n        UNIT_PRICE_AMT AS UNIT_PRICE_AMT,\n        SALES_AMT AS SALES_AMT,\n        SALES_COST AS SALES_COST,\n        SALES_QTY AS SALES_QTY,\n        RETURN_AMT AS RETURN_AMT,\n        RETURN_COST AS RETURN_COST,\n        RETURN_QTY AS RETURN_QTY,\n        CLEARANCE_AMT AS CLEARANCE_AMT,\n        CLEARANCE_QTY AS CLEARANCE_QTY,\n        CLEARANCE_RETURN_AMT AS CLEARANCE_RETURN_AMT,\n        CLEARANCE_RETURN_QTY AS CLEARANCE_RETURN_QTY,\n        SPECIAL_SRVC_AMT AS SPECIAL_SRVC_AMT,\n        EXCH_RATE_PCT AS EXCH_RATE_PCT,\n        DATE_LOADED AS DATE_LOADED,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        SALES_TRANS_UPC\"\"\")","df_4.createOrReplaceTempView(\"SALES_TRANS_UPC_4\")"]},"id":"SALES_TRANS_UPC","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"SALES_TRANS_SPECIAL","queries":["df_5=spark.sql(\"\"\"\n    SELECT\n        DAY_DT AS DAY_DT,\n        LOCATION_ID AS LOCATION_ID,\n        SALES_INSTANCE_ID AS SALES_INSTANCE_ID,\n        UPC_ID AS UPC_ID,\n        POS_TXN_SEQ_NBR AS POS_TXN_SEQ_NBR,\n        VOID_TYPE_CD AS VOID_TYPE_CD,\n        SALES_TYPE_ID AS SALES_TYPE_ID,\n        CUST_TRANS_ID AS CUST_TRANS_ID,\n        PRODUCT_ID AS PRODUCT_ID,\n        SPECIAL_SALES_AMT AS SPECIAL_SALES_AMT,\n        SPECIAL_SALES_QTY AS SPECIAL_SALES_QTY,\n        SPECIAL_RETURN_AMT AS SPECIAL_RETURN_AMT,\n        SPECIAL_RETURN_QTY AS SPECIAL_RETURN_QTY,\n        EXCH_RATE_PCT AS EXCH_RATE_PCT,\n        DATE_LOADED AS DATE_LOADED,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        SALES_TRANS_SPECIAL\"\"\")","df_5.createOrReplaceTempView(\"SALES_TRANS_SPECIAL_5\")"]},"id":"SALES_TRANS_SPECIAL","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"MA_EVENT_SOURCE","queries":["df_6=spark.sql(\"\"\"\n    SELECT\n        MA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\n        MA_EVENT_SOURCE_DESC AS MA_EVENT_SOURCE_DESC,\n        TARGET_TABLE AS TARGET_TABLE,\n        UPDATE_DT AS UPDATE_DT,\n        LOAD_DT AS LOAD_DT,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        MA_EVENT_SOURCE\"\"\")","df_6.createOrReplaceTempView(\"MA_EVENT_SOURCE_6\")"]},"id":"MA_EVENT_SOURCE","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"MA_EVENT_TYPE","queries":["df_7=spark.sql(\"\"\"\n    SELECT\n        MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\n        MA_EVENT_TYPE_DESC AS MA_EVENT_TYPE_DESC,\n        REF_MA_EVENT_TYPE_ID AS REF_MA_EVENT_TYPE_ID,\n        EM_TPR_TYPE AS EM_TPR_TYPE,\n        PETPERK_ONLY_FLAG AS PETPERK_ONLY_FLAG,\n        UPDATE_DT AS UPDATE_DT,\n        LOAD_DT AS LOAD_DT,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        MA_EVENT_TYPE\"\"\")","df_7.createOrReplaceTempView(\"MA_EVENT_TYPE_7\")"]},"id":"MA_EVENT_TYPE","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"MA_EVENT","queries":["df_8=spark.sql(\"\"\"\n    SELECT\n        MA_EVENT_ID AS MA_EVENT_ID,\n        OFFER_ID AS OFFER_ID,\n        SAP_DEPT_ID AS SAP_DEPT_ID,\n        PRODUCT_ID AS PRODUCT_ID,\n        COUNTRY_CD AS COUNTRY_CD,\n        START_DT AS START_DT,\n        END_DT AS END_DT,\n        MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\n        MA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\n        LOCATION_ID AS LOCATION_ID,\n        MOVEMENT_ID AS MOVEMENT_ID,\n        VALUATION_CLASS_CD AS VALUATION_CLASS_CD,\n        GL_ACCT_NBR AS GL_ACCT_NBR,\n        LOCATION_TYPE_ID AS LOCATION_TYPE_ID,\n        ROYALTY_BRAND_ID AS ROYALTY_BRAND_ID,\n        BRAND_CD AS BRAND_CD,\n        MA_FORMULA_CD AS MA_FORMULA_CD,\n        FISCAL_MO AS FISCAL_MO,\n        SAP_CATEGORY_ID AS SAP_CATEGORY_ID,\n        FROM_LOCATION_ID AS FROM_LOCATION_ID,\n        SOURCE_VENDOR_ID AS SOURCE_VENDOR_ID,\n        COMPANY_ID AS COMPANY_ID,\n        MA_EVENT_DESC AS MA_EVENT_DESC,\n        EM_VENDOR_FUNDING_ID AS EM_VENDOR_FUNDING_ID,\n        EM_COMMENT AS EM_COMMENT,\n        EM_BILL_ALT_VENDOR_FLAG AS EM_BILL_ALT_VENDOR_FLAG,\n        EM_ALT_VENDOR_ID AS EM_ALT_VENDOR_ID,\n        EM_ALT_VENDOR_NAME AS EM_ALT_VENDOR_NAME,\n        EM_ALT_VENDOR_COUNTRY_CD AS EM_ALT_VENDOR_COUNTRY_CD,\n        EM_VENDOR_ID AS EM_VENDOR_ID,\n        EM_VENDOR_NAME AS EM_VENDOR_NAME,\n        EM_VENDOR_COUNTRY_CD AS EM_VENDOR_COUNTRY_CD,\n        VENDOR_NAME_TXT AS VENDOR_NAME_TXT,\n        MA_PCT_IND AS MA_PCT_IND,\n        MA_AMT AS MA_AMT,\n        MA_MAX_AMT AS MA_MAX_AMT,\n        UPDATE_DT AS UPDATE_DT,\n        LOAD_DT AS LOAD_DT,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        MA_EVENT\"\"\")","df_8.createOrReplaceTempView(\"MA_EVENT_8\")"]},"id":"MA_EVENT","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"STX_UPC_PRE","queries":["df_9=spark.sql(\"\"\"\n    SELECT\n        DAY_DT AS DAY_DT,\n        TXN_KEY_GID AS TXN_KEY_GID,\n        UPC_ID AS UPC_ID,\n        SEQ_NBR AS SEQ_NBR,\n        VOID_TYPE_CD AS VOID_TYPE_CD,\n        TXN_TYPE_ID AS TXN_TYPE_ID,\n        ADOPTION_GROUP_ID AS ADOPTION_GROUP_ID,\n        COMBO_TYPE_CD AS COMBO_TYPE_CD,\n        PARENT_UPC_ID AS PARENT_UPC_ID,\n        SOURCE_VENDOR_ID AS SOURCE_VENDOR_ID,\n        UPC_KEYED_FLAG AS UPC_KEYED_FLAG,\n        UPC_NOTONFILE_FLAG AS UPC_NOTONFILE_FLAG,\n        ADJ_REASON_ID AS ADJ_REASON_ID,\n        ORIG_UPC_TAX_STATUS_ID AS ORIG_UPC_TAX_STATUS_ID,\n        REGULATED_ANIMAL_PERMIT_NBR AS REGULATED_ANIMAL_PERMIT_NBR,\n        CARE_SHEET_GIVEN_FLAG AS CARE_SHEET_GIVEN_FLAG,\n        RETURN_REASON_ID AS RETURN_REASON_ID,\n        RETURN_DESC AS RETURN_DESC,\n        SPECIAL_ORDER_NBR AS SPECIAL_ORDER_NBR,\n        TP_INVOICE_NBR AS TP_INVOICE_NBR,\n        TP_MASTER_INVOICE_NBR AS TP_MASTER_INVOICE_NBR,\n        TRAINING_START_DT AS TRAINING_START_DT,\n        NON_TAX_FLAG AS NON_TAX_FLAG,\n        NON_DISCOUNT_FLAG AS NON_DISCOUNT_FLAG,\n        SPECIAL_SALES_FLAG AS SPECIAL_SALES_FLAG,\n        UPC_SEQ_NBR AS UPC_SEQ_NBR,\n        UNIT_PRICE_AMT AS UNIT_PRICE_AMT,\n        SALES_AMT AS SALES_AMT,\n        SALES_QTY AS SALES_QTY,\n        SALES_COST AS SALES_COST,\n        RETURN_AMT AS RETURN_AMT,\n        RETURN_QTY AS RETURN_QTY,\n        RETURN_COST AS RETURN_COST,\n        SERVICE_AMT AS SERVICE_AMT,\n        DROP_SHIP_FLAG AS DROP_SHIP_FLAG,\n        PET_ID AS PET_ID,\n        SERVICE_BULK_SKU_NBR AS SERVICE_BULK_SKU_NBR,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        STX_UPC_PRE\"\"\")","df_9.createOrReplaceTempView(\"STX_UPC_PRE_9\")"]},"id":"STX_UPC_PRE","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"SALES_TRANS_DISCOUNT","queries":["df_10=spark.sql(\"\"\"\n    SELECT\n        DAY_DT AS DAY_DT,\n        LOCATION_ID AS LOCATION_ID,\n        SALES_INSTANCE_ID AS SALES_INSTANCE_ID,\n        UPC_ID AS UPC_ID,\n        DISCOUNT_TYPE_ID AS DISCOUNT_TYPE_ID,\n        TP_INVOICE_NBR AS TP_INVOICE_NBR,\n        PARENT_UPC_ID AS PARENT_UPC_ID,\n        COMBO_TYPE_CD AS COMBO_TYPE_CD,\n        POS_TXN_SEQ_NBR AS POS_TXN_SEQ_NBR,\n        OFFER_ID AS OFFER_ID,\n        VOID_TYPE_CD AS VOID_TYPE_CD,\n        SALES_TYPE_ID AS SALES_TYPE_ID,\n        TRANS_TSTMP AS TRANS_TSTMP,\n        PRODUCT_ID AS PRODUCT_ID,\n        DISC_CPN_UPC_ID AS DISC_CPN_UPC_ID,\n        EMPLOYEE_ID AS EMPLOYEE_ID,\n        CUST_TRANS_ID AS CUST_TRANS_ID,\n        CASHIER_NBR AS CASHIER_NBR,\n        UPC_SEQ_NBR AS UPC_SEQ_NBR,\n        OFFER_CHARGEBACK_ID AS OFFER_CHARGEBACK_ID,\n        DISCOUNT_AMT AS DISCOUNT_AMT,\n        DISCOUNT_QTY AS DISCOUNT_QTY,\n        DISCOUNT_RETURN_AMT AS DISCOUNT_RETURN_AMT,\n        DISCOUNT_RETURN_QTY AS DISCOUNT_RETURN_QTY,\n        EXCH_RATE_PCT AS EXCH_RATE_PCT,\n        DATE_LOADED AS DATE_LOADED,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        SALES_TRANS_DISCOUNT\"\"\")","df_10.createOrReplaceTempView(\"SALES_TRANS_DISCOUNT_10\")"]},"id":"SALES_TRANS_DISCOUNT","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"SQL_TRANSFORM_DUMMY_SOURCE","queries":["df_11=spark.sql(\"\"\"\n    SELECT\n        START_TSTMP AS START_TSTMP,\n        TABLE_NAME AS TABLE_NAME,\n        BEGIN_ROW_CNT AS BEGIN_ROW_CNT,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        SQL_TRANSFORM_DUMMY_SOURCE\"\"\")","df_11.createOrReplaceTempView(\"SQL_TRANSFORM_DUMMY_SOURCE_11\")"]},"id":"SQL_TRANSFORM_DUMMY_SOURCE","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Qualifier","label":"SQ_Shortcut_to_GL_PLAN_FORECAST_MONTH","queries":["df_12=spark.sql(\"\"\"\n    SELECT\n        CURRENT_TIMESTAMP AS START_TSTMP,\n        'MA_SALES_PRE' AS TABLE_NAME,\n        COUNT(*) AS BEGIN_ROW_CNT \n    FROM\n        MA_SALES_PRE\"\"\")","df_12.createOrReplaceTempView(\"SQ_Shortcut_to_GL_PLAN_FORECAST_MONTH_12\")"]},"id":"SQ_Shortcut_to_GL_PLAN_FORECAST_MONTH","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Custom Transformation","label":"SQL_INS_and_DUPS_CHECK","queries":["df_13=spark.sql(\"\"\"\n    SELECT\n        BEGIN_ROW_CNT AS BEGIN_ROW_CNT,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id,\n        START_TSTMP AS START_TSTMP,\n        TABLE_NAME AS TABLE_NAME \n    FROM\n        SQ_Shortcut_to_GL_PLAN_FORECAST_MONTH_12\"\"\")","df_13.createOrReplaceTempView(\"SQL_INS_and_DUPS_CHECK_13\")"]},"id":"SQL_INS_and_DUPS_CHECK","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Expression","label":"EXP_GET_SESSION_INFO","queries":["df_14=spark.sql(\"\"\"\n    SELECT\n        TO_CHAR(START_TSTMP_output,\n        'MM/DD/YYYY HH24:MI:SS') AS START_TSTMP,\n        TO_CHAR(current_timestamp,\n        'MM/DD/YYYY HH24:MI:SS') AS END_TSTMP,\n        $PMWorkflowName AS WORKFLOW_NAME,\n        $PMSessionName AS SESSION_NAME,\n        $PMMappingName AS MAPPING_NAME,\n        TABLE_NAME AS TABLE_NAME,\n        BEGIN_ROW_CNT AS BEGIN_ROW_CNT,\n        INSERT_ROW_CNT AS INSERT_ROW_CNT,\n        DUPLICATE_ROW_CNT AS DUPLICATE_ROW_CNT,\n        IFF(DUPLICATE_ROW_CNT > 0,\n        'There are duplicate records in the table',\n        SQLError) AS SQL_TRANSFORM_ERROR,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        SQL_INS_and_DUPS_CHECK_13\"\"\")","df_14.createOrReplaceTempView(\"EXP_GET_SESSION_INFO_14\")"]},"id":"EXP_GET_SESSION_INFO","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Aggregator","label":"AGG","queries":["df_15=spark.sql(\"\"\"\n    SELECT\n        START_TSTMP AS START_TSTMP,\n        MAX(i_END_TSTMP) AS END_TSTMP,\n        WORKFLOW_NAME AS WORKFLOW_NAME,\n        SESSION_NAME AS SESSION_NAME,\n        MAPPING_NAME AS MAPPING_NAME,\n        TABLE_NAME AS TABLE_NAME,\n        TO_CHAR(MAX(i_BEGIN_ROW_CNT)) AS BEGIN_ROW_CNT,\n        TO_CHAR(SUM(i_INSERT_ROW_CNT)) AS INSERT_ROW_CNT,\n        MAX(i_SQL_TRANSFORM_ERROR) AS SQL_TRANSFORM_ERROR,\n        TO_CHAR(SUM(i_DUPLICATE_ROW_CNT)) AS DUPLICATE_ROW_CNT \n    FROM\n        EXP_GET_SESSION_INFO_14 \n    GROUP BY\n        START_TSTMP,\n        WORKFLOW_NAME,\n        SESSION_NAME,\n        MAPPING_NAME,\n        TABLE_NAME\"\"\")","df_15.createOrReplaceTempView(\"AGG_15\")"]},"id":"AGG","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Expression","label":"EXP_CREATE_INS_SQL","queries":["df_16=spark.sql(\"\"\"\n    SELECT\n        START_TSTMP AS START_TSTMP,\n        END_TSTMP AS END_TSTMP,\n        WORKFLOW_NAME AS WORKFLOW_NAME,\n        SESSION_NAME AS SESSION_NAME,\n        MAPPING_NAME AS MAPPING_NAME,\n        TABLE_NAME AS TABLE_NAME,\n        BEGIN_ROW_CNT AS BEGIN_ROW_CNT,\n        INSERT_ROW_CNT AS INSERT_ROW_CNT,\n        DUPLICATE_ROW_CNT AS DUPLICATE_ROW_CNT,\n        SQL_TRANSFORM_ERROR AS SQL_TRANSFORM_ERROR,\n        'INSERT INTO SQL_TRANSFORM_LOG VALUES (TO_DATE(' || CHR(39) || START_TSTMP || CHR(39) || ',' || CHR(39) || 'MM/DD/YYYY HH24:MI:SS' || CHR(39) || '),TO_DATE(' || CHR(39) || END_TSTMP || CHR(39) || ',' || CHR(39) || 'MM/DD/YYYY HH24:MI:SS' || CHR(39) || '), ' || CHR(39) || WORKFLOW_NAME || CHR(39) || ', ' || CHR(39) || SESSION_NAME || CHR(39) || ', ' || CHR(39) || MAPPING_NAME || CHR(39) || ', ' || CHR(39) || TABLE_NAME || CHR(39) || ', ' || CHR(39) || BEGIN_ROW_CNT || CHR(39) || ', ' || CHR(39) || INSERT_ROW_CNT || CHR(39) || ', ' || CHR(39) || DUPLICATE_ROW_CNT || CHR(39) || ',  ' || CHR(39) || SQL_TRANSFORM_ERROR || CHR(39) || ')' AS INSERT_SQL,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        AGG_15\"\"\")","df_16.createOrReplaceTempView(\"EXP_CREATE_INS_SQL_16\")"]},"id":"EXP_CREATE_INS_SQL","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Custom Transformation","label":"SQL_INS_to_SQL_TRANSFORM_LOG","queries":["df_17=spark.sql(\"\"\"\n    SELECT\n        BEGIN_ROW_CNT AS BEGIN_ROW_CNT,\n        DUPLICATE_ROW_CNT AS DUPLICATE_ROW_CNT,\n        END_TSTMP AS END_TSTMP,\n        INSERT_ROW_CNT AS INSERT_ROW_CNT,\n        INSERT_SQL AS INSERT_SQL,\n        MAPPING_NAME AS MAPPING_NAME,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id,\n        SESSION_NAME AS SESSION_NAME,\n        SQL_TRANSFORM_ERROR AS SQL_TRANSFORM_ERROR,\n        START_TSTMP AS START_TSTMP,\n        TABLE_NAME AS TABLE_NAME,\n        WORKFLOW_NAME AS WORKFLOW_NAME \n    FROM\n        EXP_CREATE_INS_SQL_16\"\"\")","df_17.createOrReplaceTempView(\"SQL_INS_to_SQL_TRANSFORM_LOG_17\")"]},"id":"SQL_INS_to_SQL_TRANSFORM_LOG","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Expression","label":"EXP_ABORT_SESSION","queries":["df_18=spark.sql(\"\"\"\n    SELECT\n        DUPLICATE_ROW_CNT AS DUPLICATE_ROW_CNT,\n        SQL_TRANSFORM_ERROR AS SQL_TRANSFORM_ERROR,\n        IFF((CAST(DUPLICATE_ROW_CNT_output AS DECIMAL (38,\n        0))) > 0,\n        ABORT('There are duplicates rows in the table'),\n        IIF()) AS ABORT_SESSION,\n        Monotonically_Increasing_Id AS Monotonically_Increasing_Id \n    FROM\n        SQL_INS_to_SQL_TRANSFORM_LOG_17\"\"\")","df_18.createOrReplaceTempView(\"EXP_ABORT_SESSION_18\")"]},"id":"EXP_ABORT_SESSION","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"CURRENCY_DAY","queries":["df_19=spark.sql(\"\"\"\n    SELECT\n        DAY_DT AS DAY_DT,\n        CURRENCY_ID AS CURRENCY_ID,\n        DATE_RATE_START AS DATE_RATE_START,\n        CURRENCY_TYPE AS CURRENCY_TYPE,\n        DATE_RATE_ENDED AS DATE_RATE_ENDED,\n        EXCHANGE_RATE_PCNT AS EXCHANGE_RATE_PCNT,\n        RATIO_TO AS RATIO_TO,\n        RATIO_FROM AS RATIO_FROM,\n        STORE_CTRY_ABBR AS STORE_CTRY_ABBR,\n        CURRENCY_NBR AS CURRENCY_NBR,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        CURRENCY_DAY\"\"\")","df_19.createOrReplaceTempView(\"CURRENCY_DAY_19\")"]},"id":"CURRENCY_DAY","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"SALES_TRANS_TXN","queries":["df_20=spark.sql(\"\"\"\n    SELECT\n        DAY_DT AS DAY_DT,\n        LOCATION_ID AS LOCATION_ID,\n        SALES_INSTANCE_ID AS SALES_INSTANCE_ID,\n        SALES_TYPE_ID AS SALES_TYPE_ID,\n        VOID_TYPE_CD AS VOID_TYPE_CD,\n        TXN_WAS_POST_VOIDED_FLAG AS TXN_WAS_POST_VOIDED_FLAG,\n        SALES_MID_VOID_REASON_CD AS SALES_MID_VOID_REASON_CD,\n        CUST_TRANS_ID AS CUST_TRANS_ID,\n        TRANS_TSTMP AS TRANS_TSTMP,\n        TXN_END_TSTMP AS TXN_END_TSTMP,\n        REGISTER_NBR AS REGISTER_NBR,\n        TRANSACTION_NBR AS TRANSACTION_NBR,\n        TXN_CONTROL_ID AS TXN_CONTROL_ID,\n        ORDER_NBR AS ORDER_NBR,\n        ORDER_SEQ_NBR AS ORDER_SEQ_NBR,\n        ORDER_CHANNEL AS ORDER_CHANNEL,\n        ORDER_ASSIST_LOCATION_ID AS ORDER_ASSIST_LOCATION_ID,\n        ORDER_FULFILLMENT_CHANNEL AS ORDER_FULFILLMENT_CHANNEL,\n        ORDER_CREATION_CHANNEL AS ORDER_CREATION_CHANNEL,\n        ORDER_CREATION_DEVICE_TYPE AS ORDER_CREATION_DEVICE_TYPE,\n        ORDER_CREATION_DEVICE_WIDTH AS ORDER_CREATION_DEVICE_WIDTH,\n        TXN_SEGMENT AS TXN_SEGMENT,\n        PAYMENT_DEVICE_TYPE AS PAYMENT_DEVICE_TYPE,\n        BP_SOURCE_CD AS BP_SOURCE_CD,\n        TRANS_FLAG AS TRANS_FLAG,\n        SALES_CUST_CAPTURE_CD AS SALES_CUST_CAPTURE_CD,\n        ZIP_CODE AS ZIP_CODE,\n        EMPLOYEE_ID AS EMPLOYEE_ID,\n        CASHIER_NBR AS CASHIER_NBR,\n        MANAGER_NBR AS MANAGER_NBR,\n        TAX_EXEMPT_ID AS TAX_EXEMPT_ID,\n        COMM_TILL_FLG AS COMM_TILL_FLG,\n        SPECIAL_ORD_NBR AS SPECIAL_ORD_NBR,\n        PETPERK_OVERRIDE_NBR AS PETPERK_OVERRIDE_NBR,\n        PETPERK_EMAIL_IND AS PETPERK_EMAIL_IND,\n        PETPERK_FIRST_NAME_IND AS PETPERK_FIRST_NAME_IND,\n        PETPERK_LAST_NAME_IND AS PETPERK_LAST_NAME_IND,\n        PETPERK_PHONE_NBR_IND AS PETPERK_PHONE_NBR_IND,\n        LOYALTY_NBR AS LOYALTY_NBR,\n        LOYALTY_REDEMPTION_ID AS LOYALTY_REDEMPTION_ID,\n        LUID AS LUID,\n        POINTS_REDEEMED AS POINTS_REDEEMED,\n        BASE_POINTS_EARNED AS BASE_POINTS_EARNED,\n        BONUS_POINTS_EARNED AS BONUS_POINTS_EARNED,\n        POINT_BALANCE AS POINT_BALANCE,\n        POINTS_DEDUCTED AS POINTS_DEDUCTED,\n        CDC_DCOL_RAW_TXT AS CDC_DCOL_RAW_TXT,\n        CDC_EMAIL_ID AS CDC_EMAIL_ID,\n        CDC_FIRST_NAME_ID AS CDC_FIRST_NAME_ID,\n        CDC_LAST_NAME_ID AS CDC_LAST_NAME_ID,\n        CDC_PHONE_NBR_ID AS CDC_PHONE_NBR_ID,\n        PHONE_TYPE AS PHONE_TYPE,\n        OPT_OUT_EMAIL_FLAG AS OPT_OUT_EMAIL_FLAG,\n        OPT_OUT_TEXT_FLAG AS OPT_OUT_TEXT_FLAG,\n        DIGITAL_RECEIPT_ANSWER_CD AS DIGITAL_RECEIPT_ANSWER_CD,\n        OFFLINE_CUST_LKP_IND AS OFFLINE_CUST_LKP_IND,\n        POS_OFFLINE_REASON_ID AS POS_OFFLINE_REASON_ID,\n        SALES_AMT AS SALES_AMT,\n        SALES_COST AS SALES_COST,\n        SALES_QTY AS SALES_QTY,\n        RETURN_AMT AS RETURN_AMT,\n        RETURN_COST AS RETURN_COST,\n        RETURN_QTY AS RETURN_QTY,\n        SPECIAL_SRVC_AMT AS SPECIAL_SRVC_AMT,\n        SPECIAL_SRVC_QTY AS SPECIAL_SRVC_QTY,\n        NET_COUPON_AMT AS NET_COUPON_AMT,\n        NET_COUPON_QTY AS NET_COUPON_QTY,\n        NET_SALES_AMT AS NET_SALES_AMT,\n        NET_SALES_COST AS NET_SALES_COST,\n        NET_SALES_QTY AS NET_SALES_QTY,\n        NET_DISC_AMT AS NET_DISC_AMT,\n        NET_DISC_QTY AS NET_DISC_QTY,\n        NET_MERCH_DISC_AMT AS NET_MERCH_DISC_AMT,\n        NET_MERCH_DISC_QTY AS NET_MERCH_DISC_QTY,\n        NET_SPECIAL_SALES_AMT AS NET_SPECIAL_SALES_AMT,\n        NET_SPECIAL_SALES_QTY AS NET_SPECIAL_SALES_QTY,\n        NET_SALES_TAX_AMT AS NET_SALES_TAX_AMT,\n        NET_PAYMENT_AMT AS NET_PAYMENT_AMT,\n        EXCH_RATE_PCT AS EXCH_RATE_PCT,\n        UPDATE_TSTMP AS UPDATE_TSTMP,\n        DATE_LOADED AS DATE_LOADED,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        SALES_TRANS_TXN\"\"\")","df_20.createOrReplaceTempView(\"SALES_TRANS_TXN_20\")"]},"id":"SALES_TRANS_TXN","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"SUPPLY_CHAIN","queries":["df_21=spark.sql(\"\"\"\n    SELECT\n        PRODUCT_ID AS PRODUCT_ID,\n        LOCATION_ID AS LOCATION_ID,\n        DIRECT_VENDOR_ID AS DIRECT_VENDOR_ID,\n        SOURCE_VENDOR_ID AS SOURCE_VENDOR_ID,\n        PRIMARY_VENDOR_ID AS PRIMARY_VENDOR_ID,\n        FROM_LOCATION_ID AS FROM_LOCATION_ID,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        SUPPLY_CHAIN\"\"\")","df_21.createOrReplaceTempView(\"SUPPLY_CHAIN_21\")"]},"id":"SUPPLY_CHAIN","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"CR_CUST_ACCT_TYPE","queries":["df_22=spark.sql(\"\"\"\n    SELECT\n        CUST_ACCT_TYPE_CD AS CUST_ACCT_TYPE_CD,\n        CUST_ACCT_TYPE_DESC AS CUST_ACCT_TYPE_DESC,\n        CUST_ACCT_RANK AS CUST_ACCT_RANK,\n        SALES_CUST_CAPTURE_CD AS SALES_CUST_CAPTURE_CD,\n        UPDATE_TSTMP AS UPDATE_TSTMP,\n        LOAD_TSTMP AS LOAD_TSTMP,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        CR_CUST_ACCT_TYPE\"\"\")","df_22.createOrReplaceTempView(\"CR_CUST_ACCT_TYPE_22\")"]},"id":"CR_CUST_ACCT_TYPE","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"SALES_CUST_CAPTURE","queries":["df_23=spark.sql(\"\"\"\n    SELECT\n        SALES_CUST_CAPTURE_CD AS SALES_CUST_CAPTURE_CD,\n        SALES_CUST_CAPTURE_TX AS SALES_CUST_CAPTURE_TX,\n        LOYALTY_CAPTURE_FLAG AS LOYALTY_CAPTURE_FLAG,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        SALES_CUST_CAPTURE\"\"\")","df_23.createOrReplaceTempView(\"SALES_CUST_CAPTURE_23\")"]},"id":"SALES_CUST_CAPTURE","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"SALES_TRANS_CLEARANCE","queries":["df_24=spark.sql(\"\"\"\n    SELECT\n        DAY_DT AS DAY_DT,\n        LOCATION_ID AS LOCATION_ID,\n        SALES_INSTANCE_ID AS SALES_INSTANCE_ID,\n        UPC_ID AS UPC_ID,\n        TP_INVOICE_NBR AS TP_INVOICE_NBR,\n        PARENT_UPC_ID AS PARENT_UPC_ID,\n        COMBO_TYPE_CD AS COMBO_TYPE_CD,\n        POS_TXN_SEQ_NBR AS POS_TXN_SEQ_NBR,\n        VOID_TYPE_CD AS VOID_TYPE_CD,\n        SALES_TYPE_ID AS SALES_TYPE_ID,\n        PRODUCT_ID AS PRODUCT_ID,\n        ORIGINAL_UNIT_PRICE_AMT AS ORIGINAL_UNIT_PRICE_AMT,\n        UNIT_PRICE_AMT AS UNIT_PRICE_AMT,\n        CLEARANCE_METHOD_ID AS CLEARANCE_METHOD_ID,\n        CLEARANCE_TYPE_ID AS CLEARANCE_TYPE_ID,\n        CLEARANCE_AMT AS CLEARANCE_AMT,\n        CLEARANCE_QTY AS CLEARANCE_QTY,\n        CLEARANCE_RETURN_AMT AS CLEARANCE_RETURN_AMT,\n        CLEARANCE_RETURN_QTY AS CLEARANCE_RETURN_QTY,\n        EXCH_RATE_PCT AS EXCH_RATE_PCT,\n        UPDATE_TSTMP AS UPDATE_TSTMP,\n        LOAD_TSTMP AS LOAD_TSTMP,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        SALES_TRANS_CLEARANCE\"\"\")","df_24.createOrReplaceTempView(\"SALES_TRANS_CLEARANCE_24\")"]},"id":"SALES_TRANS_CLEARANCE","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"UPC","queries":["df_25=spark.sql(\"\"\"\n    SELECT\n        UPC_ID AS UPC_ID,\n        UPC_CD AS UPC_CD,\n        UPC_ADD_DT AS UPC_ADD_DT,\n        UPC_DELETE_DT AS UPC_DELETE_DT,\n        UPC_REFRESH_DT AS UPC_REFRESH_DT,\n        PRODUCT_ID AS PRODUCT_ID,\n        SKU_NBR AS SKU_NBR,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        UPC\"\"\")","df_25.createOrReplaceTempView(\"UPC_25\")"]},"id":"UPC","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"DAYS","queries":["df_26=spark.sql(\"\"\"\n    SELECT\n        DAY_DT AS DAY_DT,\n        BUSINESS_DAY_FLAG AS BUSINESS_DAY_FLAG,\n        HOLIDAY_FLAG AS HOLIDAY_FLAG,\n        DAY_OF_WK_NAME AS DAY_OF_WK_NAME,\n        DAY_OF_WK_NAME_ABBR AS DAY_OF_WK_NAME_ABBR,\n        DAY_OF_WK_NBR AS DAY_OF_WK_NBR,\n        CAL_DAY_OF_MO_NBR AS CAL_DAY_OF_MO_NBR,\n        CAL_DAY_OF_YR_NBR AS CAL_DAY_OF_YR_NBR,\n        CAL_WK AS CAL_WK,\n        CAL_WK_NBR AS CAL_WK_NBR,\n        CAL_MO AS CAL_MO,\n        CAL_MO_NBR AS CAL_MO_NBR,\n        CAL_MO_NAME AS CAL_MO_NAME,\n        CAL_MO_NAME_ABBR AS CAL_MO_NAME_ABBR,\n        CAL_QTR AS CAL_QTR,\n        CAL_QTR_NBR AS CAL_QTR_NBR,\n        CAL_HALF AS CAL_HALF,\n        CAL_YR AS CAL_YR,\n        FISCAL_DAY_OF_MO_NBR AS FISCAL_DAY_OF_MO_NBR,\n        FISCAL_DAY_OF_YR_NBR AS FISCAL_DAY_OF_YR_NBR,\n        FISCAL_WK AS FISCAL_WK,\n        FISCAL_WK_NBR AS FISCAL_WK_NBR,\n        FISCAL_MO AS FISCAL_MO,\n        FISCAL_MO_NBR AS FISCAL_MO_NBR,\n        FISCAL_MO_NAME AS FISCAL_MO_NAME,\n        FISCAL_MO_NAME_ABBR AS FISCAL_MO_NAME_ABBR,\n        FISCAL_QTR AS FISCAL_QTR,\n        FISCAL_QTR_NBR AS FISCAL_QTR_NBR,\n        FISCAL_HALF AS FISCAL_HALF,\n        FISCAL_YR AS FISCAL_YR,\n        LYR_WEEK_DT AS LYR_WEEK_DT,\n        LWK_WEEK_DT AS LWK_WEEK_DT,\n        WEEK_DT AS WEEK_DT,\n        EST_TIME_CONV_AMT AS EST_TIME_CONV_AMT,\n        EST_TIME_CONV_HRS AS EST_TIME_CONV_HRS,\n        ES0_TIME_CONV_AMT AS ES0_TIME_CONV_AMT,\n        ES0_TIME_CONV_HRS AS ES0_TIME_CONV_HRS,\n        CST_TIME_CONV_AMT AS CST_TIME_CONV_AMT,\n        CST_TIME_CONV_HRS AS CST_TIME_CONV_HRS,\n        CS0_TIME_CONV_AMT AS CS0_TIME_CONV_AMT,\n        CS0_TIME_CONV_HRS AS CS0_TIME_CONV_HRS,\n        MST_TIME_CONV_AMT AS MST_TIME_CONV_AMT,\n        MST_TIME_CONV_HRS AS MST_TIME_CONV_HRS,\n        MS0_TIME_CONV_AMT AS MS0_TIME_CONV_AMT,\n        MS0_TIME_CONV_HRS AS MS0_TIME_CONV_HRS,\n        PST_TIME_CONV_AMT AS PST_TIME_CONV_AMT,\n        PST_TIME_CONV_HRS AS PST_TIME_CONV_HRS,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        DAYS\"\"\")","df_26.createOrReplaceTempView(\"DAYS_26\")"]},"id":"DAYS","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"SKU_PROFILE","queries":["df_27=spark.sql(\"\"\"\n    SELECT\n        PRODUCT_ID AS PRODUCT_ID,\n        SKU_NBR AS SKU_NBR,\n        SKU_TYPE AS SKU_TYPE,\n        PRIMARY_UPC_ID AS PRIMARY_UPC_ID,\n        STATUS_ID AS STATUS_ID,\n        SUBS_HIST_FLAG AS SUBS_HIST_FLAG,\n        SUBS_CURR_FLAG AS SUBS_CURR_FLAG,\n        SKU_DESC AS SKU_DESC,\n        ALT_DESC AS ALT_DESC,\n        SAP_CATEGORY_ID AS SAP_CATEGORY_ID,\n        SAP_CLASS_ID AS SAP_CLASS_ID,\n        SAP_DEPT_ID AS SAP_DEPT_ID,\n        SAP_DIVISION_ID AS SAP_DIVISION_ID,\n        PRIMARY_VENDOR_ID AS PRIMARY_VENDOR_ID,\n        PARENT_VENDOR_ID AS PARENT_VENDOR_ID,\n        COUNTRY_CD AS COUNTRY_CD,\n        IMPORT_FLAG AS IMPORT_FLAG,\n        HTS_CODE_ID AS HTS_CODE_ID,\n        CONTENTS AS CONTENTS,\n        CONTENTS_UNITS AS CONTENTS_UNITS,\n        WEIGHT_NET_AMT AS WEIGHT_NET_AMT,\n        WEIGHT_UOM_CD AS WEIGHT_UOM_CD,\n        SIZE_DESC AS SIZE_DESC,\n        BUM_QTY AS BUM_QTY,\n        UOM_CD AS UOM_CD,\n        UNIT_NUMERATOR AS UNIT_NUMERATOR,\n        UNIT_DENOMINATOR AS UNIT_DENOMINATOR,\n        BUYER_ID AS BUYER_ID,\n        PURCH_GROUP_ID AS PURCH_GROUP_ID,\n        PURCH_COST_AMT AS PURCH_COST_AMT,\n        NAT_PRICE_US_AMT AS NAT_PRICE_US_AMT,\n        TAX_CLASS_ID AS TAX_CLASS_ID,\n        VALUATION_CLASS_CD AS VALUATION_CLASS_CD,\n        BRAND_CD AS BRAND_CD,\n        BRAND_CLASSIFICATION_ID AS BRAND_CLASSIFICATION_ID,\n        OWNBRAND_FLAG AS OWNBRAND_FLAG,\n        STATELINE_FLAG AS STATELINE_FLAG,\n        SIGN_TYPE_CD AS SIGN_TYPE_CD,\n        OLD_ARTICLE_NBR AS OLD_ARTICLE_NBR,\n        VENDOR_ARTICLE_NBR AS VENDOR_ARTICLE_NBR,\n        INIT_MKDN_DT AS INIT_MKDN_DT,\n        DISC_START_DT AS DISC_START_DT,\n        ADD_DT AS ADD_DT,\n        DELETE_DT AS DELETE_DT,\n        UPDATE_DT AS UPDATE_DT,\n        FIRST_SALE_DT AS FIRST_SALE_DT,\n        LAST_SALE_DT AS LAST_SALE_DT,\n        FIRST_INV_DT AS FIRST_INV_DT,\n        LAST_INV_DT AS LAST_INV_DT,\n        LOAD_DT AS LOAD_DT,\n        BASE_NBR AS BASE_NBR,\n        BP_COLOR_ID AS BP_COLOR_ID,\n        BP_SIZE_ID AS BP_SIZE_ID,\n        BP_BREED_ID AS BP_BREED_ID,\n        BP_ITEM_CONCATENATED AS BP_ITEM_CONCATENATED,\n        BP_AEROSOL_FLAG AS BP_AEROSOL_FLAG,\n        BP_HAZMAT_FLAG AS BP_HAZMAT_FLAG,\n        CANADIAN_HTS_CD AS CANADIAN_HTS_CD,\n        NAT_PRICE_CA_AMT AS NAT_PRICE_CA_AMT,\n        NAT_PRICE_PR_AMT AS NAT_PRICE_PR_AMT,\n        RTV_DEPT_CD AS RTV_DEPT_CD,\n        GL_ACCT_NBR AS GL_ACCT_NBR,\n        ARTICLE_CATEGORY_ID AS ARTICLE_CATEGORY_ID,\n        COMPONENT_FLAG AS COMPONENT_FLAG,\n        ZDISCO_SCHED_TYPE_ID AS ZDISCO_SCHED_TYPE_ID,\n        ZDISCO_MKDN_SCHED_ID AS ZDISCO_MKDN_SCHED_ID,\n        ZDISCO_PID_DT AS ZDISCO_PID_DT,\n        ZDISCO_START_DT AS ZDISCO_START_DT,\n        ZDISCO_INIT_MKDN_DT AS ZDISCO_INIT_MKDN_DT,\n        ZDISCO_DC_DT AS ZDISCO_DC_DT,\n        ZDISCO_STR_DT AS ZDISCO_STR_DT,\n        ZDISCO_STR_OWNRSHP_DT AS ZDISCO_STR_OWNRSHP_DT,\n        ZDISCO_STR_WRT_OFF_DT AS ZDISCO_STR_WRT_OFF_DT,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        SKU_PROFILE\"\"\")","df_27.createOrReplaceTempView(\"SKU_PROFILE_27\")"]},"id":"SKU_PROFILE","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"SITE_PROFILE","queries":["df_28=spark.sql(\"\"\"\n    SELECT\n        LOCATION_ID AS LOCATION_ID,\n        LOCATION_TYPE_ID AS LOCATION_TYPE_ID,\n        STORE_NBR AS STORE_NBR,\n        STORE_NAME AS STORE_NAME,\n        STORE_TYPE_ID AS STORE_TYPE_ID,\n        STORE_OPEN_CLOSE_FLAG AS STORE_OPEN_CLOSE_FLAG,\n        COMPANY_ID AS COMPANY_ID,\n        REGION_ID AS REGION_ID,\n        DISTRICT_ID AS DISTRICT_ID,\n        PRICE_ZONE_ID AS PRICE_ZONE_ID,\n        PRICE_AD_ZONE_ID AS PRICE_AD_ZONE_ID,\n        REPL_DC_NBR AS REPL_DC_NBR,\n        REPL_FISH_DC_NBR AS REPL_FISH_DC_NBR,\n        REPL_FWD_DC_NBR AS REPL_FWD_DC_NBR,\n        SQ_FEET_RETAIL AS SQ_FEET_RETAIL,\n        SQ_FEET_TOTAL AS SQ_FEET_TOTAL,\n        SITE_ADDRESS AS SITE_ADDRESS,\n        SITE_CITY AS SITE_CITY,\n        STATE_CD AS STATE_CD,\n        COUNTRY_CD AS COUNTRY_CD,\n        POSTAL_CD AS POSTAL_CD,\n        SITE_MAIN_TELE_NO AS SITE_MAIN_TELE_NO,\n        SITE_GROOM_TELE_NO AS SITE_GROOM_TELE_NO,\n        SITE_EMAIL_ADDRESS AS SITE_EMAIL_ADDRESS,\n        SITE_SALES_FLAG AS SITE_SALES_FLAG,\n        EQUINE_MERCH_ID AS EQUINE_MERCH_ID,\n        EQUINE_SITE_ID AS EQUINE_SITE_ID,\n        EQUINE_SITE_OPEN_DT AS EQUINE_SITE_OPEN_DT,\n        GEO_LATITUDE_NBR AS GEO_LATITUDE_NBR,\n        GEO_LONGITUDE_NBR AS GEO_LONGITUDE_NBR,\n        PETSMART_DMA_CD AS PETSMART_DMA_CD,\n        LOYALTY_PGM_TYPE_ID AS LOYALTY_PGM_TYPE_ID,\n        LOYALTY_PGM_STATUS_ID AS LOYALTY_PGM_STATUS_ID,\n        LOYALTY_PGM_START_DT AS LOYALTY_PGM_START_DT,\n        LOYALTY_PGM_CHANGE_DT AS LOYALTY_PGM_CHANGE_DT,\n        BP_COMPANY_NBR AS BP_COMPANY_NBR,\n        BP_GL_ACCT AS BP_GL_ACCT,\n        TP_LOC_FLAG AS TP_LOC_FLAG,\n        TP_ACTIVE_CNT AS TP_ACTIVE_CNT,\n        PROMO_LABEL_CD AS PROMO_LABEL_CD,\n        PARENT_LOCATION_ID AS PARENT_LOCATION_ID,\n        LOCATION_NBR AS LOCATION_NBR,\n        TIME_ZONE_ID AS TIME_ZONE_ID,\n        DELV_SERVICE_CLASS_ID AS DELV_SERVICE_CLASS_ID,\n        PICK_SERVICE_CLASS_ID AS PICK_SERVICE_CLASS_ID,\n        SITE_LOGIN_ID AS SITE_LOGIN_ID,\n        SITE_MANAGER_ID AS SITE_MANAGER_ID,\n        SITE_OPEN_YRS_AMT AS SITE_OPEN_YRS_AMT,\n        HOTEL_FLAG AS HOTEL_FLAG,\n        DAYCAMP_FLAG AS DAYCAMP_FLAG,\n        VET_FLAG AS VET_FLAG,\n        DIST_MGR_NAME AS DIST_MGR_NAME,\n        DIST_SVC_MGR_NAME AS DIST_SVC_MGR_NAME,\n        REGION_VP_NAME AS REGION_VP_NAME,\n        REGION_TRAINER_NAME AS REGION_TRAINER_NAME,\n        ASSET_PROTECT_NAME AS ASSET_PROTECT_NAME,\n        SITE_COUNTY AS SITE_COUNTY,\n        SITE_FAX_NO AS SITE_FAX_NO,\n        SFT_OPEN_DT AS SFT_OPEN_DT,\n        DM_EMAIL_ADDRESS AS DM_EMAIL_ADDRESS,\n        DSM_EMAIL_ADDRESS AS DSM_EMAIL_ADDRESS,\n        RVP_EMAIL_ADDRESS AS RVP_EMAIL_ADDRESS,\n        TRADE_AREA AS TRADE_AREA,\n        FDLPS_NAME AS FDLPS_NAME,\n        FDLPS_EMAIL AS FDLPS_EMAIL,\n        OVERSITE_MGR_NAME AS OVERSITE_MGR_NAME,\n        OVERSITE_MGR_EMAIL AS OVERSITE_MGR_EMAIL,\n        SAFETY_DIRECTOR_NAME AS SAFETY_DIRECTOR_NAME,\n        SAFETY_DIRECTOR_EMAIL AS SAFETY_DIRECTOR_EMAIL,\n        RETAIL_MANAGER_SAFETY_NAME AS RETAIL_MANAGER_SAFETY_NAME,\n        RETAIL_MANAGER_SAFETY_EMAIL AS RETAIL_MANAGER_SAFETY_EMAIL,\n        AREA_DIRECTOR_NAME AS AREA_DIRECTOR_NAME,\n        AREA_DIRECTOR_EMAIL AS AREA_DIRECTOR_EMAIL,\n        DC_GENERAL_MANAGER_NAME AS DC_GENERAL_MANAGER_NAME,\n        DC_GENERAL_MANAGER_EMAIL AS DC_GENERAL_MANAGER_EMAIL,\n        ASST_DC_GENERAL_MANAGER_NAME1 AS ASST_DC_GENERAL_MANAGER_NAME1,\n        ASST_DC_GENERAL_MANAGER_EMAIL1 AS ASST_DC_GENERAL_MANAGER_EMAIL1,\n        ASST_DC_GENERAL_MANAGER_NAME2 AS ASST_DC_GENERAL_MANAGER_NAME2,\n        ASST_DC_GENERAL_MANAGER_EMAIL2 AS ASST_DC_GENERAL_MANAGER_EMAIL2,\n        REGIONAL_DC_SAFETY_MGR_NAME AS REGIONAL_DC_SAFETY_MGR_NAME,\n        REGIONAL_DC_SAFETY_MGR_EMAIL AS REGIONAL_DC_SAFETY_MGR_EMAIL,\n        DC_PEOPLE_SUPERVISOR_NAME AS DC_PEOPLE_SUPERVISOR_NAME,\n        DC_PEOPLE_SUPERVISOR_EMAIL AS DC_PEOPLE_SUPERVISOR_EMAIL,\n        PEOPLE_MANAGER_NAME AS PEOPLE_MANAGER_NAME,\n        PEOPLE_MANAGER_EMAIL AS PEOPLE_MANAGER_EMAIL,\n        ASSET_PROT_DIR_NAME AS ASSET_PROT_DIR_NAME,\n        ASSET_PROT_DIR_EMAIL AS ASSET_PROT_DIR_EMAIL,\n        SR_REG_ASSET_PROT_MGR_NAME AS SR_REG_ASSET_PROT_MGR_NAME,\n        SR_REG_ASSET_PROT_MGR_EMAIL AS SR_REG_ASSET_PROT_MGR_EMAIL,\n        REG_ASSET_PROT_MGR_NAME AS REG_ASSET_PROT_MGR_NAME,\n        REG_ASSET_PROT_MGR_EMAIL AS REG_ASSET_PROT_MGR_EMAIL,\n        ASSET_PROTECT_EMAIL AS ASSET_PROTECT_EMAIL,\n        TP_START_DT AS TP_START_DT,\n        OPEN_DT AS OPEN_DT,\n        GR_OPEN_DT AS GR_OPEN_DT,\n        CLOSE_DT AS CLOSE_DT,\n        HOTEL_OPEN_DT AS HOTEL_OPEN_DT,\n        ADD_DT AS ADD_DT,\n        DELETE_DT AS DELETE_DT,\n        UPDATE_DT AS UPDATE_DT,\n        LOAD_DT AS LOAD_DT,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        SITE_PROFILE\"\"\")","df_28.createOrReplaceTempView(\"SITE_PROFILE_28\")"]},"id":"SITE_PROFILE","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Source Definition","label":"MA_EVENT_RESTATE_HIST","queries":["df_29=spark.sql(\"\"\"\n    SELECT\n        LOAD_DT AS LOAD_DT,\n        MA_EVENT_ID AS MA_EVENT_ID,\n        OFFER_ID AS OFFER_ID,\n        SAP_DEPT_ID AS SAP_DEPT_ID,\n        PRODUCT_ID AS PRODUCT_ID,\n        COUNTRY_CD AS COUNTRY_CD,\n        START_DT AS START_DT,\n        END_DT AS END_DT,\n        MA_EVENT_TYPE_ID AS MA_EVENT_TYPE_ID,\n        MA_EVENT_SOURCE_ID AS MA_EVENT_SOURCE_ID,\n        LOCATION_ID AS LOCATION_ID,\n        MOVEMENT_ID AS MOVEMENT_ID,\n        VALUATION_CLASS_CD AS VALUATION_CLASS_CD,\n        GL_ACCT_NBR AS GL_ACCT_NBR,\n        LOCATION_TYPE_ID AS LOCATION_TYPE_ID,\n        ROYALTY_BRAND_ID AS ROYALTY_BRAND_ID,\n        BRAND_CD AS BRAND_CD,\n        MA_FORMULA_CD AS MA_FORMULA_CD,\n        FISCAL_MO AS FISCAL_MO,\n        SAP_CATEGORY_ID AS SAP_CATEGORY_ID,\n        FROM_LOCATION_ID AS FROM_LOCATION_ID,\n        SOURCE_VENDOR AS SOURCE_VENDOR,\n        MA_EVENT_DESC AS MA_EVENT_DESC,\n        EM_VENDOR_FUNDING_ID AS EM_VENDOR_FUNDING_ID,\n        EM_COMMENT AS EM_COMMENT,\n        EM_BILL_ALT_VENDOR_FLAG AS EM_BILL_ALT_VENDOR_FLAG,\n        EM_ALT_VENDOR_ID AS EM_ALT_VENDOR_ID,\n        EM_ALT_VENDOR_NAME AS EM_ALT_VENDOR_NAME,\n        EM_ALT_VENDOR_COUNTRY_CD AS EM_ALT_VENDOR_COUNTRY_CD,\n        EM_VENDOR_ID AS EM_VENDOR_ID,\n        EM_VENDOR_NAME AS EM_VENDOR_NAME,\n        EM_VENDOR_COUNTRY_CD AS EM_VENDOR_COUNTRY_CD,\n        VENDOR_NAME_TXT AS VENDOR_NAME_TXT,\n        MA_PCT_IND AS MA_PCT_IND,\n        MA_AMT AS MA_AMT,\n        MA_MAX_AMT AS MA_MAX_AMT,\n        INS_UPD_DEL_FLAG AS INS_UPD_DEL_FLAG,\n        monotonically_increasing_id() AS Monotonically_Increasing_Id \n    FROM\n        MA_EVENT_RESTATE_HIST\"\"\")","df_29.createOrReplaceTempView(\"MA_EVENT_RESTATE_HIST_29\")"]},"id":"MA_EVENT_RESTATE_HIST","position":{"x":0,"y":0},"type":"normalNode"},{"data":{"transformationType":"Target Definition","label":"SQL_TRANSFORM_DUMMY_TARGET","queries":["spark.sql(\"\"\"INSERT INTO SQL_TRANSFORM_DUMMY_TARGET SELECT DUPLICATE_ROW_CNT AS DUPLICATE_ROW_CNT,\nSQL_TRANSFORM_ERROR AS SQL_TRANSFORM_ERROR,\nABORT_SESSION AS ABORT_SESSION FROM EXP_ABORT_SESSION_18\"\"\")"]},"id":"SQL_TRANSFORM_DUMMY_TARGET","position":{"x":0,"y":0},"type":"normalNode"}]}