# Databricks notebook source
# MAGIC %run "./udf_informatica"

# COMMAND ----------


from pyspark.sql.types import *

spark.sql("use DELTA_TRAINING")
spark.sql("set spark.sql.legacy.timeParserPolicy = LEGACY")


# COMMAND ----------

# DBTITLE 1, SALES_RANKING_SALES_PRE_0

df_0=spark.sql("""
    SELECT
        WEEK_DT AS WEEK_DT,
        LOCATION_ID AS LOCATION_ID,
        TOTAL_52WK_SALES_AMT AS TOTAL_52WK_SALES_AMT,
        MERCH_52WK_SALES_AMT AS MERCH_52WK_SALES_AMT,
        SERVICES_52WK_SALES_AMT AS SERVICES_52WK_SALES_AMT,
        SALON_52WK_SALES_AMT AS SALON_52WK_SALES_AMT,
        TRAINING_52WK_SALES_AMT AS TRAINING_52WK_SALES_AMT,
        HOTEL_DDC_52WK_SALES_AMT AS HOTEL_DDC_52WK_SALES_AMT,
        CONSUMABLES_52WK_SALES_AMT AS CONSUMABLES_52WK_SALES_AMT,
        HARDGOODS_52WK_SALES_AMT AS HARDGOODS_52WK_SALES_AMT,
        SPECIALTY_52WK_SALES_AMT AS SPECIALTY_52WK_SALES_AMT,
        COMP_CURR_FLAG AS COMP_CURR_FLAG,
        SALES_CURR_FLAG AS SALES_CURR_FLAG,
        LOCATION_TYPE_ID AS LOCATION_TYPE_ID,
        monotonically_increasing_id() AS Monotonically_Increasing_Id 
    FROM
        SALES_RANKING_SALES_PRE""")

df_0.createOrReplaceTempView("SALES_RANKING_SALES_PRE_0")

# COMMAND ----------

# DBTITLE 1, SQ_Shortcut_to_SALES_RANKING_SALES_PRE_1

df_1=spark.sql("""
    SELECT
        WEEK_DT AS WEEK_DT,
        LOCATION_ID AS LOCATION_ID,
        TOTAL_52WK_SALES_AMT AS TOTAL_52WK_SALES_AMT,
        MERCH_52WK_SALES_AMT AS MERCH_52WK_SALES_AMT,
        SERVICES_52WK_SALES_AMT AS SERVICES_52WK_SALES_AMT,
        SALON_52WK_SALES_AMT AS SALON_52WK_SALES_AMT,
        TRAINING_52WK_SALES_AMT AS TRAINING_52WK_SALES_AMT,
        HOTEL_DDC_52WK_SALES_AMT AS HOTEL_DDC_52WK_SALES_AMT,
        CONSUMABLES_52WK_SALES_AMT AS CONSUMABLES_52WK_SALES_AMT,
        HARDGOODS_52WK_SALES_AMT AS HARDGOODS_52WK_SALES_AMT,
        SPECIALTY_52WK_SALES_AMT AS SPECIALTY_52WK_SALES_AMT,
        COMP_CURR_FLAG AS COMP_CURR_FLAG,
        SALES_CURR_FLAG AS SALES_CURR_FLAG,
        LOCATION_TYPE_ID AS LOCATION_TYPE_ID,
        Monotonically_Increasing_Id AS Monotonically_Increasing_Id 
    FROM
        SALES_RANKING_SALES_PRE_0""")

df_1.createOrReplaceTempView("SQ_Shortcut_to_SALES_RANKING_SALES_PRE_1")

# COMMAND ----------

# DBTITLE 1, FIL_ONLY_NON_DOTCOM_STORES_2

df_2=spark.sql("""
    SELECT
        WEEK_DT AS WEEK_DT,
        TOTAL_52WK_SALES_AMT AS TOTAL_52WK_SALES_AMT,
        MERCH_52WK_SALES_AMT AS MERCH_52WK_SALES_AMT,
        SERVICES_52WK_SALES_AMT AS SERVICES_52WK_SALES_AMT,
        SALON_52WK_SALES_AMT AS SALON_52WK_SALES_AMT,
        TRAINING_52WK_SALES_AMT AS TRAINING_52WK_SALES_AMT,
        HOTEL_DDC_52WK_SALES_AMT AS HOTEL_DDC_52WK_SALES_AMT,
        CONSUMABLES_52WK_SALES_AMT AS CONSUMABLES_52WK_SALES_AMT,
        HARDGOODS_52WK_SALES_AMT AS HARDGOODS_52WK_SALES_AMT,
        SPECIALTY_52WK_SALES_AMT AS SPECIALTY_52WK_SALES_AMT,
        COMP_CURR_FLAG AS COMP_CURR_FLAG,
        SALES_CURR_FLAG AS SALES_CURR_FLAG,
        LOCATION_TYPE_ID AS LOCATION_TYPE_ID,
        Monotonically_Increasing_Id AS Monotonically_Increasing_Id 
    FROM
        SQ_Shortcut_to_SALES_RANKING_SALES_PRE_1 
    WHERE
        COMP_CURR_FLAG = 1 
        AND LOCATION_TYPE_ID = 8""")

df_2.createOrReplaceTempView("FIL_ONLY_NON_DOTCOM_STORES_2")

# COMMAND ----------

# DBTITLE 1, AGG_WEEK_TOTALS_3

df_3=spark.sql("""
    SELECT
        WEEK_DT AS WEEK_DT,
        IFF(ISNULL(SUM(in_TOTAL_52WK_SALES_AMT)),
        0,
        SUM(in_TOTAL_52WK_SALES_AMT)) AS TOTAL_52WK_SALES_AMT,
        IFF(ISNULL(SUM(in_MERCH_52WK_SALES_AMT)),
        0,
        SUM(in_MERCH_52WK_SALES_AMT)) AS MERCH_52WK_SALES_AMT,
        IFF(ISNULL(SUM(in_SERVICES_52WK_SALES_AMT)),
        0,
        SUM(in_SERVICES_52WK_SALES_AMT)) AS SERVICES_52WK_SALES_AMT,
        IFF(ISNULL(SUM(in_SALON_52WK_SALES_AMT)),
        0,
        SUM(in_SALON_52WK_SALES_AMT)) AS SALON_52WK_SALES_AMT,
        IFF(ISNULL(SUM(in_TRAINING_52WK_SALES_AMT)),
        0,
        SUM(in_TRAINING_52WK_SALES_AMT)) AS TRAINING_52WK_SALES_AMT,
        IFF(ISNULL(SUM(in_HOTEL_DDC_52WK_SALES_AMT)),
        0,
        SUM(in_HOTEL_DDC_52WK_SALES_AMT)) AS HOTEL_DDC_52WK_SALES_AMT,
        IFF(ISNULL(SUM(in_CONSUMABLES_52WK_SALES_AMT)),
        0,
        SUM(in_CONSUMABLES_52WK_SALES_AMT)) AS CONSUMABLES_52WK_SALES_AMT,
        IFF(ISNULL(SUM(in_HARDGOODS_52WK_SALES_AMT)),
        0,
        SUM(in_HARDGOODS_52WK_SALES_AMT)) AS HARDGOODS_52WK_SALES_AMT,
        IFF(ISNULL(SUM(in_SPECIALTY_52WK_SALES_AMT)),
        0,
        SUM(in_SPECIALTY_52WK_SALES_AMT)) AS SPECIALTY_52WK_SALES_AMT 
    FROM
        FIL_ONLY_NON_DOTCOM_STORES_2 
    GROUP BY
        WEEK_DT""")

df_3.createOrReplaceTempView("AGG_WEEK_TOTALS_3")

# COMMAND ----------

# DBTITLE 1, SALES_RANKING_TOTALS_PRE

spark.sql("""INSERT INTO SALES_RANKING_TOTALS_PRE SELECT WEEK_DT AS WEEK_DT,
TOTAL_52WK_SALES_AMT AS TOTAL_52WK_COMP_STORES_AMT,
MERCH_52WK_SALES_AMT AS MERCH_52WK_COMP_STORES_AMT,
SERVICES_52WK_SALES_AMT AS SERVICES_52WK_COMP_STORES_AMT,
SALON_52WK_SALES_AMT AS SALON_52WK_COMP_STORES_AMT,
TRAINING_52WK_SALES_AMT AS TRAINING_52WK_COMP_STORES_AMT,
HOTEL_DDC_52WK_SALES_AMT AS HOTEL_DDC_52WK_COMP_STORES_AMT,
CONSUMABLES_52WK_SALES_AMT AS CONSUMABLES_52WK_COMP_STORES_AMT,
HARDGOODS_52WK_SALES_AMT AS HARDGOODS_52WK_COMP_STORES_AMT,
SPECIALTY_52WK_SALES_AMT AS SPECIALTY_52WK_COMP_STORES_AMT FROM AGG_WEEK_TOTALS_3""")
