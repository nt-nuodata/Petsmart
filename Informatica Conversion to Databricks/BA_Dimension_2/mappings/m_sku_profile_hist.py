# Databricks notebook source
# MAGIC %run "./udf_informatica"

# COMMAND ----------


from pyspark.sql.types import *

spark.sql("use DELTA_TRAINING")
spark.sql("set spark.sql.legacy.timeParserPolicy = LEGACY")


# COMMAND ----------

# DBTITLE 1, SKU_PROFILE_HIST_0

df_0=spark.sql("""
    SELECT
        REC_START_DT AS REC_START_DT,
        PRODUCT_ID AS PRODUCT_ID,
        STATUS_ID AS STATUS_ID,
        STATUS_ID_IND AS STATUS_ID_IND,
        BRAND_CD AS BRAND_CD,
        BRAND_CD_IND AS BRAND_CD_IND,
        OWNBRAND_FLAG AS OWNBRAND_FLAG,
        OWNBRAND_FLAG_IND AS OWNBRAND_FLAG_IND,
        BRAND_CLASSIFICATION_ID AS BRAND_CLASSIFICATION_ID,
        BRAND_CLASSIFICATION_ID_IND AS BRAND_CLASSIFICATION_ID_IND,
        REC_END_DT AS REC_END_DT,
        UPDATE_DT AS UPDATE_DT,
        LOAD_DT AS LOAD_DT,
        monotonically_increasing_id() AS Monotonically_Increasing_Id 
    FROM
        SKU_PROFILE_HIST""")

df_0.createOrReplaceTempView("SKU_PROFILE_HIST_0")

# COMMAND ----------

# DBTITLE 1, SQ_Shortcut_to_SKU_PROFILE_HIST_1

df_1=spark.sql("""
    SELECT
        REC_START_DT AS REC_START_DT,
        PRODUCT_ID AS PRODUCT_ID,
        STATUS_ID AS STATUS_ID,
        STATUS_ID_IND AS STATUS_ID_IND,
        BRAND_CD AS BRAND_CD,
        BRAND_CD_IND AS BRAND_CD_IND,
        OWNBRAND_FLAG AS OWNBRAND_FLAG,
        OWNBRAND_FLAG_IND AS OWNBRAND_FLAG_IND,
        BRAND_CLASSIFICATION_ID AS BRAND_CLASSIFICATION_ID,
        BRAND_CLASSIFICATION_ID_IND AS BRAND_CLASSIFICATION_ID_IND,
        REC_END_DT AS REC_END_DT,
        UPDATE_DT AS UPDATE_DT,
        LOAD_DT AS LOAD_DT,
        Monotonically_Increasing_Id AS Monotonically_Increasing_Id 
    FROM
        SKU_PROFILE_HIST_0 
    WHERE
        SKU_PROFILE_HIST.REC_END_DT = '12/31/9999'""")

df_1.createOrReplaceTempView("SQ_Shortcut_to_SKU_PROFILE_HIST_1")

# COMMAND ----------

# DBTITLE 1, SKU_PROFILE_2

df_2=spark.sql("""
    SELECT
        PRODUCT_ID AS PRODUCT_ID,
        SKU_NBR AS SKU_NBR,
        SKU_TYPE AS SKU_TYPE,
        PRIMARY_UPC_ID AS PRIMARY_UPC_ID,
        STATUS_ID AS STATUS_ID,
        SUBS_HIST_FLAG AS SUBS_HIST_FLAG,
        SUBS_CURR_FLAG AS SUBS_CURR_FLAG,
        SKU_DESC AS SKU_DESC,
        ALT_DESC AS ALT_DESC,
        SAP_CATEGORY_ID AS SAP_CATEGORY_ID,
        SAP_CLASS_ID AS SAP_CLASS_ID,
        SAP_DEPT_ID AS SAP_DEPT_ID,
        SAP_DIVISION_ID AS SAP_DIVISION_ID,
        PRIMARY_VENDOR_ID AS PRIMARY_VENDOR_ID,
        PARENT_VENDOR_ID AS PARENT_VENDOR_ID,
        COUNTRY_CD AS COUNTRY_CD,
        IMPORT_FLAG AS IMPORT_FLAG,
        HTS_CODE_ID AS HTS_CODE_ID,
        CONTENTS AS CONTENTS,
        CONTENTS_UNITS AS CONTENTS_UNITS,
        WEIGHT_NET_AMT AS WEIGHT_NET_AMT,
        WEIGHT_UOM_CD AS WEIGHT_UOM_CD,
        SIZE_DESC AS SIZE_DESC,
        BUM_QTY AS BUM_QTY,
        UOM_CD AS UOM_CD,
        UNIT_NUMERATOR AS UNIT_NUMERATOR,
        UNIT_DENOMINATOR AS UNIT_DENOMINATOR,
        BUYER_ID AS BUYER_ID,
        PURCH_GROUP_ID AS PURCH_GROUP_ID,
        PURCH_COST_AMT AS PURCH_COST_AMT,
        NAT_PRICE_US_AMT AS NAT_PRICE_US_AMT,
        TAX_CLASS_ID AS TAX_CLASS_ID,
        VALUATION_CLASS_CD AS VALUATION_CLASS_CD,
        BRAND_CD AS BRAND_CD,
        BRAND_CLASSIFICATION_ID AS BRAND_CLASSIFICATION_ID,
        OWNBRAND_FLAG AS OWNBRAND_FLAG,
        STATELINE_FLAG AS STATELINE_FLAG,
        SIGN_TYPE_CD AS SIGN_TYPE_CD,
        OLD_ARTICLE_NBR AS OLD_ARTICLE_NBR,
        VENDOR_ARTICLE_NBR AS VENDOR_ARTICLE_NBR,
        INIT_MKDN_DT AS INIT_MKDN_DT,
        DISC_START_DT AS DISC_START_DT,
        ADD_DT AS ADD_DT,
        DELETE_DT AS DELETE_DT,
        UPDATE_DT AS UPDATE_DT,
        FIRST_SALE_DT AS FIRST_SALE_DT,
        LAST_SALE_DT AS LAST_SALE_DT,
        FIRST_INV_DT AS FIRST_INV_DT,
        LAST_INV_DT AS LAST_INV_DT,
        LOAD_DT AS LOAD_DT,
        BASE_NBR AS BASE_NBR,
        BP_COLOR_ID AS BP_COLOR_ID,
        BP_SIZE_ID AS BP_SIZE_ID,
        BP_BREED_ID AS BP_BREED_ID,
        BP_ITEM_CONCATENATED AS BP_ITEM_CONCATENATED,
        BP_AEROSOL_FLAG AS BP_AEROSOL_FLAG,
        BP_HAZMAT_FLAG AS BP_HAZMAT_FLAG,
        CANADIAN_HTS_CD AS CANADIAN_HTS_CD,
        NAT_PRICE_CA_AMT AS NAT_PRICE_CA_AMT,
        NAT_PRICE_PR_AMT AS NAT_PRICE_PR_AMT,
        RTV_DEPT_CD AS RTV_DEPT_CD,
        GL_ACCT_NBR AS GL_ACCT_NBR,
        ARTICLE_CATEGORY_ID AS ARTICLE_CATEGORY_ID,
        COMPONENT_FLAG AS COMPONENT_FLAG,
        ZDISCO_SCHED_TYPE_ID AS ZDISCO_SCHED_TYPE_ID,
        ZDISCO_MKDN_SCHED_ID AS ZDISCO_MKDN_SCHED_ID,
        ZDISCO_PID_DT AS ZDISCO_PID_DT,
        ZDISCO_START_DT AS ZDISCO_START_DT,
        ZDISCO_INIT_MKDN_DT AS ZDISCO_INIT_MKDN_DT,
        ZDISCO_DC_DT AS ZDISCO_DC_DT,
        ZDISCO_STR_DT AS ZDISCO_STR_DT,
        ZDISCO_STR_OWNRSHP_DT AS ZDISCO_STR_OWNRSHP_DT,
        ZDISCO_STR_WRT_OFF_DT AS ZDISCO_STR_WRT_OFF_DT,
        monotonically_increasing_id() AS Monotonically_Increasing_Id 
    FROM
        SKU_PROFILE""")

df_2.createOrReplaceTempView("SKU_PROFILE_2")

# COMMAND ----------

# DBTITLE 1, SQ_Shortcut_To_SKU_PROFILE_3

df_3=spark.sql("""
    SELECT
        PRODUCT_ID AS PRODUCT_ID,
        SKU_NBR AS SKU_NBR,
        SKU_TYPE AS SKU_TYPE,
        PRIMARY_UPC_ID AS PRIMARY_UPC_ID,
        STATUS_ID AS STATUS_ID,
        SUBS_HIST_FLAG AS SUBS_HIST_FLAG,
        SUBS_CURR_FLAG AS SUBS_CURR_FLAG,
        SKU_DESC AS SKU_DESC,
        ALT_DESC AS ALT_DESC,
        SAP_CATEGORY_ID AS SAP_CATEGORY_ID,
        SAP_CLASS_ID AS SAP_CLASS_ID,
        SAP_DEPT_ID AS SAP_DEPT_ID,
        SAP_DIVISION_ID AS SAP_DIVISION_ID,
        PRIMARY_VENDOR_ID AS PRIMARY_VENDOR_ID,
        PARENT_VENDOR_ID AS PARENT_VENDOR_ID,
        COUNTRY_CD AS COUNTRY_CD,
        IMPORT_FLAG AS IMPORT_FLAG,
        HTS_CODE_ID AS HTS_CODE_ID,
        CONTENTS AS CONTENTS,
        CONTENTS_UNITS AS CONTENTS_UNITS,
        WEIGHT_NET_AMT AS WEIGHT_NET_AMT,
        WEIGHT_UOM_CD AS WEIGHT_UOM_CD,
        SIZE_DESC AS SIZE_DESC,
        BUM_QTY AS BUM_QTY,
        UOM_CD AS UOM_CD,
        UNIT_NUMERATOR AS UNIT_NUMERATOR,
        UNIT_DENOMINATOR AS UNIT_DENOMINATOR,
        BUYER_ID AS BUYER_ID,
        PURCH_GROUP_ID AS PURCH_GROUP_ID,
        PURCH_COST_AMT AS PURCH_COST_AMT,
        NAT_PRICE_US_AMT AS NAT_PRICE_US_AMT,
        TAX_CLASS_ID AS TAX_CLASS_ID,
        VALUATION_CLASS_CD AS VALUATION_CLASS_CD,
        BRAND_CD AS BRAND_CD,
        BRAND_CLASSIFICATION_ID AS BRAND_CLASSIFICATION_ID,
        OWNBRAND_FLAG AS OWNBRAND_FLAG,
        STATELINE_FLAG AS STATELINE_FLAG,
        SIGN_TYPE_CD AS SIGN_TYPE_CD,
        OLD_ARTICLE_NBR AS OLD_ARTICLE_NBR,
        VENDOR_ARTICLE_NBR AS VENDOR_ARTICLE_NBR,
        INIT_MKDN_DT AS INIT_MKDN_DT,
        DISC_START_DT AS DISC_START_DT,
        ADD_DT AS ADD_DT,
        DELETE_DT AS DELETE_DT,
        UPDATE_DT AS UPDATE_DT,
        FIRST_SALE_DT AS FIRST_SALE_DT,
        LAST_SALE_DT AS LAST_SALE_DT,
        FIRST_INV_DT AS FIRST_INV_DT,
        LAST_INV_DT AS LAST_INV_DT,
        LOAD_DT AS LOAD_DT,
        BASE_NBR AS BASE_NBR,
        BP_COLOR_ID AS BP_COLOR_ID,
        BP_SIZE_ID AS BP_SIZE_ID,
        BP_BREED_ID AS BP_BREED_ID,
        BP_ITEM_CONCATENATED AS BP_ITEM_CONCATENATED,
        BP_AEROSOL_FLAG AS BP_AEROSOL_FLAG,
        BP_HAZMAT_FLAG AS BP_HAZMAT_FLAG,
        CANADIAN_HTS_CD AS CANADIAN_HTS_CD,
        NAT_PRICE_CA_AMT AS NAT_PRICE_CA_AMT,
        NAT_PRICE_PR_AMT AS NAT_PRICE_PR_AMT,
        RTV_DEPT_CD AS RTV_DEPT_CD,
        GL_ACCT_NBR AS GL_ACCT_NBR,
        ARTICLE_CATEGORY_ID AS ARTICLE_CATEGORY_ID,
        COMPONENT_FLAG AS COMPONENT_FLAG,
        ZDISCO_SCHED_TYPE_ID AS ZDISCO_SCHED_TYPE_ID,
        ZDISCO_MKDN_SCHED_ID AS ZDISCO_MKDN_SCHED_ID,
        ZDISCO_PID_DT AS ZDISCO_PID_DT,
        ZDISCO_START_DT AS ZDISCO_START_DT,
        ZDISCO_INIT_MKDN_DT AS ZDISCO_INIT_MKDN_DT,
        ZDISCO_DC_DT AS ZDISCO_DC_DT,
        ZDISCO_STR_DT AS ZDISCO_STR_DT,
        ZDISCO_STR_OWNRSHP_DT AS ZDISCO_STR_OWNRSHP_DT,
        ZDISCO_STR_WRT_OFF_DT AS ZDISCO_STR_WRT_OFF_DT,
        Monotonically_Increasing_Id AS Monotonically_Increasing_Id 
    FROM
        SKU_PROFILE_2""")

df_3.createOrReplaceTempView("SQ_Shortcut_To_SKU_PROFILE_3")

# COMMAND ----------

# DBTITLE 1, JNRTRANS_4

df_4=spark.sql("""
    SELECT
        DETAIL.PRODUCT_ID AS PRODUCT_ID,
        DETAIL.SKU_TYPE AS SKU_TYPE,
        DETAIL.PRIMARY_UPC_ID AS PRIMARY_UPC_ID,
        DETAIL.STATUS_ID AS STATUS_ID,
        DETAIL.BRAND_CD AS BRAND_CD,
        DETAIL.BRAND_CLASSIFICATION_ID AS BRAND_CLASSIFICATION_ID,
        DETAIL.OWNBRAND_FLAG AS OWNBRAND_FLAG,
        MASTER.REC_START_DT AS HIST_REC_START_DT,
        MASTER.PRODUCT_ID AS HIST_PRODUCT_ID,
        MASTER.STATUS_ID AS HIST_STATUS_ID,
        MASTER.STATUS_ID_IND AS HIST_STATUS_ID_IND,
        MASTER.BRAND_CD AS HIST_BRAND_CD,
        MASTER.BRAND_CD_IND AS HIST_BRAND_CD_IND,
        MASTER.OWNBRAND_FLAG AS HIST_OWNBRAND_FLAG,
        MASTER.OWNBRAND_FLAG_IND AS HIST_OWNBRAND_FLAG_IND,
        MASTER.BRAND_CLASSIFICATION_ID AS HIST_BRAND_CLASSIFICATION_ID,
        MASTER.BRAND_CLASSIFICATION_ID_IND AS HIST_BRAND_CLASSIFICATION_ID_IND,
        MASTER.REC_END_DT AS HIST_REC_END_DT,
        MASTER.UPDATE_DT AS HIST_UPDATE_D1,
        MASTER.LOAD_DT AS HIST_LOAD_DT,
        MASTER.Monotonically_Increasing_Id AS Monotonically_Increasing_Id 
    FROM
        SQ_Shortcut_to_SKU_PROFILE_HIST_1 MASTER 
    LEFT JOIN
        SQ_Shortcut_To_SKU_PROFILE_3 DETAIL 
            ON MASTER.PRODUCT_ID = DETAIL.PRODUCT_ID""")

df_4.createOrReplaceTempView("JNRTRANS_4")

# COMMAND ----------

# DBTITLE 1, Exp_INSERT_New_Record_5

df_5=spark.sql("""SELECT SYSDATE AS REC_START_DT,
PRODUCT_ID AS PRODUCT_ID,
STATUS_ID AS STATUS_ID,
1 AS STATUS_ID_IND,
BRAND_CD AS BRAND_CD,
1 AS BRAND_CD_IND,
OWNBRAND_FLAG AS OWNBRAND_FLAG,
1 AS OWNBRAND_FLAG_IND,
BRAND_CLASSIFICATION_ID AS BRAND_CLASSIFICATION_ID,
1 AS BRAND_CLASSIFICATION_ID_IND,
TO_DATE('12/31/9999', 'MM/DD/YYYY') AS REC_END_DT,
SYSDATE AS UPDATE_DT,
SYSDATE AS LOAD_DT,
'I' AS LOAD_STRATEGY_FLAG,
Monotonically_Increasing_Id AS Monotonically_Increasing_Id FROM null""")

df_5.createOrReplaceTempView("Exp_INSERT_New_Record_5")

# COMMAND ----------

# DBTITLE 1, Exp_INSERT_Open_New_record_6

df_6=spark.sql("""SELECT SYSDATE AS REC_START_DT,
PRODUCT_ID4 AS PRODUCT_ID,
STATUS_ID4 AS STATUS_ID,
IIF(STATUS_ID4 != HIST_STATUS_ID4, 1, 0) AS STATUS_ID_IND,
BRAND_CD4 AS BRAND_CD,
IIF(BRAND_CD4 != HIST_BRAND_CD4, 1, 0) AS BRAND_CD_IND,
OWNBRAND_FLAG4 AS OWNBRAND_FLAG,
IIF(OWNBRAND_FLAG4 != HIST_OWNBRAND_FLAG4, 1, 0) AS OWNBRAND_FLAG_IND,
BRAND_CLASSIFICATION_ID4 AS BRAND_CLASSIFICATION_ID,
IIF(BRAND_CLASSIFICATION_ID4 != HIST_BRAND_CLASSIFICATION_ID4, 1, 0) AS BRAND_CLASSIFICATION_ID_IND,
TO_DATE('12/31/9999', 'MM/DD/YYYY') AS REC_END_DT,
SYSDATE AS UPDATE_DT,
SYSDATE AS LOAD_DT,
'I' AS LOAD_STRATEGY_FLAG,
Monotonically_Increasing_Id AS Monotonically_Increasing_Id FROM null""")

df_6.createOrReplaceTempView("Exp_INSERT_Open_New_record_6")

# COMMAND ----------

# DBTITLE 1, Exp_Update_Close_Record_7

df_7=spark.sql("""SELECT REC_START_DT AS REC_START_DT,
PRODUCT_ID AS PRODUCT_ID,
STATUS_ID AS STATUS_ID,
STATUS_ID_IND AS STATUS_ID_IND,
BRAND_CD AS BRAND_CD,
BRAND_CD_IND AS BRAND_CD_IND,
OWNBRAND_FLAG AS OWNBRAND_FLAG,
OWNBRAND_FLAG_IND AS OWNBRAND_FLAG_IND,
BRAND_CLASSIFICATION_ID AS BRAND_CLASSIFICATION_ID,
BRAND_CLASSIFICATION_ID_IND AS BRAND_CLASSIFICATION_ID_IND,
SYSDATE AS REC_END_DT,
SYSDATE AS UPDATE_DT,
LOAD_DT AS LOAD_DT,
'U' AS LOAD_STRATEGY_FLAG,
Monotonically_Increasing_Id AS Monotonically_Increasing_Id FROM null""")

df_7.createOrReplaceTempView("Exp_Update_Close_Record_7")

# COMMAND ----------

# DBTITLE 1, Union_8

df_8=spark.sql("""SELECT BRAND_CD AS BRAND_CD,
BRAND_CD_IND AS BRAND_CD_IND,
BRAND_CLASSIFICATION_ID AS BRAND_CLASSIFICATION_ID,
BRAND_CLASSIFICATION_ID_IND AS BRAND_CLASSIFICATION_ID_IND,
LOAD_DT AS LOAD_DT,
LOAD_STRATEGY_FLAG AS LOAD_STRATEGY_FLAG,
Monotonically_Increasing_Id AS Monotonically_Increasing_Id,
OWNBRAND_FLAG AS OWNBRAND_FLAG,
OWNBRAND_FLAG_IND AS OWNBRAND_FLAG_IND,
PRODUCT_ID AS PRODUCT_ID,
REC_END_DT AS REC_END_DT,
REC_START_DT AS REC_START_DT,
STATUS_ID AS STATUS_ID,
STATUS_ID_IND AS STATUS_ID_IND,
UPDATE_DT AS UPDATE_DT FROM Exp_Update_Close_Record_7 UNION ALL SELECT BRAND_CD AS BRAND_CD,
BRAND_CD_IND AS BRAND_CD_IND,
BRAND_CLASSIFICATION_ID AS BRAND_CLASSIFICATION_ID,
BRAND_CLASSIFICATION_ID_IND AS BRAND_CLASSIFICATION_ID_IND,
LOAD_DT AS LOAD_DT,
LOAD_STRATEGY_FLAG AS LOAD_STRATEGY_FLAG,
Monotonically_Increasing_Id AS Monotonically_Increasing_Id,
OWNBRAND_FLAG AS OWNBRAND_FLAG,
OWNBRAND_FLAG_IND AS OWNBRAND_FLAG_IND,
PRODUCT_ID AS PRODUCT_ID,
REC_END_DT AS REC_END_DT,
REC_START_DT AS REC_START_DT,
STATUS_ID AS STATUS_ID,
STATUS_ID_IND AS STATUS_ID_IND,
UPDATE_DT AS UPDATE_DT FROM Exp_INSERT_Open_New_record_6 UNION ALL SELECT BRAND_CD AS BRAND_CD,
BRAND_CD_IND AS BRAND_CD_IND,
BRAND_CLASSIFICATION_ID AS BRAND_CLASSIFICATION_ID,
BRAND_CLASSIFICATION_ID_IND AS BRAND_CLASSIFICATION_ID_IND,
LOAD_DT AS LOAD_DT,
LOAD_STRATEGY_FLAG AS LOAD_STRATEGY_FLAG,
Monotonically_Increasing_Id AS Monotonically_Increasing_Id,
OWNBRAND_FLAG AS OWNBRAND_FLAG,
OWNBRAND_FLAG_IND AS OWNBRAND_FLAG_IND,
PRODUCT_ID AS PRODUCT_ID,
REC_END_DT AS REC_END_DT,
REC_START_DT AS REC_START_DT,
STATUS_ID AS STATUS_ID,
STATUS_ID_IND AS STATUS_ID_IND,
UPDATE_DT AS UPDATE_DT FROM Exp_INSERT_New_Record_5""")

df_8.createOrReplaceTempView("Union_8")

# COMMAND ----------

# DBTITLE 1, Ups_SKU_PROFILE_HIST_9

df_9=spark.sql("""
    SELECT
        REC_START_DT AS REC_START_DT,
        PRODUCT_ID AS PRODUCT_ID,
        STATUS_ID AS STATUS_ID,
        STATUS_ID_IND AS STATUS_ID_IND,
        BRAND_CD AS BRAND_CD,
        BRAND_CD_IND AS BRAND_CD_IND,
        OWNBRAND_FLAG AS OWNBRAND_FLAG,
        OWNBRAND_FLAG_IND AS OWNBRAND_FLAG_IND,
        BRAND_CLASSIFICATION_ID AS BRAND_CLASSIFICATION_ID,
        BRAND_CLASSIFICATION_ID_IND AS BRAND_CLASSIFICATION_ID_IND,
        REC_END_DT AS REC_END_DT,
        UPDATE_DT AS UPDATE_DT,
        LOAD_DT AS LOAD_DT,
        LOAD_STRATEGY_FLAG AS LOAD_STRATEGY_FLAG,
        Monotonically_Increasing_Id AS Monotonically_Increasing_Id 
    FROM
        Union_8""")

df_9.createOrReplaceTempView("Ups_SKU_PROFILE_HIST_9")

# COMMAND ----------

# DBTITLE 1, SKU_PROFILE_HIST

spark.sql("""INSERT INTO SKU_PROFILE_HIST SELECT REC_START_DT AS REC_START_DT,
PRODUCT_ID AS PRODUCT_ID,
STATUS_ID AS STATUS_ID,
STATUS_ID_IND AS STATUS_ID_IND,
BRAND_CD AS BRAND_CD,
BRAND_CD_IND AS BRAND_CD_IND,
OWNBRAND_FLAG AS OWNBRAND_FLAG,
OWNBRAND_FLAG_IND AS OWNBRAND_FLAG_IND,
BRAND_CLASSIFICATION_ID AS BRAND_CLASSIFICATION_ID,
BRAND_CLASSIFICATION_ID_IND AS BRAND_CLASSIFICATION_ID_IND,
REC_END_DT AS REC_END_DT,
UPDATE_DT AS UPDATE_DT,
LOAD_DT AS LOAD_DT FROM Ups_SKU_PROFILE_HIST_9""")
