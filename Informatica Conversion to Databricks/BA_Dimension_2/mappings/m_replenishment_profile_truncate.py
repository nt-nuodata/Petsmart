# Databricks notebook source
# MAGIC %run "./udf_informatica"

# COMMAND ----------


from pyspark.sql.types import *

spark.sql("use DELTA_TRAINING")
spark.sql("set spark.sql.legacy.timeParserPolicy = LEGACY")


# COMMAND ----------

# DBTITLE 1, WEEKS_0

df_0=spark.sql("""
    SELECT
        WEEK_DT AS WEEK_DT,
        CAL_WK AS CAL_WK,
        CAL_WK_NBR AS CAL_WK_NBR,
        CAL_MO AS CAL_MO,
        CAL_MO_NBR AS CAL_MO_NBR,
        CAL_MO_NAME AS CAL_MO_NAME,
        CAL_MO_NAME_ABBR AS CAL_MO_NAME_ABBR,
        CAL_QTR AS CAL_QTR,
        CAL_QTR_NBR AS CAL_QTR_NBR,
        CAL_HALF AS CAL_HALF,
        CAL_YR AS CAL_YR,
        FISCAL_WK AS FISCAL_WK,
        FISCAL_WK_NBR AS FISCAL_WK_NBR,
        FISCAL_MO AS FISCAL_MO,
        FISCAL_MO_NBR AS FISCAL_MO_NBR,
        FISCAL_MO_NAME AS FISCAL_MO_NAME,
        FISCAL_MO_NAME_ABBR AS FISCAL_MO_NAME_ABBR,
        FISCAL_QTR AS FISCAL_QTR,
        FISCAL_QTR_NBR AS FISCAL_QTR_NBR,
        FISCAL_HALF AS FISCAL_HALF,
        FISCAL_YR AS FISCAL_YR,
        LYR_WEEK_DT AS LYR_WEEK_DT,
        LWK_WEEK_DT AS LWK_WEEK_DT,
        monotonically_increasing_id() AS Monotonically_Increasing_Id 
    FROM
        WEEKS""")

df_0.createOrReplaceTempView("WEEKS_0")

# COMMAND ----------

# DBTITLE 1, ASQ_Shortcut_to_WEEKS_1

df_1=spark.sql("""
    SELECT
        123""")

df_1.createOrReplaceTempView("ASQ_Shortcut_to_WEEKS_1")

# COMMAND ----------

# DBTITLE 1, REPLENISHMENT_PROFILE

spark.sql("""INSERT INTO REPLENISHMENT_PROFILE SELECT PRODUCT_ID AS PRODUCT_ID,
LOCATION_ID AS LOCATION_ID,
PROCURE_TYPE_CD AS PROCURE_TYPE_CD,
CAL_WK AS ROUND_VALUE_QTY,
REPL_TYPE_CD AS REPL_TYPE_CD,
SAFETY_QTY AS SAFETY_QTY,
SERVICE_LVL_RT AS SERVICE_LVL_RT,
ABC_INDICATOR_CD AS ABC_INDICATOR_CD,
MAX_STOCK_QTY AS MAX_STOCK_QTY,
REORDER_POINT_QTY AS REORDER_POINT_QTY,
PERIOD_CD AS PERIOD_CD,
PLAN_DELIV_DAYS AS PLAN_DELIV_DAYS,
PROFIT_CENTER_ID AS PROFIT_CENTER_ID,
MULTIPLIER_RT AS MULTIPLIER_RT,
FDC_INDICATOR_CD AS FDC_INDICATOR_CD,
ROUND_PROFILE_CD AS ROUND_PROFILE_CD,
MAX_TARGET_STOCK_QTY AS MAX_TARGET_STOCK_QTY,
MIN_TARGET_STOCK_QTY AS MIN_TARGET_STOCK_QTY,
TARGET_STOCK_QTY AS TARGET_STOCK_QTY,
TARGET_COVERAGE_CNT AS TARGET_COVERAGE_CNT,
PRESENT_QTY AS PRESENT_QTY,
POG_CAPACITY_QTY AS POG_CAPACITY_QTY,
POG_LAST_CHNG_DT AS POG_LAST_CHNG_DT,
POG_FACINGS_QTY AS POG_FACINGS_QTY,
PROMO_END_DT AS PROMO_END_DT,
PROMO_EFF_DT AS PROMO_EFF_DT,
PROMO_QTY AS PROMO_QTY,
LAST_PULL_DT AS LAST_PULL_DT,
NEXT_PULL_DT AS NEXT_PULL_DT,
PURCH_GROUP_ID AS PURCH_GROUP_ID,
BASIC_VALUE_QTY AS BASIC_VALUE_QTY,
LAST_FC_DT AS LAST_FC_DT,
LOAD_DT AS LOAD_DT FROM ASQ_Shortcut_to_WEEKS_1""")
