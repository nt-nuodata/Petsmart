# Databricks notebook source
# MAGIC %run "./udf_informatica"

# COMMAND ----------


from pyspark.sql.types import *

spark.sql("use DELTA_TRAINING")
spark.sql("set spark.sql.legacy.timeParserPolicy = LEGACY")


# COMMAND ----------
# DBTITLE 1, ZTH_WEB_RECORD_0


df_0=spark.sql("""
    SELECT
        MANDT AS MANDT,
        RECORD_ID AS RECORD_ID,
        AVAIL_ON_WEB AS AVAIL_ON_WEB,
        LIFNR AS LIFNR,
        IDNLF AS IDNLF,
        BRAND AS BRAND,
        BUYER AS BUYER,
        PUR_GRP AS PUR_GRP,
        ART_TYP AS ART_TYP,
        ART_CAT AS ART_CAT,
        SHIPPER AS SHIPPER,
        CORP_BRAND AS CORP_BRAND,
        PACK_TYPE AS PACK_TYPE,
        COUNTRY_OF_ORIGI AS COUNTRY_OF_ORIGI,
        CODE_DATE_IND AS CODE_DATE_IND,
        EXP_MONTH AS EXP_MONTH,
        US_LOC AS US_LOC,
        SITE_SPECIFIC_C AS SITE_SPECIFIC_C,
        COST AS COST,
        CURR_UNIT AS CURR_UNIT,
        COST_PER AS COST_PER,
        ORDER_UNIT AS ORDER_UNIT,
        LEAD_TIME AS LEAD_TIME,
        DIRECT_STORE AS DIRECT_STORE,
        TAX_CLASS AS TAX_CLASS,
        SADDLE AS SADDLE,
        HAZARDOUS AS HAZARDOUS,
        AEROSOL AS AEROSOL,
        DATE_AVAILABLE AS DATE_AVAILABLE,
        IMPORT AS IMPORT,
        NET_CONTENTS AS NET_CONTENTS,
        CONTENT_UNIT AS CONTENT_UNIT,
        SP_HANDLE AS SP_HANDLE,
        LEGAL_IN_CA AS LEGAL_IN_CA,
        CA_STUFFED AS CA_STUFFED,
        INGREDIENTS AS INGREDIENTS,
        EPA AS EPA,
        ALL_STATES AS ALL_STATES,
        MATNR AS MATNR,
        EMAIL AS EMAIL,
        CHANGE_REC AS CHANGE_REC,
        CHANGE_FLAGS AS CHANGE_FLAGS,
        INNER_PACK_TYPE AS INNER_PACK_TYPE,
        ARTILCE_SUB_CAT AS ARTILCE_SUB_CAT,
        DATE_AVAIL AS DATE_AVAIL,
        CREATED_BY AS CREATED_BY,
        CREATED_ON AS CREATED_ON,
        CREATE_TIME AS CREATE_TIME,
        LAST_CHANGED_BY AS LAST_CHANGED_BY,
        LAST_CHANGED_ON AS LAST_CHANGED_ON,
        LAST_CHANGE_TIME AS LAST_CHANGE_TIME,
        DATBI AS DATBI,
        SUB_DATE AS SUB_DATE,
        RTV AS RTV,
        NESTLE_EDI AS NESTLE_EDI,
        monotonically_increasing_id() AS Monotonically_Increasing_Id 
    FROM
        ZTH_WEB_RECORD""")

df_0.createOrReplaceTempView("ZTH_WEB_RECORD_0")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_ZTH_WEB_RECORD1_1


df_1=spark.sql("""
    SELECT
        MANDT AS MANDT,
        RECORD_ID AS RECORD_ID,
        AVAIL_ON_WEB AS AVAIL_ON_WEB,
        LIFNR AS LIFNR,
        IDNLF AS IDNLF,
        BRAND AS BRAND,
        BUYER AS BUYER,
        PUR_GRP AS PUR_GRP,
        ART_TYP AS ART_TYP,
        ART_CAT AS ART_CAT,
        SHIPPER AS SHIPPER,
        CORP_BRAND AS CORP_BRAND,
        PACK_TYPE AS PACK_TYPE,
        COUNTRY_OF_ORIGI AS COUNTRY_OF_ORIGI,
        CODE_DATE_IND AS CODE_DATE_IND,
        EXP_MONTH AS EXP_MONTH,
        US_LOC AS US_LOC,
        SITE_SPECIFIC_C AS SITE_SPECIFIC_C,
        COST AS COST,
        CURR_UNIT AS CURR_UNIT,
        COST_PER AS COST_PER,
        ORDER_UNIT AS ORDER_UNIT,
        LEAD_TIME AS LEAD_TIME,
        DIRECT_STORE AS DIRECT_STORE,
        TAX_CLASS AS TAX_CLASS,
        SADDLE AS SADDLE,
        HAZARDOUS AS HAZARDOUS,
        AEROSOL AS AEROSOL,
        DATE_AVAILABLE AS DATE_AVAILABLE,
        IMPORT AS IMPORT,
        NET_CONTENTS AS NET_CONTENTS,
        CONTENT_UNIT AS CONTENT_UNIT,
        SP_HANDLE AS SP_HANDLE,
        LEGAL_IN_CA AS LEGAL_IN_CA,
        CA_STUFFED AS CA_STUFFED,
        INGREDIENTS AS INGREDIENTS,
        EPA AS EPA,
        ALL_STATES AS ALL_STATES,
        MATNR AS MATNR,
        EMAIL AS EMAIL,
        CHANGE_REC AS CHANGE_REC,
        CHANGE_FLAGS AS CHANGE_FLAGS,
        INNER_PACK_TYPE AS INNER_PACK_TYPE,
        ARTILCE_SUB_CAT AS ARTILCE_SUB_CAT,
        DATE_AVAIL AS DATE_AVAIL,
        CREATED_BY AS CREATED_BY,
        CREATED_ON AS CREATED_ON,
        CREATE_TIME AS CREATE_TIME,
        LAST_CHANGED_BY AS LAST_CHANGED_BY,
        LAST_CHANGED_ON AS LAST_CHANGED_ON,
        LAST_CHANGE_TIME AS LAST_CHANGE_TIME,
        DATBI AS DATBI,
        SUB_DATE AS SUB_DATE,
        RTV AS RTV,
        NESTLE_EDI AS NESTLE_EDI,
        Monotonically_Increasing_Id AS Monotonically_Increasing_Id 
    FROM
        ZTH_WEB_RECORD_0""")

df_1.createOrReplaceTempView("SQ_Shortcut_to_ZTH_WEB_RECORD1_1")

# COMMAND ----------
# DBTITLE 1, FILTRANS_2


df_2=spark.sql("""
    SELECT
        MANDT AS MANDT,
        RECORD_ID AS RECORD_ID,
        AVAIL_ON_WEB AS AVAIL_ON_WEB,
        LIFNR AS LIFNR,
        IDNLF AS IDNLF,
        BRAND AS BRAND,
        BUYER AS BUYER,
        PUR_GRP AS PUR_GRP,
        ART_TYP AS ART_TYP,
        ART_CAT AS ART_CAT,
        SHIPPER AS SHIPPER,
        CORP_BRAND AS CORP_BRAND,
        PACK_TYPE AS PACK_TYPE,
        COUNTRY_OF_ORIGI AS COUNTRY_OF_ORIGI,
        CODE_DATE_IND AS CODE_DATE_IND,
        EXP_MONTH AS EXP_MONTH,
        US_LOC AS US_LOC,
        SITE_SPECIFIC_C AS SITE_SPECIFIC_C,
        COST AS COST,
        CURR_UNIT AS CURR_UNIT,
        COST_PER AS COST_PER,
        ORDER_UNIT AS ORDER_UNIT,
        LEAD_TIME AS LEAD_TIME,
        DIRECT_STORE AS DIRECT_STORE,
        TAX_CLASS AS TAX_CLASS,
        SADDLE AS SADDLE,
        HAZARDOUS AS HAZARDOUS,
        AEROSOL AS AEROSOL,
        DATE_AVAILABLE AS DATE_AVAILABLE,
        IMPORT AS IMPORT,
        NET_CONTENTS AS NET_CONTENTS,
        CONTENT_UNIT AS CONTENT_UNIT,
        SP_HANDLE AS SP_HANDLE,
        LEGAL_IN_CA AS LEGAL_IN_CA,
        CA_STUFFED AS CA_STUFFED,
        INGREDIENTS AS INGREDIENTS,
        EPA AS EPA,
        ALL_STATES AS ALL_STATES,
        MATNR AS MATNR,
        EMAIL AS EMAIL,
        CHANGE_REC AS CHANGE_REC,
        CHANGE_FLAGS AS CHANGE_FLAGS,
        INNER_PACK_TYPE AS INNER_PACK_TYPE,
        ARTILCE_SUB_CAT AS ARTILCE_SUB_CAT,
        DATE_AVAIL AS DATE_AVAIL,
        CREATED_BY AS CREATED_BY,
        CREATED_ON AS CREATED_ON,
        CREATE_TIME AS CREATE_TIME,
        LAST_CHANGED_BY AS LAST_CHANGED_BY,
        LAST_CHANGED_ON AS LAST_CHANGED_ON,
        LAST_CHANGE_TIME AS LAST_CHANGE_TIME,
        DATBI AS DATBI,
        SUB_DATE AS SUB_DATE,
        RTV AS RTV,
        NESTLE_EDI AS NESTLE_EDI,
        Monotonically_Increasing_Id AS Monotonically_Increasing_Id 
    FROM
        SQ_Shortcut_to_ZTH_WEB_RECORD1_1 
    WHERE
        MANDT = '100'""")

df_2.createOrReplaceTempView("FILTRANS_2")

# COMMAND ----------
# DBTITLE 1, EXPTRANS_3


df_3=spark.sql("""
    SELECT
        IFF(Is_Number(MATNR),
        (CAST(MATNR AS DECIMAL (38,
        0))),
        NULL) AS o_SKU_NBR,
        IFF(ISNULL(DATE_AVAIL) 
        OR LENGTH(DATE_AVAIL) < 8 
        OR DATE_AVAIL = '00000000',
        NULL,
        TO_DATE(DATE_AVAIL,
        'YYYYMMDD')) AS o_DATE_AVAIL,
        IFF(ISNULL(conct_CREATED),
        NULL,
        TO_DATE(conct_CREATED,
        'YYYYMMDDHH24MISS')) AS dt_CREATED,
        IFF(ISNULL(DATBI) 
        OR LENGTH(DATBI) < 8 
        OR DATBI = '00000000',
        NULL,
        TO_DATE(DATBI,
        'YYYYMMDD')) AS o_DATBI,
        IFF(SUB_DATE = '00000000',
        NULL,
        TO_DATE(SUB_DATE,
        'YYYYMMDD')) AS o_SUB_DATE,
        IFF(ISNULL(conct_LAST),
        NULL,
        TO_DATE(conct_LAST,
        'YYYYMMDDHH24MISS')) AS dt_LAST,
        Monotonically_Increasing_Id AS Monotonically_Increasing_Id 
    FROM
        FILTRANS_2""")

df_3.createOrReplaceTempView("EXPTRANS_3")

# COMMAND ----------
# DBTITLE 1, SAP_ZTH_WEB_RECORD_PRE


spark.sql("""INSERT INTO SAP_ZTH_WEB_RECORD_PRE SELECT RECORD_ID AS RECORD_ID,
AVAIL_ON_WEB AS AVAIL_ON_WEB,
LIFNR AS LIFNR,
IDNLF AS IDNLF,
BRAND AS BRAND,
BUYER AS BUYER,
PUR_GRP AS PUR_GRP,
ART_TYP AS ART_TYP,
ART_CAT AS ART_CAT,
SHIPPER AS SHIPPER,
CORP_BRAND AS CORP_BRAND,
PACK_TYPE AS PACK_TYPE,
COUNTRY_OF_ORIGI AS COUNTRY_OF_ORIGI,
CODE_DATE_IND AS CODE_DATE_IND,
EXP_MONTH AS EXP_MONTH,
US_LOC AS US_LOC,
SITE_SPECIFIC_C AS SITE_SPECIFIC_C,
COST AS COST,
CURR_UNIT AS CURR_UNIT,
COST_PER AS COST_PER,
ORDER_UNIT AS ORDER_UNIT,
LEAD_TIME AS LEAD_TIME,
DIRECT_STORE AS DIRECT_STORE,
TAX_CLASS AS TAX_CLASS,
SADDLE AS SADDLE,
HAZARDOUS AS HAZARDOUS,
AEROSOL AS AEROSOL,
DATE_AVAILABLE AS DATE_AVAILABLE,
IMPORT AS IMPORT,
NET_CONTENTS AS NET_CONTENTS,
CONTENT_UNIT AS CONTENT_UNIT,
SP_HANDLE AS SP_HANDLE,
LEGAL_IN_CA AS LEGAL_IN_CA,
CA_STUFFED AS CA_STUFFED,
INGREDIENTS AS INGREDIENTS,
EPA AS EPA,
ALL_STATES AS ALL_STATES,
o_SKU_NBR AS SKU_NBR,
EMAIL AS EMAIL,
CHANGE_REC AS CHANGE_REC,
CHANGE_FLAGS AS CHANGE_FLAGS,
INNER_PACK_TYPE AS INNER_PACK_TYPE,
ARTILCE_SUB_CAT AS ARTILCE_SUB_CAT,
o_DATE_AVAIL AS DATE_AVAIL,
CREATED_BY AS CREATED_BY,
dt_CREATED AS CREATED_TSTMP,
LAST_CHANGED_BY AS LAST_CHANGED_BY,
dt_LAST AS LAST_CHANGED_TSTMP,
o_DATBI AS DATBI,
o_SUB_DATE AS SUB_DATE,
RTV AS RTV,
NESTLE_EDI AS NESTLE_EDI FROM EXPTRANS_3""")

spark.sql("""INSERT INTO SAP_ZTH_WEB_RECORD_PRE SELECT RECORD_ID AS RECORD_ID,
AVAIL_ON_WEB AS AVAIL_ON_WEB,
LIFNR AS LIFNR,
IDNLF AS IDNLF,
BRAND AS BRAND,
BUYER AS BUYER,
PUR_GRP AS PUR_GRP,
ART_TYP AS ART_TYP,
ART_CAT AS ART_CAT,
SHIPPER AS SHIPPER,
CORP_BRAND AS CORP_BRAND,
PACK_TYPE AS PACK_TYPE,
COUNTRY_OF_ORIGI AS COUNTRY_OF_ORIGI,
CODE_DATE_IND AS CODE_DATE_IND,
EXP_MONTH AS EXP_MONTH,
US_LOC AS US_LOC,
SITE_SPECIFIC_C AS SITE_SPECIFIC_C,
COST AS COST,
CURR_UNIT AS CURR_UNIT,
COST_PER AS COST_PER,
ORDER_UNIT AS ORDER_UNIT,
LEAD_TIME AS LEAD_TIME,
DIRECT_STORE AS DIRECT_STORE,
TAX_CLASS AS TAX_CLASS,
SADDLE AS SADDLE,
HAZARDOUS AS HAZARDOUS,
AEROSOL AS AEROSOL,
DATE_AVAILABLE AS DATE_AVAILABLE,
IMPORT AS IMPORT,
NET_CONTENTS AS NET_CONTENTS,
CONTENT_UNIT AS CONTENT_UNIT,
SP_HANDLE AS SP_HANDLE,
LEGAL_IN_CA AS LEGAL_IN_CA,
CA_STUFFED AS CA_STUFFED,
INGREDIENTS AS INGREDIENTS,
EPA AS EPA,
ALL_STATES AS ALL_STATES,
o_SKU_NBR AS SKU_NBR,
EMAIL AS EMAIL,
CHANGE_REC AS CHANGE_REC,
CHANGE_FLAGS AS CHANGE_FLAGS,
INNER_PACK_TYPE AS INNER_PACK_TYPE,
ARTILCE_SUB_CAT AS ARTILCE_SUB_CAT,
o_DATE_AVAIL AS DATE_AVAIL,
CREATED_BY AS CREATED_BY,
dt_CREATED AS CREATED_TSTMP,
LAST_CHANGED_BY AS LAST_CHANGED_BY,
dt_LAST AS LAST_CHANGED_TSTMP,
o_DATBI AS DATBI,
o_SUB_DATE AS SUB_DATE,
RTV AS RTV,
NESTLE_EDI AS NESTLE_EDI FROM FILTRANS_2""")