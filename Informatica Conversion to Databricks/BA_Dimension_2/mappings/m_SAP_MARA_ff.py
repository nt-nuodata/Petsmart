# Databricks notebook source
# MAGIC %run "./udf_informatica"

# COMMAND ----------


from pyspark.sql.types import *

spark.sql("use DELTA_TRAINING")
spark.sql("set spark.sql.legacy.timeParserPolicy = LEGACY")


# COMMAND ----------

# DBTITLE 1, MARA_0

df_0=spark.sql("""SELECT MANDT AS MANDT,
MATNR AS MATNR,
ERSDA AS ERSDA,
ERNAM AS ERNAM,
LAEDA AS LAEDA,
AENAM AS AENAM,
VPSTA AS VPSTA,
PSTAT AS PSTAT,
LVORM AS LVORM,
MTART AS MTART,
MBRSH AS MBRSH,
MATKL AS MATKL,
BISMT AS BISMT,
MEINS AS MEINS,
BSTME AS BSTME,
ZEINR AS ZEINR,
ZEIAR AS ZEIAR,
ZEIVR AS ZEIVR,
ZEIFO AS ZEIFO,
AESZN AS AESZN,
BLATT AS BLATT,
BLANZ AS BLANZ,
FERTH AS FERTH,
FORMT AS FORMT,
GROES AS GROES,
WRKST AS WRKST,
NORMT AS NORMT,
LABOR AS LABOR,
EKWSL AS EKWSL,
BRGEW AS BRGEW,
NTGEW AS NTGEW,
GEWEI AS GEWEI,
VOLUM AS VOLUM,
VOLEH AS VOLEH,
BEHVO AS BEHVO,
RAUBE AS RAUBE,
TEMPB AS TEMPB,
DISST AS DISST,
TRAGR AS TRAGR,
STOFF AS STOFF,
SPART AS SPART,
KUNNR AS KUNNR,
EANNR AS EANNR,
WESCH AS WESCH,
BWVOR AS BWVOR,
BWSCL AS BWSCL,
SAISO AS SAISO,
ETIAR AS ETIAR,
ETIFO AS ETIFO,
ENTAR AS ENTAR,
EAN11 AS EAN11,
NUMTP AS NUMTP,
LAENG AS LAENG,
BREIT AS BREIT,
HOEHE AS HOEHE,
MEABM AS MEABM,
PRDHA AS PRDHA,
AEKLK AS AEKLK,
CADKZ AS CADKZ,
QMPUR AS QMPUR,
ERGEW AS ERGEW,
ERGEI AS ERGEI,
ERVOL AS ERVOL,
ERVOE AS ERVOE,
GEWTO AS GEWTO,
VOLTO AS VOLTO,
VABME AS VABME,
KZREV AS KZREV,
KZKFG AS KZKFG,
XCHPF AS XCHPF,
VHART AS VHART,
FUELG AS FUELG,
STFAK AS STFAK,
MAGRV AS MAGRV,
BEGRU AS BEGRU,
DATAB AS DATAB,
LIQDT AS LIQDT,
SAISJ AS SAISJ,
PLGTP AS PLGTP,
MLGUT AS MLGUT,
EXTWG AS EXTWG,
SATNR AS SATNR,
ATTYP AS ATTYP,
KZKUP AS KZKUP,
KZNFM AS KZNFM,
PMATA AS PMATA,
MSTAE AS MSTAE,
MSTAV AS MSTAV,
MSTDE AS MSTDE,
MSTDV AS MSTDV,
TAKLV AS TAKLV,
RBNRM AS RBNRM,
MHDRZ AS MHDRZ,
MHDHB AS MHDHB,
MHDLP AS MHDLP,
INHME AS INHME,
INHAL AS INHAL,
VPREH AS VPREH,
ETIAG AS ETIAG,
INHBR AS INHBR,
CMETH AS CMETH,
CUOBF AS CUOBF,
KZUMW AS KZUMW,
KOSCH AS KOSCH,
SPROF AS SPROF,
NRFHG AS NRFHG,
MFRPN AS MFRPN,
MFRNR AS MFRNR,
BMATN AS BMATN,
MPROF AS MPROF,
KZWSM AS KZWSM,
SAITY AS SAITY,
PROFL AS PROFL,
IHIVI AS IHIVI,
ILOOS AS ILOOS,
SERLV AS SERLV,
KZGVH AS KZGVH,
XGCHP AS XGCHP,
KZEFF AS KZEFF,
COMPL AS COMPL,
IPRKZ AS IPRKZ,
RDMHD AS RDMHD,
PRZUS AS PRZUS,
MTPOS_MARA AS MTPOS_MARA,
BFLME AS BFLME,
MATFI AS MATFI,
CMREL AS CMREL,
BBTYP AS BBTYP,
SLED_BBD AS SLED_BBD,
GTIN_VARIANT AS GTIN_VARIANT,
GENNR AS GENNR,
RMATP AS RMATP,
GDS_RELEVANT AS GDS_RELEVANT,
WEORA AS WEORA,
HUTYP_DFLT AS HUTYP_DFLT,
PILFERABLE AS PILFERABLE,
WHSTC AS WHSTC,
WHMATGR AS WHMATGR,
HNDLCODE AS HNDLCODE,
HAZMAT AS HAZMAT,
HUTYP AS HUTYP,
TARE_VAR AS TARE_VAR,
MAXC AS MAXC,
MAXC_TOL AS MAXC_TOL,
MAXL AS MAXL,
MAXB AS MAXB,
MAXH AS MAXH,
MAXDIM_UOM AS MAXDIM_UOM,
HERKL AS HERKL,
MFRGR AS MFRGR,
QQTIME AS QQTIME,
QQTIMEUOM AS QQTIMEUOM,
QGRP AS QGRP,
SERIAL AS SERIAL,
PS_SMARTFORM AS PS_SMARTFORM,
LOGUNIT AS LOGUNIT,
CWQREL AS CWQREL,
CWQPROC AS CWQPROC,
CWQTOLGR AS CWQTOLGR,
ADPROF AS ADPROF,
IPMIPPRODUCT AS IPMIPPRODUCT,
ALLOW_PMAT_IGNO AS ALLOW_PMAT_IGNO,
MEDIUM AS MEDIUM,
/BEV1/LULEINH AS /BEV1/LULEINH,
/BEV1/LULDEGRP AS /BEV1/LULDEGRP,
/BEV1/NESTRUCCAT AS /BEV1/NESTRUCCAT,
/DSD/SL_TOLTYP AS /DSD/SL_TOLTYP,
/DSD/SV_CNT_GRP AS /DSD/SV_CNT_GRP,
/DSD/VC_GROUP AS /DSD/VC_GROUP,
/VSO/R_TILT_IND AS /VSO/R_TILT_IND,
/VSO/R_STACK_IND AS /VSO/R_STACK_IND,
/VSO/R_BOT_IND AS /VSO/R_BOT_IND,
/VSO/R_TOP_IND AS /VSO/R_TOP_IND,
/VSO/R_STACK_NO AS /VSO/R_STACK_NO,
/VSO/R_PAL_IND AS /VSO/R_PAL_IND,
/VSO/R_PAL_OVR_D AS /VSO/R_PAL_OVR_D,
/VSO/R_PAL_OVR_W AS /VSO/R_PAL_OVR_W,
/VSO/R_PAL_B_HT AS /VSO/R_PAL_B_HT,
/VSO/R_PAL_MIN_H AS /VSO/R_PAL_MIN_H,
/VSO/R_TOL_B_HT AS /VSO/R_TOL_B_HT,
/VSO/R_NO_P_GVH AS /VSO/R_NO_P_GVH,
/VSO/R_QUAN_UNIT AS /VSO/R_QUAN_UNIT,
/VSO/R_KZGVH_IND AS /VSO/R_KZGVH_IND,
PACKCODE AS PACKCODE,
DG_PACK_STATUS AS DG_PACK_STATUS,
MCOND AS MCOND,
RETDELC AS RETDELC,
LOGLEV_RETO AS LOGLEV_RETO,
NSNID AS NSNID,
IMATN AS IMATN,
PICNUM AS PICNUM,
BSTAT AS BSTAT,
COLOR_ATINN AS COLOR_ATINN,
SIZE1_ATINN AS SIZE1_ATINN,
SIZE2_ATINN AS SIZE2_ATINN,
COLOR AS COLOR,
SIZE1 AS SIZE1,
SIZE2 AS SIZE2,
FREE_CHAR AS FREE_CHAR,
CARE_CODE AS CARE_CODE,
BRAND_ID AS BRAND_ID,
FIBER_CODE1 AS FIBER_CODE1,
FIBER_PART1 AS FIBER_PART1,
FIBER_CODE2 AS FIBER_CODE2,
FIBER_PART2 AS FIBER_PART2,
FIBER_CODE3 AS FIBER_CODE3,
FIBER_PART3 AS FIBER_PART3,
FIBER_CODE4 AS FIBER_CODE4,
FIBER_PART4 AS FIBER_PART4,
FIBER_CODE5 AS FIBER_CODE5,
FIBER_PART5 AS FIBER_PART5,
FASHGRD AS FASHGRD,
ZZBRND AS ZZBRND,
ZZBUYR AS ZZBUYR,
ZZCOLR AS ZZCOLR,
ZZDSCF AS ZZDSCF,
ZZDSCS AS ZZDSCS,
ZZDSCP AS ZZDSCP,
ZZFLVR AS ZZFLVR,
ZZIMPO AS ZZIMPO,
ZZMKDN AS ZZMKDN,
ZZOWN AS ZZOWN,
ZZRTV AS ZZRTV,
ZZSIGN AS ZZSIGN,
ZZSIZE AS ZZSIZE,
ZZSTATCD AS ZZSTATCD,
ZZSTLN AS ZZSTLN,
ZZFAMCD1 AS ZZFAMCD1,
ZZFAMCD2 AS ZZFAMCD2,
ZZMD_SCH_ID AS ZZMD_SCH_ID,
ZZSC_DATE AS ZZSC_DATE,
ZZCAHTS AS ZZCAHTS,
ZZPID AS ZZPID,
ZZSTOWDT AS ZZSTOWDT,
ZSTC_DISCO_DT AS ZSTC_DISCO_DT,
ZST_DISCO_DT AS ZST_DISCO_DT,
ZZWEBSTYLE AS ZZWEBSTYLE,
ZZMETR_CONT AS ZZMETR_CONT,
ZZMETR_CTUNIT AS ZZMETR_CTUNIT,
monotonically_increasing_id() AS Monotonically_Increasing_Id FROM MARA""")

df_0.createOrReplaceTempView("MARA_0")
