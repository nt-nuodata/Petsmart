# Databricks notebook source
# MAGIC %run "./udf_informatica"

# COMMAND ----------


from pyspark.sql.types import *

spark.sql("use DELTA_TRAINING")
spark.sql("set spark.sql.legacy.timeParserPolicy = LEGACY")


# COMMAND ----------

# DBTITLE 1, SKU_PROFILE_FLAT_0

df_0=spark.sql("""
    SELECT
        DELETE_IND AS DELETE_IND,
        PRODUCT_ID AS PRODUCT_ID,
        ALT_DESC AS ALT_DESC,
        BUM_QTY AS BUM_QTY,
        BUYER_ID AS BUYER_ID,
        BUYER_NAME AS BUYER_NAME,
        CONTENTS AS CONTENTS,
        CONTENTS_UNIT AS CONTENTS_UNIT,
        ADD_DT AS ADD_DT,
        DELETE_DT AS DELETE_DT,
        HTS_CD AS HTS_CD,
        HTS_DESC AS HTS_DESC,
        PRIMARY_UPC AS PRIMARY_UPC,
        PURCH_GROUP_ID AS PURCH_GROUP_ID,
        PURCH_GROUP_NAME AS PURCH_GROUP_NAME,
        SKU_TYPE AS SKU_TYPE,
        SKU_DESC AS SKU_DESC,
        SKU_NBR AS SKU_NBR,
        PURCH_COST_AMT AS PURCH_COST_AMT,
        WEIGHT_NET AS WEIGHT_NET,
        WEIGHT_UNIT AS WEIGHT_UNIT,
        SAP_CATEGORY_DESC AS SAP_CATEGORY_DESC,
        SAP_CATEGORY_ID AS SAP_CATEGORY_ID,
        SAP_CLASS_DESC AS SAP_CLASS_DESC,
        SAP_CLASS_ID AS SAP_CLASS_ID,
        SAP_DEPT_DESC AS SAP_DEPT_DESC,
        SAP_DEPT_ID AS SAP_DEPT_ID,
        SAP_DIVISION_DESC AS SAP_DIVISION_DESC,
        SAP_DIVISION_ID AS SAP_DIVISION_ID,
        DISC_START_DT AS DISC_START_DT,
        BRAND_NAME AS BRAND_NAME,
        IMPORT_FLAG AS IMPORT_FLAG,
        STATELINE_FLAG AS STATELINE_FLAG,
        SIZE_DESC AS SIZE_DESC,
        INIT_MKDN_DT AS INIT_MKDN_DT,
        STATUS_ID AS STATUS_ID,
        STATUS_NAME AS STATUS_NAME,
        OLD_ARTICLE_NBR AS OLD_ARTICLE_NBR,
        TAX_CLASS_ID AS TAX_CLASS_ID,
        TAX_CLASS_DESC AS TAX_CLASS_DESC,
        VALUATION_CLASS_CD AS VALUATION_CLASS_CD,
        BASE_UOM_CD AS BASE_UOM_CD,
        SIGN_TYPE_CD AS SIGN_TYPE_CD,
        OWNBRAND_FLAG AS OWNBRAND_FLAG,
        CAD_HTS_CD AS CAD_HTS_CD,
        RTV_DEPT_CD AS RTV_DEPT_CD,
        monotonically_increasing_id() AS Monotonically_Increasing_Id 
    FROM
        SKU_PROFILE_FLAT""")

df_0.createOrReplaceTempView("SKU_PROFILE_FLAT_0")

# COMMAND ----------

# DBTITLE 1, SQ_Shortcut_To_SKU_PROFILE_FLAT_1

df_1=spark.sql("""
    SELECT
        DELETE_IND AS DELETE_IND,
        PRODUCT_ID AS PRODUCT_ID,
        ALT_DESC AS ALT_DESC,
        BUM_QTY AS BUM_QTY,
        BUYER_ID AS BUYER_ID,
        BUYER_NAME AS BUYER_NAME,
        CONTENTS AS CONTENTS,
        CONTENTS_UNIT AS CONTENTS_UNIT,
        ADD_DT AS ADD_DT,
        DELETE_DT AS DELETE_DT,
        HTS_CD AS HTS_CD,
        HTS_DESC AS HTS_DESC,
        PRIMARY_UPC AS PRIMARY_UPC,
        PURCH_GROUP_ID AS PURCH_GROUP_ID,
        PURCH_GROUP_NAME AS PURCH_GROUP_NAME,
        SKU_TYPE AS SKU_TYPE,
        SKU_DESC AS SKU_DESC,
        SKU_NBR AS SKU_NBR,
        SUM_COST AS SUM_COST,
        WEIGHT_NET AS WEIGHT_NET,
        WEIGHT_UNIT AS WEIGHT_UNIT,
        SAP_CATEGORY_DESC AS SAP_CATEGORY_DESC,
        SAP_CATEGORY_ID AS SAP_CATEGORY_ID,
        SAP_CLASS_DESC AS SAP_CLASS_DESC,
        SAP_CLASS_ID AS SAP_CLASS_ID,
        SAP_DEPT_DESC AS SAP_DEPT_DESC,
        SAP_DEPT_ID AS SAP_DEPT_ID,
        SAP_DIVISION_DESC AS SAP_DIVISION_DESC,
        SAP_DIVISION_ID AS SAP_DIVISION_ID,
        DISC_START_DT AS DISC_START_DT,
        BRAND_NAME AS BRAND_NAME,
        IMPORT_FLAG AS IMPORT_FLAG,
        STATELINE_FLAG AS STATELINE_FLAG,
        SIZE_FLD AS SIZE_FLD,
        INIT_MKDN_DT AS INIT_MKDN_DT,
        STATUS_ID AS STATUS_ID,
        STATUS_NAME AS STATUS_NAME,
        OLD_ARTICLE_NBR AS OLD_ARTICLE_NBR,
        TAX_CLASS_ID AS TAX_CLASS_ID,
        TAX_CLASS_DESC AS TAX_CLASS_DESC,
        VALUATION_CLASS_CD AS VALUATION_CLASS_CD,
        BASE_UOM_CD AS BASE_UOM_CD,
        SIGN_TYPE_CD AS SIGN_TYPE_CD,
        OWNBRAND_FLAG AS OWNBRAND_FLAG,
        CAD_HTS_CD AS CAD_HTS_CD,
        RTV_DEPT_CD AS RTV_DEPT_CD,
        Monotonically_Increasing_Id AS Monotonically_Increasing_Id 
    FROM
        SKU_PROFILE_FLAT_0""")

df_1.createOrReplaceTempView("SQ_Shortcut_To_SKU_PROFILE_FLAT_1")

# COMMAND ----------

# DBTITLE 1, BUYERID_2

df_2=spark.sql("""
    SELECT
        LTRIM(RTRIM(LTRIM(BUYER_ID)),
        '0') AS o_BUYER_ID,
        Monotonically_Increasing_Id AS Monotonically_Increasing_Id 
    FROM
        SQ_Shortcut_To_SKU_PROFILE_FLAT_1""")

df_2.createOrReplaceTempView("BUYERID_2")

# COMMAND ----------

# DBTITLE 1, EXPTRANS_3

df_3=spark.sql("""
    SELECT
        IFF(DISC_START_DT = '00000000',
        NULL,
        TO_DATE(DISC_START_DT,
        'YYYYMMDD')) AS o_DISC_START_DT,
        IFF(STATUS_ID = '  ',
        '00',
        STATUS_ID) AS o_STATUS_ID,
        Monotonically_Increasing_Id AS Monotonically_Increasing_Id 
    FROM
        SQ_Shortcut_To_SKU_PROFILE_FLAT_1""")

df_3.createOrReplaceTempView("EXPTRANS_3")

# COMMAND ----------

# DBTITLE 1, EXP_MARKDOWN_DATE_4

df_4=spark.sql("""
    SELECT
        DECODE(TRUE,
        INIT_MKDN_DT = '00000000',
        NULL,
        IS_SPACES(INIT_MKDN_DT),
        NULL,
        IS_DATE(INIT_MKDN_DT,
        'YYYYMMDD'),
        TO_DATE(INIT_MKDN_DT,
        'YYYYMMDD')) AS o_INIT_MKDN_DT,
        Monotonically_Increasing_Id AS Monotonically_Increasing_Id 
    FROM
        SQ_Shortcut_To_SKU_PROFILE_FLAT_1""")

df_4.createOrReplaceTempView("EXP_MARKDOWN_DATE_4")

# COMMAND ----------

# DBTITLE 1, EXP_COMMON_DATE_TRANS_5

df_5=spark.sql("""
    SELECT
        IFF(DELETE_DT = '00000000',
        NULL,
        TO_DATE(DELETE_DT,
        'MMDDYYYY')) AS o_MMDDYYYY_W_DEFAULT_TIME,
        IFF(DELETE_DT = '00000000',
        NULL,
        TO_DATE(DELETE_DT,
        'YYYYMMDD')) AS o_YYYYMMDD_W_DEFAULT_TIME,
        TO_DATE(('9999-12-31.' || i_TIME_ONLY),
        'YYYY-MM-DD.HH24MISS') AS o_TIME_W_DEFAULT_DATE,
        IFF(DELETE_DT = '00000000',
        NULL,
        TO_DATE((DELETE_DT || '.' || i_TIME_ONLY),
        'MMDDYYYY.HH24:MI:SS')) AS o_MMDDYYYY_W_TIME,
        IFF(DELETE_DT = '00000000',
        NULL,
        TO_DATE((DELETE_DT || '.' || i_TIME_ONLY),
        'YYYYMMDD.HH24:MI:SS')) AS o_YYYYMMDD_W_TIME,
        date_trunc('DAY',
        SESSSTARTTIME) AS o_CURRENT_DATE,
        ADD_TO_DATE(v_CURRENT_DATE,
        'DD',
        -1) AS o_CURRENT_DATE_MINUS1,
        TO_DATE('0001-01-01',
        'YYYY-MM-DD') AS o_DEFAULT_EFF_DATE,
        TO_DATE('9999-12-31',
        'YYYY-MM-DD') AS o_DEFAULT_END_DATE,
        Monotonically_Increasing_Id AS Monotonically_Increasing_Id 
    FROM
        SQ_Shortcut_To_SKU_PROFILE_FLAT_1""")

df_5.createOrReplaceTempView("EXP_COMMON_DATE_TRANS_5")

# COMMAND ----------

# DBTITLE 1, SKU_PROFILE_PRE

spark.sql("""INSERT INTO SKU_PROFILE_PRE SELECT PRODUCT_ID AS PRODUCT_ID,
DELETE_IND AS DELETE_IND,
ALT_DESC AS ALT_DESC,
BUM_QTY AS BUM_QTY,
BUYER_ID AS BUYER_ID,
BUYER_NAME AS BUYER_NAME,
CONTENTS AS CONTENTS,
CONTENTS_UNIT AS CONTENTS_UNITS,
ADD_DT AS ADD_DT,
DELETE_DT AS DELETE_DT,
HTS_CD AS HTS_CODE_ID,
HTS_DESC AS HTS_CODE_DESC,
PRIMARY_UPC AS PRIMARY_UPC_ID,
PURCH_GROUP_ID AS PURCH_GROUP_ID,
PURCH_GROUP_NAME AS PURCH_GROUP_NAME,
SKU_TYPE AS SKU_TYPE,
SKU_DESC AS SKU_DESC,
SKU_NBR AS SKU_NBR,
SUM_COST AS PURCH_COST_AMT,
WEIGHT_NET AS WEIGHT_NET_AMT,
WEIGHT_UNIT AS WEIGHT_UNIT_DESC,
SAP_CATEGORY_DESC AS SAP_CATEGORY_DESC,
SAP_CATEGORY_ID AS SAP_CATEGORY_ID,
SAP_CLASS_DESC AS SAP_CLASS_DESC,
SAP_CLASS_ID AS SAP_CLASS_ID,
SAP_DEPT_DESC AS SAP_DEPT_DESC,
SAP_DEPT_ID AS SAP_DEPT_ID,
SAP_DIVISION_DESC AS SAP_DIVISION_DESC,
SAP_DIVISION_ID AS SAP_DIVISION_ID,
DISC_START_DT AS DISC_START_DT,
BRAND_NAME AS BRAND_NAME,
IMPORT_FLAG AS IMPORT_FLAG,
STATELINE_FLAG AS STATELINE_FLAG,
SIZE_FLD AS SIZE_DESC,
INIT_MKDN_DT AS INIT_MKDN_DT,
STATUS_ID AS STATUS_ID,
STATUS_NAME AS STATUS_NAME,
OLD_ARTICLE_NBR AS OLD_ARTICLE_NBR,
TAX_CLASS_ID AS TAX_CLASS_ID,
TAX_CLASS_DESC AS TAX_CLASS_DESC,
VALUATION_CLASS_CD AS VALUATION_CLASS_CD,
BASE_UOM_CD AS BASE_UOM_CD,
SIGN_TYPE_CD AS SIGN_TYPE_CD,
OWNBRAND_FLAG AS OWNBRAND_FLAG,
COUNTRY_CD AS COUNTRY_CD,
COUNTRY_NAME AS COUNTRY_NAME,
CAD_HTS_CD AS CANADIAN_HTS_CD,
RTV_DEPT_CD AS RTV_DEPT_CD FROM SQ_Shortcut_To_SKU_PROFILE_FLAT_1""")

spark.sql("""INSERT INTO SKU_PROFILE_PRE SELECT PRODUCT_ID AS PRODUCT_ID,
DELETE_IND AS DELETE_IND,
ALT_DESC AS ALT_DESC,
BUM_QTY AS BUM_QTY,
BUYER_ID AS BUYER_ID,
BUYER_NAME AS BUYER_NAME,
CONTENTS AS CONTENTS,
CONTENTS_UNIT AS CONTENTS_UNITS,
ADD_DT AS ADD_DT,
DELETE_DT AS DELETE_DT,
HTS_CD AS HTS_CODE_ID,
HTS_DESC AS HTS_CODE_DESC,
PRIMARY_UPC AS PRIMARY_UPC_ID,
PURCH_GROUP_ID AS PURCH_GROUP_ID,
PURCH_GROUP_NAME AS PURCH_GROUP_NAME,
SKU_TYPE AS SKU_TYPE,
SKU_DESC AS SKU_DESC,
SKU_NBR AS SKU_NBR,
SUM_COST AS PURCH_COST_AMT,
WEIGHT_NET AS WEIGHT_NET_AMT,
WEIGHT_UNIT AS WEIGHT_UNIT_DESC,
SAP_CATEGORY_DESC AS SAP_CATEGORY_DESC,
SAP_CATEGORY_ID AS SAP_CATEGORY_ID,
SAP_CLASS_DESC AS SAP_CLASS_DESC,
SAP_CLASS_ID AS SAP_CLASS_ID,
SAP_DEPT_DESC AS SAP_DEPT_DESC,
SAP_DEPT_ID AS SAP_DEPT_ID,
SAP_DIVISION_DESC AS SAP_DIVISION_DESC,
SAP_DIVISION_ID AS SAP_DIVISION_ID,
DISC_START_DT AS DISC_START_DT,
BRAND_NAME AS BRAND_NAME,
IMPORT_FLAG AS IMPORT_FLAG,
STATELINE_FLAG AS STATELINE_FLAG,
SIZE_FLD AS SIZE_DESC,
INIT_MKDN_DT AS INIT_MKDN_DT,
STATUS_ID AS STATUS_ID,
STATUS_NAME AS STATUS_NAME,
OLD_ARTICLE_NBR AS OLD_ARTICLE_NBR,
TAX_CLASS_ID AS TAX_CLASS_ID,
TAX_CLASS_DESC AS TAX_CLASS_DESC,
VALUATION_CLASS_CD AS VALUATION_CLASS_CD,
BASE_UOM_CD AS BASE_UOM_CD,
SIGN_TYPE_CD AS SIGN_TYPE_CD,
OWNBRAND_FLAG AS OWNBRAND_FLAG,
COUNTRY_CD AS COUNTRY_CD,
COUNTRY_NAME AS COUNTRY_NAME,
CAD_HTS_CD AS CANADIAN_HTS_CD,
RTV_DEPT_CD AS RTV_DEPT_CD FROM EXPTRANS_3""")

spark.sql("""INSERT INTO SKU_PROFILE_PRE SELECT PRODUCT_ID AS PRODUCT_ID,
DELETE_IND AS DELETE_IND,
ALT_DESC AS ALT_DESC,
BUM_QTY AS BUM_QTY,
BUYER_ID AS BUYER_ID,
BUYER_NAME AS BUYER_NAME,
CONTENTS AS CONTENTS,
CONTENTS_UNIT AS CONTENTS_UNITS,
ADD_DT AS ADD_DT,
DELETE_DT AS DELETE_DT,
HTS_CD AS HTS_CODE_ID,
HTS_DESC AS HTS_CODE_DESC,
PRIMARY_UPC AS PRIMARY_UPC_ID,
PURCH_GROUP_ID AS PURCH_GROUP_ID,
PURCH_GROUP_NAME AS PURCH_GROUP_NAME,
SKU_TYPE AS SKU_TYPE,
SKU_DESC AS SKU_DESC,
SKU_NBR AS SKU_NBR,
SUM_COST AS PURCH_COST_AMT,
WEIGHT_NET AS WEIGHT_NET_AMT,
WEIGHT_UNIT AS WEIGHT_UNIT_DESC,
SAP_CATEGORY_DESC AS SAP_CATEGORY_DESC,
SAP_CATEGORY_ID AS SAP_CATEGORY_ID,
SAP_CLASS_DESC AS SAP_CLASS_DESC,
SAP_CLASS_ID AS SAP_CLASS_ID,
SAP_DEPT_DESC AS SAP_DEPT_DESC,
SAP_DEPT_ID AS SAP_DEPT_ID,
SAP_DIVISION_DESC AS SAP_DIVISION_DESC,
SAP_DIVISION_ID AS SAP_DIVISION_ID,
DISC_START_DT AS DISC_START_DT,
BRAND_NAME AS BRAND_NAME,
IMPORT_FLAG AS IMPORT_FLAG,
STATELINE_FLAG AS STATELINE_FLAG,
SIZE_FLD AS SIZE_DESC,
INIT_MKDN_DT AS INIT_MKDN_DT,
STATUS_ID AS STATUS_ID,
STATUS_NAME AS STATUS_NAME,
OLD_ARTICLE_NBR AS OLD_ARTICLE_NBR,
TAX_CLASS_ID AS TAX_CLASS_ID,
TAX_CLASS_DESC AS TAX_CLASS_DESC,
VALUATION_CLASS_CD AS VALUATION_CLASS_CD,
BASE_UOM_CD AS BASE_UOM_CD,
SIGN_TYPE_CD AS SIGN_TYPE_CD,
OWNBRAND_FLAG AS OWNBRAND_FLAG,
COUNTRY_CD AS COUNTRY_CD,
COUNTRY_NAME AS COUNTRY_NAME,
CAD_HTS_CD AS CANADIAN_HTS_CD,
RTV_DEPT_CD AS RTV_DEPT_CD FROM EXP_COMMON_DATE_TRANS_5""")

spark.sql("""INSERT INTO SKU_PROFILE_PRE SELECT PRODUCT_ID AS PRODUCT_ID,
DELETE_IND AS DELETE_IND,
ALT_DESC AS ALT_DESC,
BUM_QTY AS BUM_QTY,
BUYER_ID AS BUYER_ID,
BUYER_NAME AS BUYER_NAME,
CONTENTS AS CONTENTS,
CONTENTS_UNIT AS CONTENTS_UNITS,
ADD_DT AS ADD_DT,
DELETE_DT AS DELETE_DT,
HTS_CD AS HTS_CODE_ID,
HTS_DESC AS HTS_CODE_DESC,
PRIMARY_UPC AS PRIMARY_UPC_ID,
PURCH_GROUP_ID AS PURCH_GROUP_ID,
PURCH_GROUP_NAME AS PURCH_GROUP_NAME,
SKU_TYPE AS SKU_TYPE,
SKU_DESC AS SKU_DESC,
SKU_NBR AS SKU_NBR,
SUM_COST AS PURCH_COST_AMT,
WEIGHT_NET AS WEIGHT_NET_AMT,
WEIGHT_UNIT AS WEIGHT_UNIT_DESC,
SAP_CATEGORY_DESC AS SAP_CATEGORY_DESC,
SAP_CATEGORY_ID AS SAP_CATEGORY_ID,
SAP_CLASS_DESC AS SAP_CLASS_DESC,
SAP_CLASS_ID AS SAP_CLASS_ID,
SAP_DEPT_DESC AS SAP_DEPT_DESC,
SAP_DEPT_ID AS SAP_DEPT_ID,
SAP_DIVISION_DESC AS SAP_DIVISION_DESC,
SAP_DIVISION_ID AS SAP_DIVISION_ID,
DISC_START_DT AS DISC_START_DT,
BRAND_NAME AS BRAND_NAME,
IMPORT_FLAG AS IMPORT_FLAG,
STATELINE_FLAG AS STATELINE_FLAG,
SIZE_FLD AS SIZE_DESC,
INIT_MKDN_DT AS INIT_MKDN_DT,
STATUS_ID AS STATUS_ID,
STATUS_NAME AS STATUS_NAME,
OLD_ARTICLE_NBR AS OLD_ARTICLE_NBR,
TAX_CLASS_ID AS TAX_CLASS_ID,
TAX_CLASS_DESC AS TAX_CLASS_DESC,
VALUATION_CLASS_CD AS VALUATION_CLASS_CD,
BASE_UOM_CD AS BASE_UOM_CD,
SIGN_TYPE_CD AS SIGN_TYPE_CD,
OWNBRAND_FLAG AS OWNBRAND_FLAG,
COUNTRY_CD AS COUNTRY_CD,
COUNTRY_NAME AS COUNTRY_NAME,
CAD_HTS_CD AS CANADIAN_HTS_CD,
RTV_DEPT_CD AS RTV_DEPT_CD FROM EXP_COMMON_DATE_TRANS_5""")

spark.sql("""INSERT INTO SKU_PROFILE_PRE SELECT PRODUCT_ID AS PRODUCT_ID,
DELETE_IND AS DELETE_IND,
ALT_DESC AS ALT_DESC,
BUM_QTY AS BUM_QTY,
BUYER_ID AS BUYER_ID,
BUYER_NAME AS BUYER_NAME,
CONTENTS AS CONTENTS,
CONTENTS_UNIT AS CONTENTS_UNITS,
ADD_DT AS ADD_DT,
DELETE_DT AS DELETE_DT,
HTS_CD AS HTS_CODE_ID,
HTS_DESC AS HTS_CODE_DESC,
PRIMARY_UPC AS PRIMARY_UPC_ID,
PURCH_GROUP_ID AS PURCH_GROUP_ID,
PURCH_GROUP_NAME AS PURCH_GROUP_NAME,
SKU_TYPE AS SKU_TYPE,
SKU_DESC AS SKU_DESC,
SKU_NBR AS SKU_NBR,
SUM_COST AS PURCH_COST_AMT,
WEIGHT_NET AS WEIGHT_NET_AMT,
WEIGHT_UNIT AS WEIGHT_UNIT_DESC,
SAP_CATEGORY_DESC AS SAP_CATEGORY_DESC,
SAP_CATEGORY_ID AS SAP_CATEGORY_ID,
SAP_CLASS_DESC AS SAP_CLASS_DESC,
SAP_CLASS_ID AS SAP_CLASS_ID,
SAP_DEPT_DESC AS SAP_DEPT_DESC,
SAP_DEPT_ID AS SAP_DEPT_ID,
SAP_DIVISION_DESC AS SAP_DIVISION_DESC,
SAP_DIVISION_ID AS SAP_DIVISION_ID,
DISC_START_DT AS DISC_START_DT,
BRAND_NAME AS BRAND_NAME,
IMPORT_FLAG AS IMPORT_FLAG,
STATELINE_FLAG AS STATELINE_FLAG,
SIZE_FLD AS SIZE_DESC,
INIT_MKDN_DT AS INIT_MKDN_DT,
STATUS_ID AS STATUS_ID,
STATUS_NAME AS STATUS_NAME,
OLD_ARTICLE_NBR AS OLD_ARTICLE_NBR,
TAX_CLASS_ID AS TAX_CLASS_ID,
TAX_CLASS_DESC AS TAX_CLASS_DESC,
VALUATION_CLASS_CD AS VALUATION_CLASS_CD,
BASE_UOM_CD AS BASE_UOM_CD,
SIGN_TYPE_CD AS SIGN_TYPE_CD,
OWNBRAND_FLAG AS OWNBRAND_FLAG,
COUNTRY_CD AS COUNTRY_CD,
COUNTRY_NAME AS COUNTRY_NAME,
CAD_HTS_CD AS CANADIAN_HTS_CD,
RTV_DEPT_CD AS RTV_DEPT_CD FROM EXP_MARKDOWN_DATE_4""")

spark.sql("""INSERT INTO SKU_PROFILE_PRE SELECT PRODUCT_ID AS PRODUCT_ID,
DELETE_IND AS DELETE_IND,
ALT_DESC AS ALT_DESC,
BUM_QTY AS BUM_QTY,
BUYER_ID AS BUYER_ID,
BUYER_NAME AS BUYER_NAME,
CONTENTS AS CONTENTS,
CONTENTS_UNIT AS CONTENTS_UNITS,
ADD_DT AS ADD_DT,
DELETE_DT AS DELETE_DT,
HTS_CD AS HTS_CODE_ID,
HTS_DESC AS HTS_CODE_DESC,
PRIMARY_UPC AS PRIMARY_UPC_ID,
PURCH_GROUP_ID AS PURCH_GROUP_ID,
PURCH_GROUP_NAME AS PURCH_GROUP_NAME,
SKU_TYPE AS SKU_TYPE,
SKU_DESC AS SKU_DESC,
SKU_NBR AS SKU_NBR,
SUM_COST AS PURCH_COST_AMT,
WEIGHT_NET AS WEIGHT_NET_AMT,
WEIGHT_UNIT AS WEIGHT_UNIT_DESC,
SAP_CATEGORY_DESC AS SAP_CATEGORY_DESC,
SAP_CATEGORY_ID AS SAP_CATEGORY_ID,
SAP_CLASS_DESC AS SAP_CLASS_DESC,
SAP_CLASS_ID AS SAP_CLASS_ID,
SAP_DEPT_DESC AS SAP_DEPT_DESC,
SAP_DEPT_ID AS SAP_DEPT_ID,
SAP_DIVISION_DESC AS SAP_DIVISION_DESC,
SAP_DIVISION_ID AS SAP_DIVISION_ID,
DISC_START_DT AS DISC_START_DT,
BRAND_NAME AS BRAND_NAME,
IMPORT_FLAG AS IMPORT_FLAG,
STATELINE_FLAG AS STATELINE_FLAG,
SIZE_FLD AS SIZE_DESC,
INIT_MKDN_DT AS INIT_MKDN_DT,
STATUS_ID AS STATUS_ID,
STATUS_NAME AS STATUS_NAME,
OLD_ARTICLE_NBR AS OLD_ARTICLE_NBR,
TAX_CLASS_ID AS TAX_CLASS_ID,
TAX_CLASS_DESC AS TAX_CLASS_DESC,
VALUATION_CLASS_CD AS VALUATION_CLASS_CD,
BASE_UOM_CD AS BASE_UOM_CD,
SIGN_TYPE_CD AS SIGN_TYPE_CD,
OWNBRAND_FLAG AS OWNBRAND_FLAG,
COUNTRY_CD AS COUNTRY_CD,
COUNTRY_NAME AS COUNTRY_NAME,
CAD_HTS_CD AS CANADIAN_HTS_CD,
RTV_DEPT_CD AS RTV_DEPT_CD FROM BUYERID_2""")
