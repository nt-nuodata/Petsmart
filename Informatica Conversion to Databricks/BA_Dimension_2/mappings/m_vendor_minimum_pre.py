# Databricks notebook source
# MAGIC %run "./udf_informatica"

# COMMAND ----------


from pyspark.sql.types import *

spark.sql("use DELTA_TRAINING")
spark.sql("set spark.sql.legacy.timeParserPolicy = LEGACY")


# COMMAND ----------

# DBTITLE 1, VENDOR_MINIMUM_FLATFILE_0

df_0=spark.sql("""
    SELECT
        DELETE_IND AS DELETE_IND,
        VENDOR_ID AS VENDOR_ID,
        STORE_NBR AS STORE_NBR,
        SKU_NBR AS SKU_NBR,
        SEARCH_LEVEL AS SEARCH_LEVEL,
        MIN_DOLLARS AS MIN_DOLLARS,
        MAX_DOLLARS AS MAX_DOLLARS,
        MIN_QTY AS MIN_QTY,
        MIN_QTY_UOM AS MIN_QTY_UOM,
        MAX_QTY AS MAX_QTY,
        MAX_QTY_UOM AS MAX_QTY_UOM,
        MIN_VOLUME_CFT AS MIN_VOLUME_CFT,
        MAX_VOLUMNE_CFT AS MAX_VOLUMNE_CFT,
        MIN_WEIGHT_LBS AS MIN_WEIGHT_LBS,
        MAX_WEIGHT_LBS AS MAX_WEIGHT_LBS,
        monotonically_increasing_id() AS Monotonically_Increasing_Id 
    FROM
        VENDOR_MINIMUM_FLATFILE""")

df_0.createOrReplaceTempView("VENDOR_MINIMUM_FLATFILE_0")

# COMMAND ----------

# DBTITLE 1, SQ_Shortcut_To_VENDOR_MINIMUM_FLATFILE_1

df_1=spark.sql("""
    SELECT
        STORE_NBR AS STORE_NBR,
        VENDOR_ID AS VENDOR_ID,
        SKU_NBR AS SKU_NBR,
        SEARCH_LEVEL AS SEARCH_LEVEL,
        MIN_DOLLARS AS MIN_DOLLARS,
        MAX_DOLLARS AS MAX_DOLLARS,
        MIN_QTY AS MIN_QTY,
        MIN_QTY_UOM AS MIN_QTY_UOM,
        MAX_QTY AS MAX_QTY,
        MAX_QTY_UOM AS MAX_QTY_UOM,
        MIN_VOLUME_CFT AS MIN_VOLUME_CFT,
        MAX_VOLUME_CFT AS MAX_VOLUME_CFT,
        MIN_WEIGHT_LBS AS MIN_WEIGHT_LBS,
        MAX_WEIGHT_LBS AS MAX_WEIGHT_LBS,
        DELETE_IND AS DELETE_IND,
        Monotonically_Increasing_Id AS Monotonically_Increasing_Id 
    FROM
        VENDOR_MINIMUM_FLATFILE_0""")

df_1.createOrReplaceTempView("SQ_Shortcut_To_VENDOR_MINIMUM_FLATFILE_1")

# COMMAND ----------

# DBTITLE 1, EXPTRANS_2

df_2=spark.sql("""
    SELECT
        DELETE_IND AS DELETE_IND,
        V_LOAD_DT AS LOAD_DT,
        Monotonically_Increasing_Id AS Monotonically_Increasing_Id 
    FROM
        SQ_Shortcut_To_VENDOR_MINIMUM_FLATFILE_1""")

df_2.createOrReplaceTempView("EXPTRANS_2")

# COMMAND ----------

# DBTITLE 1, VENDOR_MINIMUM_PRE

spark.sql("""INSERT INTO VENDOR_MINIMUM_PRE SELECT VENDOR_ID AS VENDOR_ID,
STORE_NBR AS STORE_NBR,
SKU_NBR AS SKU_NBR,
SEARCH_LEVEL AS SEARCH_LEVEL,
DELETE_IND AS DELETE_IND,
MIN_DOLLARS AS MIN_AMT,
MAX_DOLLARS AS MAX_AMT,
MIN_QTY AS MIN_QTY,
MIN_QTY_UOM AS MIN_QTY_UOM_CD,
MAX_QTY AS MAX_QTY,
MAX_QTY_UOM AS MAX_QTY_UOM_CD,
MIN_VOLUME_CFT AS MIN_VOLUME_CFT,
MAX_VOLUME_CFT AS MAX_VOLUME_CFT,
MIN_WEIGHT_LBS AS MIN_WEIGHT_LBS,
MAX_WEIGHT_LBS AS MAX_WEIGHT_LBS,
LOAD_DT AS LOAD_DT FROM SQ_Shortcut_To_VENDOR_MINIMUM_FLATFILE_1""")

spark.sql("""INSERT INTO VENDOR_MINIMUM_PRE SELECT VENDOR_ID AS VENDOR_ID,
STORE_NBR AS STORE_NBR,
SKU_NBR AS SKU_NBR,
SEARCH_LEVEL AS SEARCH_LEVEL,
DELETE_IND AS DELETE_IND,
MIN_DOLLARS AS MIN_AMT,
MAX_DOLLARS AS MAX_AMT,
MIN_QTY AS MIN_QTY,
MIN_QTY_UOM AS MIN_QTY_UOM_CD,
MAX_QTY AS MAX_QTY,
MAX_QTY_UOM AS MAX_QTY_UOM_CD,
MIN_VOLUME_CFT AS MIN_VOLUME_CFT,
MAX_VOLUME_CFT AS MAX_VOLUME_CFT,
MIN_WEIGHT_LBS AS MIN_WEIGHT_LBS,
MAX_WEIGHT_LBS AS MAX_WEIGHT_LBS,
LOAD_DT AS LOAD_DT FROM EXPTRANS_2""")
